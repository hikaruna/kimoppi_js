{"version":3,"sources":["webpack:///webpack/bootstrap e245dd63de6b0877ef44","webpack:///./src/main.js","webpack:///./~/phina.js/build/phina.js","webpack:///./src/main_scene.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;;;;;;;;;ACTD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA,EAAC;AACD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA,OAAM;;AAEN;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;;;;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,EAAE;AACtD;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA,EAAC;;;;AAID;AACA;AACA;;;AAGA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,gBAAgB;;AAEpC;AACA;AACA;;AAEA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,MAAM;AAC3B;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,MAAM;AAC3B;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,+CAA8C,wBAAwB;;AAEtE;AACA;AACA;AACA;AACA,gDAA+C,yBAAyB;;AAExE;AACA;AACA;AACA;AACA,gDAA+C,yBAAyB;;AAExE;AACA;AACA;AACA;AACA,gDAA+C,yBAAyB;;AAExE;AACA;AACA;AACA;AACA,+CAA8C,wBAAwB;;AAEtE;AACA;AACA;AACA;AACA,+CAA8C,wBAAwB;;AAEtE;AACA;AACA;AACA;AACA,+CAA8C,wBAAwB;;AAEtE;AACA;AACA;AACA;AACA,oDAAmD,+BAA+B;;AAElF;AACA;AACA;AACA;AACA,oDAAmD,+BAA+B;;AAElF;AACA;AACA;AACA;AACA,yDAAwD,oCAAoC;;AAE5F;AACA;AACA;AACA;AACA,uDAAsD,kCAAkC;;AAExF;AACA;AACA;AACA;AACA,+CAA8C,wBAAwB;;AAEtE;AACA;AACA;AACA;AACA,gDAA+C,yBAAyB;;AAExE;AACA;AACA;AACA;AACA,+CAA8C,wBAAwB;;AAEtE;AACA;AACA;AACA;AACA,oDAAmD,+BAA+B,EAAE;;AAEpF;AACA;AACA;AACA;AACA,oDAAmD,6BAA6B,EAAE;;AAElF,EAAC;;;AAGD;AACA;AACA;;;AAGA,EAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B,EAAE,IAAI,EAAE,IAAI,EAAE,uBAAuB;AAChE,gCAA+B,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW;AACtD;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA4B,OAAO;AACnC,IAAG;;;AAGH;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,iDAAgD,4BAA4B,EAAE;AAC9E,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,gBAAgB;;AAEpC;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,gBAAgB;;AAEpC;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,gBAAgB;;AAEpC;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,KAAK;AACtB;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH,EAAC;;;AAGD;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;AACA;;;AAGA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA,4BAA2B,gBAAgB,EAAE;AAC7C,4BAA2B,aAAa;AACxC,IAAG;;AAEH;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,0BAAyB,4BAA4B,EAAE;AACvD,0BAAyB,yBAAyB;AAClD,IAAG;;AAEH;AACA;AACA;AACA;AACA,wCAAuC,8BAA8B;AACrE;AACA;AACA,0CAAyC;AACzC;AACA,4CAA2C;AAC3C,gDAA+C;AAC/C;AACA,cAAa,MAAM;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,+CAA8C;AAC9C;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,6BAA4B;AAC5B,8BAA6B;AAC7B,4BAA2B;AAC3B;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB,oBAAmB;AACnB,qBAAoB;AACpB,qBAAoB;AACpB,qBAAoB;AACpB;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,wBAAuB;AACvB;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,wBAAuB;AACvB;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC,wBAAuB;AACvB;AACA,cAAa,OAAO;AACpB;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAM,0BAA0B,EAAE,uBAAuB;AACzD;AACA;AACA,2BAA0B;AAC1B;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,OAAM,0BAA0B,EAAE,uBAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,OAAM,0BAA0B,EAAE,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,yBAAwB;AACxB;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,8BAA6B;AAC7B;AACA,eAAc;AACd;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA,eAAc;AACd;AACA,cAAa,QAAQ;AACrB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,oCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,8BAA6B;AAC7B;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA,sBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,0BAAyB;AACzB,8BAA6B;AAC7B,2BAA0B;AAC1B;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,mCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA,kCAAiC,OAAO;AACxC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA,mBAAkB,yBAAyB;AAC3C;AACA,gCAA+B;AAC/B;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,4BAA2B;AAC3B;AACA,cAAa,OAAO;AACpB,eAAc,MAAM;AACpB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,kBAAkB,GAAG;AAClE,4BAA2B;AAC3B;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,eAAc,MAAM;AACpB;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA,qBAAoB,8BAA8B;AAClD;AACA,mCAAkC,QAAQ;AAC1C;AACA,sBAAqB,SAAS,GAAG,aAAa,GAAG,aAAa;AAC9D,kCAAiC,YAAY,MAAM;AACnD,kCAAiC,YAAY,MAAM;AACnD;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAsC;;AAEtC,yCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,QAAQ;AAChD,yBAAwB;AACxB,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG,E;;AAEH,EAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;AACD;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;;AAEA;;AAEA,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA,6CAA4C,aAAa;AACzD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA4C;AAC5C,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,IAAG;;;AAGH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;;AAIA,EAAC;;;;;;;;;;AAUD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,iBAAgB;AAChB;AACA;AACA,gBAAe,GAAG,EAAE,KAAK,GAAG;AAC5B,MAAK;;AAEL;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,sBAAqB,gBAAgB;AACrC,sBAAqB,gBAAgB;AACrC,sBAAqB,gBAAgB;;AAErC;AACA,MAAK;;AAEL;AACA,oBAAmB,cAAc;AACjC,oBAAmB,cAAc;AACjC,oBAAmB,cAAc;AACjC;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,0BAAyB,oBAAoB;AAC7C,0BAAyB,oBAAoB;AAC7C,0BAAyB,oBAAoB;;AAE7C;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,0BAAyB,oBAAoB;AAC7C,0BAAyB,oBAAoB;AAC7C,0BAAyB,oBAAoB;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,iBAAgB,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;AAChF,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,8BAA6B,gBAAgB,EAAE;AAC/C,8BAA6B,aAAa;AAC1C,QAAO;AACP;;AAEA,IAAG;;;AAGH;;AAEA,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA6B,eAAe,EAAE;AAC9C,8BAA6B,wBAAwB,YAAY;AACjE,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,eAAe,EAAE;AAC9C,8BAA6B,yBAAyB,YAAY;AAClE,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,4BAA4B,EAAE;AAC3D,8BAA6B,4BAA4B,EAAE;AAC3D,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D,8BAA6B,8BAA8B,EAAE;AAC7D,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,8BAA8B,EAAE;AAC7D;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,+BAA+B,EAAE;AAC9D;AACA;AACA,UAAS;AACT,QAAO;AACP;;AAEA,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,sBAAsB,EAAE;AACrD;AACA;AACA,UAAS;AACT,QAAO;AACP;;AAEA,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAqC,OAAO;AAC5C;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA,gBAAe;AACf;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,6BAA4B,2BAA2B;AACvD,sCAAqC,KAAK,OAAO,EAAE;AACnD;AACA,UAAS;AACT;AACA;AACA;AACA,6BAA4B,2BAA2B;AACvD,sCAAqC,KAAK,OAAO,EAAE;AACnD;AACA,UAAS;AACT;AACA;AACA;AACA,6BAA4B,6BAA6B;AACzD,sCAAqC,KAAK,OAAO,EAAE;AACnD;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;;;;AAID,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,8BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;;AAED,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;;AAID;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;AAED,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX,UAAS;AACT,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;AACD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAgB,GAAG,GAAG,EAAE;AACxB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,oBAAmB,EAAE,EAAE,EAAE,EAAE,EAAE;AAC7B;AACA;AACA;AACA,QAAO;AACP,MAAK;;;AAGL;AACA;AACA;AACA;AACA,qBAAoB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAClC;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA,qBAAoB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAClC;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;;;AAGH;AACA;AACA,mBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,mBAAkB,EAAE,KAAK,EAAE,KAAK,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,uBAAsB,IAAI,SAAS,IAAI,SAAS,IAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,wBAAuB,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,EAAE,IAAI,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,uBAAsB,IAAI,SAAS,IAAI,UAAU,IAAI;AACrD;AACA;AACA;AACA,MAAK;AACL;AACA,wBAAuB,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,EAAE,IAAI,EAAE;AACtE;AACA;AACA,QAAO;AACP;AACA;;AAEA,EAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA,0BAAyB,mBAAmB,EAAE;AAC9C,4BAA2B,6BAA6B,EAAE;AAC1D,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,QAAO;;AAEP,MAAK;AACL,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,UAAU;AAC9E;AACA;AACA;AACA;AACA,UAAS,IAAI;AACb,QAAO;AACP;AACA;AACA;AACA,qEAAoE,UAAU;AAC9E;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA,4BAA2B,EAAE;;AAE7B,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,kBAAiB;AACjB,wBAAuB;AACvB,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA4B;AAC5B;AACA,QAAO;;AAEP;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA,UAAS;AACT,QAAO;;;AAGP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,gBAAe;AACf,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,sDAAqD;AACrD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,EAAE;;AAEhD;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;;AAEb,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,2BAA0B,iCAAiC,EAAE;AAC7D,2BAA0B,8BAA8B,EAAE;AAC1D,QAAO;AACP;AACA,2BAA0B,mBAAmB,EAAE;AAC/C;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,2BAA0B,wBAAwB,EAAE;AACpD;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,2BAA0B,sBAAsB,EAAE;AAClD;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAO;;AAEP;AACA,kCAAiC,SAAS;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,kCAAiC,SAAS;AAC1C;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,kCAAiC,SAAS;AAC1C;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA,+BAA8B;AAC9B;AACA,2BAA0B;AAC1B;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,gBAAgB,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE;AACnF;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,4DAA2D,sCAAsC,YAAY;AAC7G;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL,IAAG;AACH,EAAC;;;AAGD,EAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,wBAAwB,EAAE;AACvD,8BAA6B,qBAAqB;AAClD,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,wBAAwB,EAAE;AACvD,8BAA6B,qBAAqB;AAClD,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D,8BAA6B,0BAA0B;AACvD,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D,8BAA6B,0BAA0B;AACvD,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D,8BAA6B,0BAA0B;AACvD,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B,EAAE;AAC5D,8BAA6B,0BAA0B;AACvD,QAAO;;AAEP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;;AAGH,EAAC;;AAED,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,yDAAwD,+BAA+B;AACvF,8DAA6D,mCAAmC;AAChG,4DAA2D,iCAAiC;;AAE5F,EAAC;;AAED,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,EAAC;;;AAGD,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;AACD;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAA+B,yBAAyB;AACxD;AACA;AACA;AACA,8BAA6B,uBAAuB;AACpD;AACA;AACA;AACA,iCAAgC,0BAA0B;AAC1D;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB,cAAc;AAC/B,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB,cAAc;AAC/B,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB,cAAc;AAC/B,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP;AACA,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAiD,SAAS;AAC1D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,2BAA2B;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAoD,UAAU;AAC9D;AACA;;AAEA,kDAAiD,UAAU;AAC3D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,kDAAiD,UAAU;AAC3D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,yCAAwC;AACxC,wCAAuC;AACvC,yCAAwC;AACxC,UAAS;AACT;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;;;AAGA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;;AAGH,EAAC;;AAED;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;;AAGH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,yBAAwB;;AAExB;AACA;AACA,8BAA6B,uCAAuC,EAAE;AACtE,8BAA6B,oCAAoC,EAAE;AACnE,QAAO;;AAEP;AACA,8BAA6B,wBAAwB,EAAE;AACvD,8BAA6B,qBAAqB,EAAE;AACpD,QAAO;;AAEP;AACA,6BAA4B,0BAA0B,EAAE;AACxD,8BAA6B,uBAAuB,EAAE;AACtD,QAAO;;AAEP;AACA,6BAA4B,wBAAwB,EAAE;AACtD,8BAA6B,qBAAqB,EAAE;AACpD,QAAO;;AAEP;AACA,6BAA4B,8BAA8B,EAAE;AAC5D,QAAO;;AAEP;AACA,6BAA4B,gCAAgC,EAAE;AAC9D,QAAO;;AAEP;AACA,6BAA4B,gCAAgC,EAAE;AAC9D,QAAO;;AAEP;AACA,6BAA4B,8BAA8B,EAAE;AAC5D,QAAO;AACP,MAAK;;AAEL,IAAG;;;AAGH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,4BAA2B,oBAAoB;;AAE/C;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B,qBAAqB;AAC/C,2BAA0B,qBAAqB;AAC/C,4BAA2B,sBAAsB;AACjD,4BAA2B,sBAAsB;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,wBAAwB,EAAE;AACvD,8BAA6B,qBAAqB;AAClD,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA6B,wBAAwB,EAAE;AACvD,8BAA6B,qBAAqB;AAClD,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,sBAAsB,EAAE;AACrD,8BAA6B,mBAAmB;AAChD,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,sBAAsB,EAAE;AACrD,8BAA6B,mBAAmB;AAChD,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,qBAAqB,EAAE;AACpD,8BAA6B,kBAAkB;AAC/C,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,qBAAqB,EAAE;AACpD,8BAA6B,kBAAkB;AAC/C,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,8BAA6B,iBAAiB;AAC9C,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,8BAA6B,kBAAkB;AAC/C,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,0CAA0C,EAAE;AACzE,8BAA6B,uCAAuC,EAAE;AACtE,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,6CAA6C,EAAE;AAC5E,8BAA6B,0CAA0C,EAAE;AACzE,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,8CAA8C,EAAE;AAC7E,8BAA6B,2CAA2C,EAAE;AAC1E,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,yCAAyC,EAAE;AACxE,8BAA6B,sCAAsC,EAAE;AACrE,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,wDAAwD,EAAE;AACvF;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,8BAA6B,0DAA0D,EAAE;AACzF;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;;AAGH,EAAC;;AAED;;;AAGA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH,EAAC;;;;;;;AAOD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA,uBAAsB,aAAa;AACnC,MAAK;AACL;AACA,uBAAsB,aAAa;AACnC,MAAK;;AAEL;AACA,uBAAsB,qBAAqB;AAC3C,MAAK;AACL;AACA,uBAAsB,qBAAqB;AAC3C,MAAK;;AAEL;AACA,uBAAsB,+BAA+B;AACrD,MAAK;AACL;AACA,uBAAsB,+BAA+B;AACrD,MAAK;;AAEL;AACA,uBAAsB,eAAe;AACrC,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;;AAET;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;;AAET;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;;AAET;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;;AAEA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;AACD;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH,EAAC;AACD;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH,EAAC;;;;;;AAMD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,E;;AAEH,EAAC;;;AAGD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0DAAyD;AACzD,qCAAoC;AACpC;AACA;;AAEA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;;AAEd;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,2CAA0C,OAAO;AACjD;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yEAAwE;AACxE,yEAAwE;AACxE,yEAAwE;AACxE,yEAAwE;AACxE;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B;AAC/B,gCAA+B;AAC/B,sBAAqB;AACrB,sBAAqB;AACrB,0BAAyB;AACzB,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA,8BAA6B,0BAA0B,EAAE;AACzD,8BAA6B,uBAAuB;AACpD,QAAO;;AAEP;AACA;AACA;AACA;AACA,8BAA6B,2BAA2B,EAAE;AAC1D,8BAA6B,wBAAwB;AACrD,QAAO;;AAEP;AACA,8BAA6B,+BAA+B,EAAE;AAC9D,8BAA6B,4BAA4B;AACzD,QAAO;;AAEP;AACA,8BAA6B,iCAAiC,EAAE;AAChE,8BAA6B,8BAA8B;AAC3D,QAAO;;AAEP;AACA,8BAA6B,iCAAiC,EAAE;AAChE,8BAA6B,8BAA8B;AAC3D,QAAO;;AAEP;AACA,8BAA6B,8CAA8C,EAAE;AAC7E,8BAA6B,2CAA2C;AACxE,QAAO;;AAEP;AACA,8BAA6B,gCAAgC,EAAE;AAC/D,8BAA6B,6BAA6B;AAC1D,QAAO;;AAEP;AACA,8BAA6B,iCAAiC,EAAE;AAChE,8BAA6B,8BAA8B;AAC3D,QAAO;;AAEP;AACA,8BAA6B,mCAAmC,EAAE;AAClE,8BAA6B,gCAAgC;AAC7D,QAAO;;AAEP;AACA,8BAA6B,mCAAmC,EAAE;AAClE,8BAA6B,gCAAgC;AAC7D,QAAO;;AAEP;AACA,8BAA6B,6BAA6B,EAAE;AAC5D,8BAA6B,0BAA0B;AACvD,QAAO;;AAEP;AACA,8BAA6B,8BAA8B,EAAE;AAC7D,8BAA6B,2BAA2B;AACxD,QAAO;;AAEP;AACA,8BAA6B,gCAAgC,EAAE;AAC/D,8BAA6B,6BAA6B;AAC1D,QAAO;;AAEP;AACA,8BAA6B,+BAA+B,EAAE;AAC9D,8BAA6B,4BAA4B;AACzD,QAAO;;AAEP;AACA,8BAA6B,0BAA0B,EAAE;AACzD,8BAA6B,uBAAuB;AACpD,QAAO;;AAEP;AACA,8BAA6B,+BAA+B,EAAE;AAC9D,8BAA6B,4BAA4B;AACzD,QAAO;;AAEP;AACA,8BAA6B,kCAAkC,EAAE;AACjE,8BAA6B,+BAA+B;AAC5D,QAAO;;AAEP;AACA,8BAA6B,2CAA2C,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;AACH,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,wCAAuC;AACvC;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,IAAG;;;AAGH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA8B;;AAE9B;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kG;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;;AAEA,MAAK;AACL;;AAEA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL,IAAG;AACH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,qBAAqB;;AAExC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC,SAAS;AAClD;AACA,6BAA4B,eAAe;AAC3C,6BAA4B,eAAe;AAC3C,6BAA4B,eAAe;AAC3C,6BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAkB,oBAAoB;AACtC,oBAAmB,sBAAsB;;AAEzC;AACA,MAAK;;AAEL;AACA,sCAAqC;AACrC,wCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,0BAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,0BAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA,oBAAmB;;AAEnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,0BAAyB,mBAAmB,EAAE;AAC9C;AACA;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA,oBAAmB,WAAW,EAAE,SAAS,IAAI,WAAW;AACxD,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;;AAID;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA,IAAG;;;AAGH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;AACL,IAAG;AACH,EAAC;;;;;AAKD;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,8CAA6C,OAAO;AACpD;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kDAAiD,OAAO;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C,OAAO;AACtD;AACA;AACA;;AAEA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;;AAEA;AACA,mEAAkE,UAAU,EAAE;AAC9E,kEAAiE,UAAU,EAAE;;AAE7E;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL,IAAG;;;AAGH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;AACH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA,cAAa,4BAA4B;AACzC;AACA;AACA,UAAS;AACT,MAAK;AACL,IAAG;;AAEH,EAAC;;;;;AAKD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,oBAAmB,WAAW,EAAE,SAAS,IAAI,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,gBAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;;;AAIH,EAAC;;;;AAID;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,sDAAqD;AACrD,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,WAAW;;AAEjC;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;;AAEP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,aAAY;;AAEZ;AACA;AACA,aAAY;;AAEZ;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;;AAGL;AACA;;AAEA;;AAEA;AACA,0CAAyC,EAAE;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0CAAyC,EAAE;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,QAAQ;AACrB;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,cAAa;AACb,YAAW;AACX,UAAS;;AAET;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;;AAElB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA,QAAO;;AAEP;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,6BAA4B,EAAE,GAAG,EAAE;AACnC;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;AACX;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;;AAGL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW;AACX;AACA,QAAO;;AAEP;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL,IAAG;;AAEH,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+BAA8B;AAC9B;AACA,QAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;;AAEP;AACA,iCAAgC;AAChC;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;;AAET;AACA;AACA,UAAS;AACT;;AAEA;AACA,QAAO;AACP,MAAK;AACL,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA,iCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,qBAAoB,QAAQ,EAAE,KAAK,EAAE,MAAM;AAC3C;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,QAAO;AACP;AACA,IAAG;;AAEH,EAAC;;;AAGD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,6BAA4B;AAC5B;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH,EAAC;;;;;AAKD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH,EAAC;;;;;AAKD;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;;AAGH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;;AAGH,EAAC;;;;;;;;;;;;AC3tZD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,wCAAuC;AACvC,+BAA8B;AAC9B,IAAG;AACH,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e245dd63de6b0877ef44\n **/","var phina = require('phina.js');\nphina.globalize();\nrequire('main_scene');\n\nphina.main(function() {\n  var app = GameApp({\n    startLabel: 'main',\n  });\n  app.run();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main.js\n ** module id = 0\n ** module chunks = 0\n **/","/* \n * phina.js 0.2.0\n * phina.js is a game library in javascript\n * MIT Licensed\n * \n * Copyright (C) 2015 phi, http://phinajs.com\n */\n\n\n'use strict';\n\n/*\n *\n */\n\n\n;(function() {\n  /**\n   * @class global.Object\n   * Objectの拡張\n   */\n\n  \n  /**\n   * @method property\n   * 変数を追加\n   * @param   {String} key name\n   * @param   {Object} param\n   */\n  // Object.defineProperty(Object.prototype, \"property\", {\n  //   value: function(name, val) {\n  //     Object.defineProperty(this, name, {\n  //       value: val,\n  //       enumerable: true,\n  //       writable: true\n  //     });\n  //   }\n  // });\n\n  /**\n   * @method method\n   * 関数を追加\n   * @param   {String} key name\n   * @param   {Function} function\n   */\n  Object.defineProperty(Object.prototype, \"$method\", {\n    value: function(name, fn) {\n      Object.defineProperty(this, name, {\n        value: fn,\n        enumerable: false,\n        writable: true\n      });\n    }\n  });\n\n\n\n  /**\n   * @method setter\n   * セッターを定義する\n   */\n  Object.prototype.$method(\"setter\", function(name, fn){\n    Object.defineProperty(this, name, {\n      set: fn,\n      enumerable: false,\n      configurable: true,\n    });\n  });\n\n  /**\n   * @method getter\n   * ゲッターを定義する\n   */\n  Object.prototype.$method(\"getter\", function(name, fn){\n    Object.defineProperty(this, name, {\n      get: fn,\n      enumerable: false,\n      configurable: true,\n    });\n  });\n\n  /**\n   * @method accessor\n   * アクセッサ(セッター/ゲッター)を定義する\n   */\n  Object.prototype.$method(\"accessor\", function(name, param) {\n    Object.defineProperty(this, name, {\n      set: param[\"set\"],\n      get: param[\"get\"],\n      enumerable: false,\n      configurable: true,\n    });\n  });\n\n\n  /**\n   * @method forIn\n   * オブジェクト用ループ処理\n   */\n  Object.prototype.$method(\"forIn\", function(fn, self) {\n    self = self || this;\n\n    Object.keys(this).forEach(function(key, index) {\n      var value = this[key];\n\n      fn.call(self, key, value, index);\n    }, this);\n\n    return this;\n  });\n\n  /**\n   * @method  $get\n   * パス指定で値を取得\n   */\n  Object.prototype.$method('$get', function(key) {\n    return key.split('.').reduce(function(t, v) {\n      return t && t[v];\n    }, this);\n  });\n\n  /**\n   * @method  $set\n   * パス指定で値を設定\n   */\n  Object.prototype.$method('$set', function(key, value) {\n    key.split('.').reduce(function(t, v, i, arr) {\n      if (i === (arr.length-1)) {\n        t[v] = value;\n      }\n      else {\n        if (!t[v]) t[v] = {};\n        return t[v];\n      }\n    }, this);\n  });\n\n  /**\n   * @method  $has\n   * そのプロパティを持っているかを判定する\n   */\n  Object.prototype.$method(\"$has\", function(key) {\n    return this.hasOwnProperty(key);\n  });\n\n  /**\n   * @method  $extend\n   * 他のライブラリと競合しちゃうので extend -> $extend としました\n   */\n  Object.prototype.$method(\"$extend\", function() {\n    Array.prototype.forEach.call(arguments, function(source) {\n      for (var property in source) {\n        this[property] = source[property];\n      }\n    }, this);\n    return this;\n  });\n\n\n  /**\n   * @method  $safe\n   * 安全拡張\n   * 上書きしない\n   */\n  Object.prototype.$method(\"$safe\", function(source) {\n    Array.prototype.forEach.call(arguments, function(source) {\n      for (var property in source) {\n        if (this[property] === undefined) this[property] = source[property];\n      }\n    }, this);\n    return this;\n  });\n  \n  \n  /**\n   * @method  $strict\n   * 厳格拡張\n   * すでにあった場合は警告\n   */\n  Object.prototype.$method(\"$strict\", function(source) {\n    Array.prototype.forEach.call(arguments, function(source) {\n      for (var property in source) {\n        console.assert(!this[property], \"tm error: {0} is Already\".format(property));\n        this[property] = source[property];\n      }\n    }, this);\n    return this;\n  });\n\n  /**\n   * @method  $pick\n   * ピック\n   */\n  Object.prototype.$method(\"$pick\", function() {\n    var temp = {};\n\n    Array.prototype.forEach.call(arguments, function(key) {\n      if (key in this) temp[key] = this[key];\n    }, this);\n\n    return temp;\n  });\n\n  /**\n   * @method  $omit\n   * オミット\n   */\n  Object.prototype.$method(\"$omit\", function() {\n    var temp = {};\n\n    for (var key in this) {\n      if (Array.prototype.indexOf.call(arguments, key) == -1) {\n        temp[key] = this[key];\n      }\n    }\n\n    return temp;\n  });\n\n  /**\n   * @method  $omit\n   * オミット\n   */\n  Object.prototype.$method(\"$toArray\", function() {\n    return Array.prototype.slice.call(this);\n  });\n\n  Object.prototype.$method('$watch', function(key, callback) {\n    var target = this;\n    var descriptor = null;\n\n    while(target) {\n      descriptor = Object.getOwnPropertyDescriptor(target, key);\n      if (descriptor) {\n        break;\n      }\n      target = Object.getPrototypeOf(target);\n    }\n\n    // すでにアクセッサーとして存在する場合\n    if (descriptor) {\n      // データディスクリプタの場合\n      if (descriptor.value !== undefined) {\n        var tempKey = '__' + key;\n        var tempValue = this[key];\n\n        this[tempKey] = tempValue;\n\n        this.accessor(key, {\n          get: function() {\n            return this[tempKey];\n          },\n          set: function(v) {\n            var old = this[tempKey];\n            this[tempKey] = v;\n            callback.call(this, v, old);\n          },\n        });\n      }\n      // アクセサディスクリプタの場合\n      else {\n        this.accessor(key, {\n          get: function() {\n            return descriptor.get.call(this);\n          },\n          set: function(v) {\n            var old = descriptor.get.call(this);\n            descriptor.set.call(this, v);\n            callback.call(this, v, old);\n          },\n        });\n      }\n    }\n    else {\n      var accesskey = '__' + key;\n\n      this.accessor(key, {\n        get: function() {\n          return this[accesskey];\n        },\n        set: function(v) {\n          var old = this[accesskey];\n          this[accesskey] = v;\n          callback.call(this, v, old);\n        },\n      });\n    }\n  });\n\n  if (!Object.observe) {\n    Object.$method('observe', function(obj, callback) {\n      var keys = Object.keys(obj);\n      keys.forEach(function(key) {\n        var tempKey = '__' + key;\n        var tempValue = obj[key];\n        obj[tempKey] = tempValue;\n        \n        obj.accessor(key, {\n          get: function() {\n            return this[tempKey];\n          },\n          set: function(v) {\n            this[tempKey] = v;\n            callback();\n          },\n        });\n      });\n    });\n  }\n\n  if (!Object.unobserve) {\n    Object.$method('unobserve', function(obj, callback) {\n      console.assert(false);\n    });\n  }\n\n})();\n\n\n\n/*\n *\n */\n\n\n;(function() {\n  /**\n   * @class global.Number\n   * Numberの拡張\n   */\n\n  /**\n   * @method  round\n   * 四捨五入\n   * 桁数指定版\n   */\n  Number.prototype.$method(\"round\", function(figure) {\n    figure = figure || 0;\n    var base = Math.pow(10, figure);\n    var temp = this * base;\n    temp = Math.round(temp);\n    return temp/base;\n  });\n  \n  /**\n   * @method  ceil\n   * 切り上げ.\n   * 桁数指定版\n   */\n  Number.prototype.$method(\"ceil\",  function(figure) {\n    figure = figure || 0;\n    var base = Math.pow(10, figure);\n    var temp = this * base;\n    temp = Math.ceil(temp);\n    return temp/base;\n  });\n  /**\n   * @method  floor\n   * 切り捨て\n   * 桁数指定版\n   */\n  Number.prototype.$method(\"floor\",  function(figure) {\n    figure = figure || 0;\n    var base = Math.pow(10, figure);\n    var temp = this * base;\n    temp = Math.floor(temp);\n    \n    // ~~this\n    // this|0\n    \n    return temp/base;\n  });\n  \n  /**\n   * @method  toInt\n   * integer 型に変換する\n   */\n  Number.prototype.$method(\"toInt\",  function() {\n    return (this | 0);\n  });\n  \n  /**\n   * @method  toHex\n   * 16進数化\n   */\n  Number.prototype.$method(\"toHex\",  function() {\n    return this.toString(16);\n  });\n  \n  /**\n   * @method  toBin\n   * 2進数化\n   */\n  Number.prototype.$method(\"toBin\",  function() {\n    return this.toString(2);\n  });\n  \n  \n  /**\n   * @method  toUnsigned\n   * unsigned 型に変換する\n   */\n  Number.prototype.$method(\"toUnsigned\",  function() {\n    return this >>> 0;\n  });\n  \n  /**\n   * @method  padding\n   * 文字埋め\n   */\n  Number.prototype.$method(\"padding\",  function(n, ch) {\n    var str = this+'';\n    n  = n-str.length;\n    ch = (ch || '0')[0];\n    \n    while(n-- > 0) { str = ch + str; }\n    \n    if (str.indexOf(\"-\") >= 0) {\n      str = \"-\" + str.replace(\"-\", \"\");\n    }\n\n    return str;\n  });\n\n\n  /**\n   * @method  times\n   * 数値分繰り返す\n   */\n  Number.prototype.$method(\"times\",  function(fn, self) {\n    self = self || this;\n    for (var i=0; i<this; ++i) {\n      fn.call(self, i, this);\n    }\n    return this;\n  });\n\n  /**\n   * @method  upto\n   * インクリメント繰り返し\n   */\n  Number.prototype.$method(\"upto\",  function(t, fn, self) {\n    self = self || this;\n    for (var i=+this; i<=t; ++i) {\n      fn.call(self, i, this);\n    }\n    return this;\n  });\n  \n  /**\n   * @method  downto\n   * デクリメント繰り返し\n   */\n  Number.prototype.$method(\"downto\",  function(t, fn, self) {\n    self = self || this;\n    for (var i=+this; i>=t; --i) {\n      fn.call(self, i, this);\n    }\n    return this;\n  });\n\n  /**\n   * @method step\n   * ステップ繰り返し(float対応)\n   */\n  Number.prototype.$method(\"step\",  function(limit, step, fn, self) {\n    self = self || this;\n    if (this < limit && step > 0 || this > limit && step < 0) {\n      for (var i=+this; i<=limit; i+=step) {\n        fn.call(self, i, this);\n      }\n    }\n    return this;\n  });\n\n  /**\n   * @method  map\n   * return で返された値の配列を作る\n   */\n  Number.prototype.$method(\"map\",  function(fn, self) {\n    self = self || this;\n\n    var results = [];\n    for (var i=0; i<this; ++i) {\n      var r = fn.call(self, i);\n      results.push(r);\n    }\n    return results;\n  });\n\n  /**\n   * @method abs\n   * 絶対値\n   */\n  Number.prototype.$method(\"abs\", function() { return Math.abs(this) });\n\n  /**\n   * @method acos\n   * アークコサイン\n   */\n  Number.prototype.$method(\"acos\", function() { return Math.acos(this) });\n\n  /**\n   * @method asin\n   * アークサイン\n   */\n  Number.prototype.$method(\"asin\", function() { return Math.asin(this) });\n\n  /**\n   * @method atan\n   * アークタンジェント\n   */\n  Number.prototype.$method(\"atan\", function() { return Math.atan(this) });\n\n  /**\n   * @method cos\n   * コサイン\n   */\n  Number.prototype.$method(\"cos\", function() { return Math.cos(this) });\n\n  /**\n   * @method exp\n   * E^num\n   */\n  Number.prototype.$method(\"exp\", function() { return Math.exp(this) });\n\n  /**\n   * @method log\n   * 自然対数\n   */\n  Number.prototype.$method(\"log\", function() { return Math.log(this) });\n\n  /**\n   * @method max\n   * max\n   */\n  Number.prototype.$method(\"max\", function(value) { return Math.max(this, value) });\n\n  /**\n   * @method min\n   * min\n   */\n  Number.prototype.$method(\"min\", function(value) { return Math.min(this, value) });\n\n  /**\n   * @method clamp\n   * clamp\n   */\n  Number.prototype.$method(\"clamp\", function(min, max) { return Math.clamp(this, min, max) });\n\n  /**\n   * @method pow\n   * 乗数\n   */\n  Number.prototype.$method(\"pow\", function(exponent) { return Math.pow(this, exponent) });\n\n  /**\n   * @method sin\n   * サイン\n   */\n  Number.prototype.$method(\"sin\", function() { return Math.sin(this) });\n\n  /**\n   * @method sqrt\n   * 平方根\n   */\n  Number.prototype.$method(\"sqrt\", function() { return Math.sqrt(this) });\n\n  /**\n   * @method tan\n   * タンジェント\n   */\n  Number.prototype.$method(\"tan\", function() { return Math.tan(this) });\n\n  /**\n   * @method toDegree\n   * to degree\n   */\n  Number.prototype.$method(\"toDegree\", function() { return (this*Math.RAD_TO_DEG); });\n\n  /**\n   * @method toRadian\n   * to degree\n   */\n  Number.prototype.$method(\"toRadian\", function() { return this*Math.DEG_TO_RAD; });\n\n})();\n\n\n/*\n *\n */\n\n\n;(function() {\n  /**\n   * @class global.String\n   * Stringの拡張\n   * `String` is a global object that may be used to construct String instances.\n   */\n\n  /**\n   * @method  format\n   * フォーマット\n   * ## example\n   *      document.write(\"{0} + {1} = {2}\".format(5, 10, 5+10));   // \"5 + 10 = 15\"\n   *      document.write(\"rgb({r}, {g}, {b})\".format({             // \"rgb(128, 0, 255)\"\n   *          r: 128,\n   *          g: 0,\n   *          b: 255\n   *      }));\n   */\n  String.prototype.$method(\"format\", function(arg) {\n    // 置換ファンク\n    var rep_fn = undefined;\n    \n    // オブジェクトの場合\n    if (typeof arg == \"object\") {\n      /** @ignore */\n      rep_fn = function(m, k) {\n        if (arg[k] === undefined) {\n          return '';\n        }\n        else {\n          return arg[k];\n        }\n      };\n    }\n    // 複数引数だった場合\n    else {\n      var args = arguments;\n      /** @ignore */\n      rep_fn = function(m, k) {\n        var v = args[ parseInt(k) ];\n        if (v !== undefined && v !== null) {\n          return v;\n        }\n        else {\n          return '';\n        }\n      };\n    }\n    \n    return this.replace( /\\{(\\w+)\\}/g, rep_fn );\n  });\n\n\n  /**\n   * @method  trim\n   * トリム\n   * ## example\n   *      \"  Hello, world!  \".trim(); // \"Hello, world!\"\n   * <a href=\"http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\">Reference</a>\n   * \n   */\n  String.prototype.$method(\"trim\", function() {\n    return this.replace(/^\\s+|\\s+$/g, \"\");\n  });\n  \n  /**\n   * @method  capitalize\n   * キャピタライズ\n   * \n   * ## example\n   *      \"i am a pen.\".capitalize(); // \"I Am A Pen.\"\n   * \n   * ## Reference\n   * \n   * - [キャピタライズ(単語の先頭の大文字化)を行う - oct inaodu](http://d.hatena.ne.jp/brazil/20051212/1134369083)\n   * - [デザインとプログラムの狭間で: javascriptでキャピタライズ（一文字目を大文字にする）](http://design-program.blogspot.com/2011/02/javascript.html)\n   * \n   */\n  String.prototype.$method(\"capitalize\", function() {\n    return this.replace(/\\w+/g, function(word){\n      return word.capitalizeFirstLetter();\n    });\n  });\n  \n  /**\n   * @method  capitalizeFirstLetter\n   * 先頭文字のみキャピタライズ\n   */\n  String.prototype.$method(\"capitalizeFirstLetter\", function() {\n    return this.charAt(0).toUpperCase() + this.substr(1).toLowerCase();\n  });\n  \n  /**\n   * @method  toDash\n   * ダッシュ\n   */\n  String.prototype.$method(\"toDash\", function() {\n    return this.replace(/([A-Z])/g, function(m){ return '-'+m.toLowerCase(); });\n  });\n  \n  \n  /**\n   * @method toHash\n   * ハッシュ値に変換\n   */\n  String.prototype.$method(\"toHash\", function() {\n    return this.toCRC32();\n  });\n  \n  /**\n   * @method  padding\n   * 左側に指定された文字を詰めて右寄せにする\n   */\n  String.prototype.$method(\"padding\", function(n, ch) {\n    var str = this.toString();\n    n  = n-str.length;\n    ch = (ch || ' ')[0];\n    \n    while(n-- > 0) { str = ch + str; }\n    \n    return str;\n  });\n  \n  /**\n   * @method  paddingLeft\n   * 左側に指定された文字を詰めて右寄せにする\n   */\n  String.prototype.$method(\"paddingLeft\", function(n, ch) {\n    var str = this.toString();\n    n  = n-str.length;\n    ch = (ch || ' ')[0];\n    \n    while(n-- > 0) { str = ch + str; }\n    \n    return str;\n  });\n  \n  /**\n   * @method  paddingRight\n   * 右側に指定された文字を詰めて左寄せにする\n   */\n  String.prototype.$method(\"paddingRight\", function(n, ch) {\n    var str = this.toString();\n    n  = n-str.length;\n    ch = (ch || ' ')[0];\n    \n    while(n-- > 0) { str = str + ch; }\n    \n    return str;\n  });\n  \n  /**\n   * @method  quotemeta\n   * メタ文字をクォート\n   */\n  String.prototype.$method(\"quotemeta\", function(n) {\n    return this.replace(/([^0-9A-Za-z_])/g, '\\\\$1');\n  });\n  \n  /**\n   * @method  repeat\n   * リピート\n   */\n  String.prototype.$method(\"repeat\", function(n) {\n    // TODO: 確認する\n    var arr = Array(n);\n    for (var i=0; i<n; ++i) arr[i] = this;\n    return arr.join('');\n  });\n  \n  /**\n   * @method  count\n   * その文字が入ってる数をカウント\n   */\n  String.prototype.$method(\"count\", function(str) {\n    var re = new RegExp(str, 'gm');\n    return this.match(re).length;\n  });\n  \n  /**\n   * @method  include\n   * 含んでいるかを返す\n   * ruby のやつ\n   */\n  String.prototype.$method(\"include\", function(str) {\n    return this.indexOf(str) != -1;\n  });\n  \n  /**\n   * @method  toString\n   * 配列に変換\n   */\n  String.prototype.$method(\"toArray\", function() {\n    var arr = [];\n    for (var i=0,len=this.length; i<len; ++i) {\n      arr.push(this[i]);\n    }\n    return arr;\n  });\n  \n  String.prototype.$method(\"toObject\", function(sep, eq) {\n    sep = sep || '&';\n    eq  = eq || '=';\n\n    var obj = {};\n    var params = this.split(sep);\n    params.each(function(str, i) {\n      var pos = str.indexOf(eq);\n      if (pos > 0) {\n        var key = str.substring(0, pos);\n        var val = str.substring(pos+1);\n        var num = Number(val);\n\n        if (!isNaN(num)) {\n          val = num;\n        }\n        else if (val === 'true') {\n          val = true;\n        }\n        else if (val === 'false') {\n          val = false;\n        }\n\n        obj[key] = val;\n      }\n    });\n\n    return obj;\n  });\n  \n  var table = \"00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F 63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC 51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E 7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D 806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA 11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F 30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D\".split(' ');\n  \n  /**\n   * @method  toCRC32\n   * CRC32 変換\n   */\n  String.prototype.$method(\"toCRC32\", function() {\n    var crc = 0, x=0, y=0;\n    \n    crc = crc ^ (-1);\n    for (var i=0, iTop=this.length; i<iTop; ++i) {\n      y = (crc ^ this.charCodeAt(i)) & 0xff;\n      x = \"0x\" + table[y];\n      crc = (crc >>> 8) ^ x;\n    }\n    \n    return (crc ^ (-1)) >>> 0;\n  });\n\n})();\n\n\n/*\n * array.js\n */\n\n;(function() {\n\n  /**\n   * @class global.Array\n   * # 拡張した Array クラス\n   * Array クラスを拡張しています\n   */\n\n\n  /**\n   * @property {Object} first\n   * 最初の要素\n   * \n   *     @example   \n   *     arr = [6, 5, 2, 3, 1, 4]\n   *     console.log(arr.first); // => 6\n   */\n  Array.prototype.accessor(\"first\", {\n      \"get\": function()   { return this[0]; },\n      \"set\": function(v)  { this[0] = v; }\n  });\n  \n  /**\n   * @property {Object} last\n   * 最後の要素\n   *\n   *     arr = [6, 5, 2, 3, 1, 4]\n   *     arr.last; // => 4\n   */\n  Array.prototype.accessor(\"last\", {\n    \"get\": function()   { return this[this.length-1]; },\n    \"set\": function(v)  { this[this.length-1] = v; }\n  });\n\n  /**\n   * @method equals\n   * 渡された配列と等しいかどうかをチェックします\n   *\n   * 要素同士を === で比較します。要素に配列が含まれている場合は {@link global.Array#deepEquals} を使用してください。\n   *\n   *     arr1 = [6, 5, 2, 3, 1, 4];\n   *     arr1.equals([6, 5, 2, 3, 1, 4]);       // => true\n   *     arr2 = [6, 5, 2, [3, 1], 4];\n   *     arr2.equals([6, 5, 2, [3, 1], 4]);     // => false\n   *     arr2.deepEquals([6, 5, 2, [3, 1], 4]); // => true\n   *\n   * @param {Array} arr 比較する対象の配列\n   * @return {Boolean} チェックの結果\n   */\n  Array.prototype.$method(\"equals\", function(arr) {\n    // 長さチェック\n    if (this.length !== arr.length) return false;\n    \n    for (var i=0,len=this.length; i<len; ++i) {\n      if (this[i] !== arr[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  /**\n   * @method deepEquals\n   * ネストされている配列を含め、渡された配列と等しいかどうかをチェックします\n   *\n   *     arr = [6, 5, 2, [3, 1], 4];\n   *     arr.equals([6, 5, 2, [3, 1], 4]);     // => false\n   *     arr.deepEquals([6, 5, 2, [3, 1], 4]); // => true\n   *\n   * equalsDeep にするか検討. (Java では deepEquals なのでとりあえず合わせとく)\n   *\n   * @param {Array} arr 比較する対象の配列\n   * @return {Boolean} チェックの結果\n   */\n  Array.prototype.$method(\"deepEquals\", function(arr) {\n    // 長さチェック\n    if (this.length !== arr.length) return false;\n    \n    for (var i=0,len=this.length; i<len; ++i) {\n      var result = (this[i].deepEquals) ? this[i].deepEquals(arr[i]) : (this[i] === arr[i]);\n      if (result === false) {\n        return false;\n      }\n    }\n    return true;\n  });\n\n  /**\n   * @method contains\n   * 指定した要素が配列に含まれているかをチェックします\n   *\n   * 比較には厳密な同値（三重イコール演算子 === で使われるのと同じ方法）を用います。\n   *\n   *     arr = [6, 5, 2, 3, 1, 4];\n   *     arr.contains(3);     // => true\n   *     arr.contains(3, 4);  // => false\n   *     arr.contains(3, -4); // => true\n   *     arr.contains(\"6\");   // => false\n   *\n   * @param {Object} item チェックするオブジェクト\n   * @param {Number} [fromIndex=0] 検索を始める位置。負数を指定した場合は末尾からのオフセットと見なします。\n   * @return {Boolean} チェックの結果\n   */\n  Array.prototype.$method(\"contains\", function(item, fromIndex) {\n    return this.indexOf(item, fromIndex) != -1;\n  });\n  \n  /**\n   * @method at\n   * 指定したインデックスの要素を返します（ループ・負数の指定可）\n   *\n   * 添字が負数の場合は末尾からのオフセットとみなします。末尾の要素が -1 番目になります。  \n   * 添字の絶対値が Array.length 以上の場合はループします。\n   *\n   *     arr = ['a', 'b', 'c', 'd', 'e', 'f'];\n   *     arr.at(0);  // => 'a'\n   *     arr.at(6);  // => 'a'\n   *     arr.at(13); // => 'b'\n   *     arr.at(-1); // => 'f'\n   *     arr.at(-8); // => 'e'\n   *\n   * @param {Number} index 添字\n   * @return {Object} 添字で指定された要素\n   */\n  Array.prototype.$method(\"at\", function(i) {\n    i%=this.length;\n    i+=this.length;\n    i%=this.length;\n    return this[i];\n  });\n\n\n  /**\n   * @method find\n   * 各要素を引数にして関数を実行し、その値が真となる（＝条件にマッチする）最初の要素を返します\n   *\n   * どの要素もマッチしなければ undefined を返します。\n   *\n   *     arr = ['foo', 'bar', 'hoge', 'fuga'];\n   *     arr.find( function(elm) {\n   *       return elm.indexOf('a') >= 0;\n   *     });\n   *     // => 'bar'\n   *\n   * @param {Function} callback 各要素に対して実行するコールバック関数\n   * @param {Object} [self=this] callback 内で this として参照される値。デフォルトは呼び出し時の this。\n   * @return {Object} 条件にマッチした最初の要素、または undefined\n   */\n  Array.prototype.$method(\"find\", function(fn, self) {\n    var target = null;\n\n    this.some(function(elm, i) {\n      if (fn.call(self, elm, i, this)) {\n        target = elm;\n        return true;\n      }\n    });\n\n    return target;\n  });\n\n  /**\n   * @method findIndex\n   * 各要素を引数にして関数を実行し、その値が真となる（＝条件にマッチする）最初のインデックスを返します\n   *\n   * どの要素もマッチしなければ -1 を返します。\n   *\n   *     arr = ['foo', 'bar', 'hoge', 'fuga'];\n   *     arr.findIndex( function(elm) {\n   *       return elm.indexOf('a') >= 0;\n   *     });\n   *     // => 1\n   *\n   * @param {Function} callback 各要素に対して実行するコールバック関数\n   * @param {Object} [self=this] callback 内で this として参照される値。デフォルトは呼び出し時の this。\n   * @return {Object} 条件にマッチした最初のインデックス、または -1\n   */\n  Array.prototype.$method(\"findIndex\", function(fn, self) {\n    var target = null;\n\n    this.some(function(elm, i) {\n      if (fn.call(self, elm, i, this)) {\n        target = i;\n        return true;\n      }\n    });\n\n    return target;\n  });\n  \n  /**\n   * @method swap\n   * @chainable\n   * a 番目の要素 と b 番目の要素を入れ替えます\n   *\n   *     arr1 = ['a', 'b', 'c', 'd'];\n   *     arr2 = arr1.swap(0, 3); // => ['d', 'b', 'c', 'a']\n   *     arr1 === arr2;          // => true\n   *\n   * @param {Number} a  インデックス\n   * @param {Number} b  インデックス\n   */\n  Array.prototype.$method(\"swap\", function(a, b) {\n    var temp = this[a];\n    this[a] = this[b];\n    this[b] = temp;\n    \n    return this;\n  });\n\n  /**\n   * @method erase\n   * @chainable\n   * 指定したオブジェクトと一致した最初の要素を削除します\n   *\n   *     arr1 = ['a', 'b', 'b', 'c'];\n   *     arr2 = arr1.erase('b'); // => ['a', 'b', 'c']\n   *     arr1 === arr2;          // => true\n   *\n   * @param {Object} elm 削除したいオブジェクト\n   */\n  Array.prototype.$method(\"erase\", function(elm) {\n    var index  = this.indexOf(elm);\n    if (index >= 0) {\n      this.splice(index, 1);\n    }\n    return this;\n  });\n  \n  /**\n   * @method eraseAll\n   * @chainable\n   * 指定したオブジェクトと一致したすべての要素を削除します\n   *\n   *     arr1 = ['a', 'b', 'b', 'c'];\n   *     arr2 = arr1.eraseAll('b'); // => ['a', 'c']\n   *     arr1 === arr2;             // => true\n   *\n   * @param {Object} elm 削除したいオブジェクト\n   */\n  Array.prototype.$method(\"eraseAll\", function(elm) {\n    for (var i=0,len=this.length; i<len; ++i) {\n      if (this[i] == elm) {\n        this.splice(i--, 1);\n      }\n    }\n    return this;\n  });\n  \n  /**\n   * @method eraseIf\n   * @chainable\n   * 各要素を引数にして関数を実行し、その値が真となる（＝条件にマッチする）最初の要素を削除します\n   *\n   * どの要素もマッチしなければ何も起きません。\n   *\n   *     arr = ['foo', 'bar', 'hoge', 'fuga'];\n   *     arr.eraseIf( function(elm) {\n   *       return elm.indexOf('o') >= 0;\n   *     });\n   *     // => ['bar', 'hoge', 'fuga']\n   *\n   * @param {Function} callback 各要素に対して実行するコールバック関数\n   */\n  Array.prototype.$method(\"eraseIf\", function(fn) {\n    for (var i=0,len=this.length; i<len; ++i) {\n      if ( fn(this[i], i, this) ) {\n        this.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  });\n  \n  /**\n   * @method eraseIfAll\n   * @chainable\n   * 各要素を引数にして関数を実行し、その値が真となる（＝条件にマッチする）すべての要素を削除します\n   *\n   * どの要素もマッチしなければ何も起きません。\n   *\n   *     arr = ['foo', 'bar', 'hoge', 'fuga'];\n   *     arr.eraseIfAll( function(elm) {\n   *       return elm.indexOf('o') >= 0;\n   *     });\n   *     // => ['bar', 'fuga']\n   *\n   * @param {Function} callback 各要素に対して実行するコールバック関数\n   */\n  Array.prototype.$method(\"eraseIfAll\", function(fn) {\n    for (var i=0,len=this.length; i<len; ++i) {\n      if ( fn(this[i], i, this) ) {\n        this.splice(i--, 1);\n        len--;\n      }\n    }\n    return this;\n  });\n  \n  /**\n   * @method random\n   * 配列からランダムに1つ取り出した要素を返します\n   *\n   * 取り出す範囲をインデックスで指定することもできます。  \n   * {@link global.Array#pickup}、{@link global.Array#lot} と同じです。  \n   *\n   *     arr = ['foo', 'bar', 'hoge', 'fuga'];\n   *     arr.random(2, 3);  // => 'hoge' または 'fuga'\n   *\n   * @param {Number} [min=0] インデックスの下限\n   * @param {Number} [max=配列の最大インデックス] インデックスの上限\n   * @return {Object} ランダムに1つ取り出した要素\n   */\n  Array.prototype.$method(\"random\", function(min, max) {\n    min = min || 0;\n    max = max || this.length-1;\n    return this[ Math.randint(min, max) ];\n  });\n  \n  /**\n   * @method pickup\n   * 配列からランダムで1つ取り出した要素を返します\n   *\n   * {@link global.Array#random}、{@link global.Array#lot} と同じです。\n   * @inheritdoc global.Array#random\n   */\n  Array.prototype.$method(\"pickup\", function(min, max) {\n    min = min || 0;\n    max = max || this.length-1;\n    return this[ Math.randint(min, max) ];\n  });\n  \n  /**\n   * @method lot\n   * 配列からランダムで1つ取り出した要素を返します\n   *\n   * {@link global.Array#random}、{@link global.Array#pickup} と同じです。\n   * @inheritdoc global.Array#random\n   */\n  Array.prototype.$method(\"lot\", function(min, max) {\n    min = min || 0;\n    max = max || this.length-1;\n    return this[ Math.randint(min, max) ];\n  });\n  \n  /**\n   * @method uniq\n   * 要素の重複を取り除いた配列を生成して返します\n   *\n   * 自分自身は破壊されません。\n   *\n   *     arr = [1, 2, 3, 4, 3, 2];\n   *     arr.uniq(); // => [1, 2, 3, 4]\n   *\n   * @param {Number} [deep] ※未使用\n   * @return {Object} 新しい配列\n   */\n  Array.prototype.$method(\"uniq\", function(deep) {\n    return this.filter(function(value, index, self) {\n      return self.indexOf(value) === index;\n    });\n  });\n  \n\n  /**\n   * @method flatten\n   * 自身を再帰的に平滑化した配列を生成して返します\n   *\n   * level を指定しなければ深さの際限なく完全に平滑化します。\n   *\n   *     arr = [1, 2, [3, [4, 5]]];\n   *     arr.flatten();  // => [1, 2, 3, 4, 5]\n   *     arr.flatten(1); // => [1, 2, 3, [4, 5]]\n   *\n   * @param {Number} [level=0]  平滑化の再帰の深さ\n   * @return {Object} 平滑化した配列\n   */\n  Array.prototype.$method(\"flatten\", function(level) {\n    var arr = null;\n\n    if (level) {\n      arr = this;\n      for (var i=0; i<level; ++i) {\n        arr = Array.prototype.concat.apply([], arr);\n      }\n    }\n    else {\n      // 完全フラット\n      arr = this.reduce(function (previousValue, curentValue) {\n        return Array.isArray(curentValue) ?\n          previousValue.concat(curentValue.flatten()) : previousValue.concat(curentValue);\n      }, []);\n    }\n\n    return arr;\n  });\n\n  /**\n   * @method clone\n   * 自身のコピーを生成して返します\n   *\n   *     arr1 = [1, 2, [3, 4]];\n   *     arr2 = arr1.clone();      // => [1, 2, [3, 4]]\n   *     arr1[2] === arr2[2];      // => true\n   *     arr1[2][0] = 9;\n   *     arr2;                     // => [1, 2, [9, 4]]\n   *     arr1 = [1, 2, [3, 4]];\n   *     arr2 = arr1.clone(true);  // => [1, 2, [3, 4]]\n   *     arr1[2] === arr2[2];      // => false\n   *     arr1[2][0] = 9;\n   *     arr2;                     // => [1, 2, [3, 4]]\n   *\n   * @param {Boolean} [deep=false] 配列のネストをたどって複製するかどうか\n   * @return {Object} 新しい配列\n   */\n  Array.prototype.$method(\"clone\", function(deep) {\n    if (deep === true) {\n      var a = Array(this.length);\n      for (var i=0,len=this.length; i<len; ++i) {\n        a[i] = (this[i].clone) ? this[i].clone(deep) : this[i];\n      }\n      return a;\n    }\n    else {\n      return Array.prototype.slice.apply(this);\n    }\n  });\n\n\n  /**\n   * @method clear\n   * @chainable\n   * 自身を空の配列にします\n   *\n   *     arr = [1, 2, [3, 4]];\n   *     arr.clear(); // => []\n   */\n  Array.prototype.$method(\"clear\", function() {\n    this.length = 0;\n    return this;\n  });\n  \n  /**\n   * @method fill\n   * @chainable\n   * 自身の一部の要素を特定の値で埋めます\n   *\n   *     arr = [1, 2, 3, 4, 5];\n   *     arr.fill(\"x\");       // => [\"x\", \"x\", \"x\", \"x\", \"x\"]\n   *     arr.fill(\"x\", 2, 4); // => [1, 2, \"x\", \"x\", 5]\n   *\n   * @param {Object} value 埋める値\n   * @param {Number} [start=0] 値を埋める最初のインデックス\n   * @param {Number} [end=自身の配列の長さ] 値を埋める最後のインデックス+1\n   */\n  Array.prototype.$method(\"fill\", function(value, start, end) {\n    start = start || 0;\n    end   = end   || (this.length);\n    \n    for (var i=start; i<end; ++i) {\n      this[i] = value;\n    }\n    \n    return this;\n  });\n  \n\n  /**\n   * @method range\n   * @chainable\n   * 自身を等差数列（一定間隔の整数値の列）とします\n   *\n   * 引数が1つの場合、0～end（end含まず）の整数の配列です  \n   * 引数が2つの場合、start～end（end含まず）の整数の配列です  \n   * 引数が3つの場合、start～end（end含まず）かつ start + n * step (nは整数)を満たす整数の配列です\n   *\n   *     arr = [];\n   *     arr.range(4);        // => [0, 1, 2, 3]\n   *     arr.range(2, 5);     // => [2, 3, 4]\n   *     arr.range(2, 14, 5); // => [2, 7, 12]\n   *     arr.range(2, -3);    // => [2, 1, 0, -1, -2]\n   *\n   * @param {Number} start 最初の値\n   * @param {Number} end 最後の値（省略不可）\n   * @param {Number} [step=1または-1] 間隔\n   */\n  Array.prototype.$method(\"range\", function(start, end, step) {\n    this.clear();\n    \n    if (arguments.length == 1) {\n      for (var i=0; i<start; ++i) this[i] = i;\n    }\n    else if (start < end) {\n      step = step || 1;\n      if (step > 0) {\n        for (var i=start, index=0; i<end; i+=step, ++index) {\n          this[index] = i;\n        }\n      }\n    }\n    else {\n      step = step || -1;\n      if (step < 0) {\n        for (var i=start, index=0; i>end; i+=step, ++index) {\n          this[index] = i;\n        }\n      }\n    }\n    \n    return this;\n  });\n  \n  /**\n   * @method shuffle\n   * @chainable\n   * 自身の要素をランダムにシャッフルします\n   *\n   *     arr = [1, 2, 3, 4, 5];\n   *     arr.shuffle(); // => [5, 1, 4, 2, 3] など\n   */\n  Array.prototype.$method(\"shuffle\", function() {\n    for (var i=0,len=this.length; i<len; ++i) {\n      var j = Math.randint(0, len-1);\n      \n      if (i != j) {\n        this.swap(i, j);\n      }\n    }\n    \n    return this;\n  });\n\n  /**\n   * @method sum\n   * 要素の合計値を返します\n   *\n   * 要素に数値以外が含まれる場合の挙動は不定です。\n   *\n   *     arr = [1, 2, 3, 4, 5, 6];\n   *     arr.sum(); // => 21\n   *\n   * @return {Number} 合計\n   */\n  Array.prototype.$method(\"sum\", function() {\n    var sum = 0;\n    for (var i=0,len=this.length; i<len; ++i) {\n      sum += this[i];\n    }\n    return sum;\n  });\n\n  /**\n   * @method average\n   * 要素の平均値を返します\n   *\n   * 要素に数値以外が含まれる場合の挙動は不定です。\n   *\n   *     arr = [1, 2, 3, 4, 5, 6]\n   *     arr.average(); // => 3.5\n   *\n   * @return {Number} 平均値\n   */\n  Array.prototype.$method(\"average\", function() {\n    var sum = 0;\n    var len = this.length;\n    for (var i=0; i<len; ++i) {\n      sum += this[i];\n    }\n    return sum/len;\n  });\n\n  /**\n   * @method each\n   * @chainable\n   * 要素を順番に渡しながら関数を繰り返し実行します\n   *\n   * メソッドチェーンに対応していますが、このメソッドによって自分自身は変化しません。\n   *\n   *     arr = [1, 2, 3];\n   *     arr.each( function(elm) {\n   *       console.log(elm * elm)\n   *     });\n   *     // => 1\n   *           4\n   *           9\n   *\n   * @param {Function} callback 各要素に対して実行するコールバック関数\n   * @param {Object} callback.currentValue 現在処理されている配列の要素\n   * @param {Number} callback.index 現在処理されている配列の要素のインデックス\n   * @param {Array} callback.array 適用されている配列\n   * @param {Object} [self=this] callback 内で this として参照される値\n   */\n  Array.prototype.$method(\"each\", function() {\n    this.forEach.apply(this, arguments);\n    return this;\n  });\n\n  \n  /**\n   * @method toULElement\n   * ULElement に変換します（未実装）\n   */\n  Array.prototype.$method(\"toULElement\", function(){\n      // TODO: \n  });\n\n  /**\n   * @method toOLElement\n   * OLElement に変換します（未実装）\n   */\n  Array.prototype.$method(\"toOLElement\", function(){\n      // TODO:\n  });\n\n  \n  /**\n   * @method range\n   * @static\n   * インスタンスメソッドの {@link global.Array#range} と同じです\n   *\n   *     Array.range(2, 14, 5); // => [2, 7, 12]\n   */\n  Array.$method(\"range\", function(start, end, step) {\n    return Array.prototype.range.apply([], arguments);\n  });\n\n\n  /**\n   * @method of\n   * @static\n   * ES6 準拠の of 関数です\n   *\n   * 可変長引数をとって Array オブジェクトにして返します。\n   *\n   *     Array.of();        // => []\n   *     Array.of(1, 2, 3); // => [1, 2, 3]\n   *\n   * @param {Object} elementN 生成する配列の要素\n   * @return {Array} 生成した配列\n   */\n  Array.$method(\"of\", function() {\n    return Array.prototype.slice.call(arguments);\n  });\n\n  /**\n   * @method from\n   * @static\n   * ES6 準拠の from 関数です\n   *\n   * array-like オブジェクトから新しい配列を生成します。  \n   * array-like オブジェクトとは、length プロパティを持ち、数字の添字でアクセス可能なオブジェクトのことです。  \n   * 通常の配列のほか、String、arguments、NodeList なども array-like オブジェクトです。\n   *\n   *     Array.from([1, 2, 3], function(elm){ return elm * elm} ); // => [1, 4, 9]\n   *     Array.from(\"foo\");                                        // => [\"f\", \"o\", \"o\"]\n   *     Array.from( document.querySelectorAll(\"span\"))            // => [Element, Element, Element,...]\n   *\n   * @param {Object} arrayLike 配列に変換する array-like オブジェクト\n   * @param {Function} [callback] arrayLike のすべての要素に対して実行するマップ関数\n   * @param {Object} [context] callback 内で this として参照される値\n   * @return {Array} 生成した配列\n   */\n  Array.$method(\"from\", function(arrayLike, callback, context) {\n    if (!Object(arrayLike).length) return [];\n\n    return Array.prototype.map.call(arrayLike, typeof callback == 'function' ? callback : function(item) {\n      return item;\n    }, context);\n  });\n  \n  /**\n   * @method most\n   * 指定した関数の返り値が最小となる要素と最大となる要素をまとめて返します\n   *\n   * 空の配列に対して実行すると {max: Infinity, min: -Infinity} を返します。\n   *\n   *     [5,1,4,1,9,2,-10].most(); // => {max:9, min: -10}\n   *\n   *     points = [ {x:0, y:0}, {x:640, y:960}, {x:-80, y:100} ];\n   *     points.most(function(e){return e.x;}).min; // => [x:-80, y:100]\n   *     points.most(function(e){return e.y;}).max; // => [x:640, y:960]\n   *\n   * @param {Function} [callback] 各要素に対して実行するコールバック関数\n   * @param {Object} [self=this] 関数内で this として参照される値。デフォルトは自分自身。\n   * @return {Object} max と min をキーに持つオブジェクト\n   * @return {Object} return.min 関数の返り値が最小となる要素\n   * @return {Object} return.max 関数の返り値が最大となる要素\n   */\n  Array.prototype.$method(\"most\", function(func, self) {\n    if(this.length < 1){\n      return {\n        max: -Infinity,\n        min: Infinity,\n      };\n    }\n    if(func){\n      var maxValue = -Infinity;\n      var minValue = Infinity;\n      var maxIndex = 0;\n      var minIndex = 0;\n      \n      if(typeof self === 'undefined'){self = this;}\n      \n      for (var i = 0, len = this.length; i < len; ++i) {\n        var v = func.call(self, this[i], i, this);\n        if(maxValue < v){\n          maxValue = v;\n          maxIndex = i;\n        }\n        if(minValue > v){\n          minValue = v;\n          minIndex = i;\n        }\n      }\n      return {\n        max: this[maxIndex],\n        min: this[minIndex],\n      };\n    }\n    else{\n      var max = -Infinity;\n      var min = Infinity;\n      for (var i = 0, len = this.length;i < len; ++i) {\n        if(max<this[i]){max=this[i];}\n        if(min>this[i]){min=this[i];}\n      }\n      return {\n        max: max,\n        min: min,\n      };\n    }\n    \n  });  \n\n})();\n\n/*\n * date.js\n */\n\n(function() {\n  \n  /**\n   * @class   global.Date\n   * Date(日付)の拡張\n   */\n  \n  var MONTH = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n  \n  var WEEK = [\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n  ];\n  \n  /**\n   * @method  format\n   * 日付フォーマットに合わせた文字列を返す\n   */\n  Date.prototype.$method('format', function(pattern) {\n    var year    = this.getFullYear();\n    var month   = this.getMonth();\n    var date    = this.getDate();\n    var day     = this.getDay();\n    var hours   = this.getHours();\n    var minutes = this.getMinutes();\n    var seconds = this.getSeconds();\n    var millseconds = this.getMilliseconds();\n    \n    var patterns = {\n      'yyyy': String(year).padding(4, '0'),\n      'yy': year.toString().substr(2, 2),\n      'y': year,\n\n      'MMMM': MONTH[month],\n      'MMM': MONTH[month].substr(0, 3),\n      'MM': String(month+1).padding(2, '0'),\n      'M': (month+1),\n\n      'dd': String(date).padding(2, '0'),\n      'd': date,\n\n      'EEEE': WEEK[day],\n      'EEE': WEEK[day].substr(0, 3),\n\n      'HH': String(hours).padding(2, '0'),\n      'H': hours,\n\n      'mm': String(minutes).padding(2, '0'),\n      'm': minutes,\n\n      'ss': String(seconds).padding(2, '0'),\n      's': seconds,\n      \n      // // date\n      // 'd': String('00' + date).slice(-2),\n      // 'D': WEEK[day].substr(0, 3),\n      // 'j': date,\n      // 'l': WEEK[day],\n      \n      // // month\n      // 'm': String('00' + (month+1)).slice(-2),\n      // 'M': MONTH[month].substr(0, 3),\n      // 'n': (month+1),\n      // 'F': MONTH[month],\n      \n      // // year\n      // 'y': year.toString().substr(2, 2),\n      // 'Y': year,\n      \n      // // time\n      // 'G': hours,\n      // 'H': String('00' + hours).slice(-2),\n      // 'i': String('00' + minutes).slice(-2),\n      // 's': String('00' + seconds).slice(-2),\n      // 'S': String('000' + millseconds).slice(-3),\n    };\n\n    var regstr = '(' + Object.keys(patterns).join('|') + ')';\n    var re = new RegExp(regstr, 'g');\n\n    return pattern.replace(re, function(str) {\n      return patterns[str];\n    });\n  });\n\n\n  /*\n   * http://qiita.com/n0bisuke/items/dd537bd4cbe9ab501ce8\n   */\n  Date.$method('calculateAge', function(birthday, when) {\n    // birthday\n    if (typeof birthday === 'string') {\n      birthday = new Date(birthday);\n    }\n    // when\n    if (!when) {\n      when = new Date();\n    }\n    else if (typeof when === 'string') {\n      when = new Date(when);\n    }\n\n    var bn = new Date(birthday.getTime()).setFullYear(256);\n    var wn = new Date(when.getTime()).setFullYear(256);\n    var step = (wn < bn) ? 1 : 0;\n\n    return (when.getFullYear() - birthday.getFullYear()) - step;\n  });\n  \n})();\n\n/*\n * math.js\n */\n\n;(function() {\n    \n  /**\n   * @class global.Math\n   * Mathの拡張\n   */\n\n  \n  /**\n   * @property    DEG_TO_RAD\n   * Degree to Radian.\n   */\n  Math.DEG_TO_RAD = Math.PI/180;\n  \n  /**\n   * @property    RAD_TO_DEG\n   * Radian to Degree.\n   */\n  Math.RAD_TO_DEG = 180/Math.PI;\n  \n  /**\n   * @property    PHI\n   * golden ratio\n   */\n  Math.PHI = (1 + Math.sqrt(5)) / 2;\n  \n  /**\n   * @method\n   * Degree を Radian に変換\n   */\n  Math.degToRad = function(deg) {\n    return deg * Math.DEG_TO_RAD;\n  };\n  \n  /**\n   * @method\n   * Radian を Degree に変換\n   */\n  Math.radToDeg = function(rad) {\n    return rad * Math.RAD_TO_DEG;\n  };\n  \n\n  \n  /**\n   * @method clamp\n   * クランプ\n   */\n  Math.$method(\"clamp\", function(value, min, max) {\n    return (value < min) ? min : ( (value > max) ? max : value );\n  });\n  \n  /**\n   * @method inside\n   * min <= value <= max のとき true を返す\n   */\n  Math.$method(\"inside\", function(value, min, max) {\n    return (value >= min) && (value) <= max;\n  });\n  \n  /**\n   * @method randint\n   * ランダムな値を指定された範囲内で生成\n   */\n  Math.$method(\"randint\", function(min, max) {\n    return Math.floor( Math.random()*(max-min+1) ) + min;\n  });\n  \n  /**\n   * @method randfloat\n   * ランダムな値を指定された範囲内で生成\n   */\n  Math.$method(\"randfloat\", function(min, max) {\n    return Math.random()*(max-min)+min;\n  });\n  \n  /**\n   * @method randbool\n   * ランダムな値を指定された範囲内で生成\n   */\n  Math.$method(\"randbool\", function() {\n    return Math.randint(0, 1) === 1;\n  });\n    \n})();\n/*\n *\n */\n\n\n\n/*\n * phina.js namespace\n */\nvar phina = phina || {};\n\n;(function() {\n\n  /**\n   * @class phina\n   * phina.js namespace\n   */\n\n  /**\n   * バージョン\n   */\n  phina.VERSION = '0.2.0';\n\n  phina.$method('isNode', function() {\n    return (typeof module !== 'undefined');\n  });\n\n  phina.$method('namespace', function(fn) {\n    fn.call(this);\n  });\n\n  var ns = phina.isNode() ? global : window;\n\n  /**\n   * @method global\n   * global\n   */\n  phina.accessor('global', {\n    get: function() {\n      return ns;\n    },\n  });\n\n  /**\n   * @method isMobile\n   * mobile かどうかをチェック\n   */\n  phina.$method('isMobile', function() {\n    if (!phina.global.navigator) return false;\n    var ua = phina.global.navigator.userAgent;\n    return (ua.indexOf(\"iPhone\") > 0 || ua.indexOf(\"iPad\") > 0 || ua.indexOf(\"Android\") > 0);\n  });\n\n\n  // support node.js\n  if (phina.isNode()) {\n    module.exports = phina;\n  }\n\n  ns.phina = phina;\n\n})(this);\n\n\nphina.namespace(function() {\n\n  /**\n   * @member phina\n   * @static\n   * @method createClass\n   * クラスを生成\n   */\n  phina.$method('createClass', function(params) {\n    var props = {};\n\n    var _class = function() {\n      var instance = new _class.prototype._creator();\n      _class.prototype.init.apply(instance, arguments);\n      return instance;\n    };\n\n    if (params.superClass) {\n      _class.prototype = Object.create(params.superClass.prototype);\n      params.init.owner = _class;\n      _class.prototype.superInit = function() {\n        this.__counter = this.__counter || 0;\n\n        var superClass = this._hierarchies[this.__counter++];\n        var superInit = superClass.prototype.init;\n        superInit.apply(this, arguments);\n\n        this.__counter = 0;\n      };\n      _class.prototype.superMethod = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        var name = args.shift();\n        this.__counters = this.__counters || {};\n        this.__counters[name] = this.__counters[name] || 0;\n\n        var superClass = this._hierarchies[ this.__counters[name]++ ];\n        var superMethod = superClass.prototype[name];\n        var rst = superMethod.apply(this, args);\n\n        this.__counters[name] = 0;\n\n        return rst;\n      };\n      _class.prototype.constructor = _class;\n    }\n\n\n    // // \n    // params.forIn(function(key, value) {\n    //   if (typeof value === 'function') {\n    //     _class.$method(key, value);\n    //   }\n    //   else {\n    //     _class.prototype[key] = value;\n    //   }\n    // });\n    // 継承\n    _class.prototype.$extend(params);\n\n    // 継承用\n    _class.prototype._hierarchies = [];\n    var _super = _class.prototype.superClass;\n    while(_super) {\n      _class.prototype._hierarchies.push(_super);\n      _super = _super.prototype.superClass;\n    }\n\n    // accessor\n    if (params._accessor) {\n      params._accessor.forIn(function(key, value) {\n        _class.prototype.accessor(key, value);\n      });\n      // _class.prototype = Object.create(_class.prototype, params._accessor);\n    }\n\n    _class.prototype._creator = function() { return this; };\n    _class.prototype._creator.prototype = _class.prototype;\n\n    // static property/method\n    if (params._static) {\n      _class.$extend(params._static);\n    }\n\n    if (params._defined) {\n      params._defined.call(_class, _class);\n    }\n\n    return _class;\n  });\n\n  var chachedClasses = {};\n  /*\n   * \n   */\n  phina.$method('using', function(path) {\n    if (!path) {\n      return phina.global;\n    }\n    \n    var pathes = path.split(/[,.\\/ ]|::/);\n    var current = phina.global;\n\n    pathes.forEach(function(p) {\n      current = current[p] || (current[p]={});\n    });\n\n    return current;\n  });\n  \n  /*\n   * \n   */\n  phina.$method('register', function(path, _class) {\n    var pathes = path.split(/[,.\\/ ]|::/);\n    var className = pathes.last;\n    var parentPath = path.substring(0, path.lastIndexOf('.'));\n    var parent = phina.using(parentPath);\n\n    parent[className] = _class;\n\n    return _class;\n  });\n  \n  var _classDefinedCallback = {};\n\n  /**\n   * @member phina\n   * @static\n   * @method define\n   * クラスを定義\n   */\n  phina.$method('define', function(path, params) {\n    if (params.superClass) {\n      if (typeof params.superClass === 'string') {\n        var _superClass = phina.using(params.superClass);\n        if (typeof _superClass != 'function') {\n          if (!_classDefinedCallback[params.superClass]) {\n            _classDefinedCallback[params.superClass] = [];\n          }\n          _classDefinedCallback[params.superClass].push(function() {\n            phina.define(path, params);\n          });\n\n          return ;\n        }\n        else {\n          params.superClass = _superClass;\n        }\n      }\n      else {\n        params.superClass = params.superClass;\n      }\n    }\n\n    var _class = phina.createClass(params);\n    _class.prototype.accessor('className', {\n      get: function() {\n        return path;\n      },\n    });\n\n    phina.register(path, _class);\n    \n    if (_classDefinedCallback[path]) {\n      _classDefinedCallback[path].forEach(function(callback) {\n        callback();\n      });\n      _classDefinedCallback[path] = null;\n    }\n\n    return _class;\n  });\n\n\n  phina.$method('globalize', function() {\n    phina.forIn(function(key, value) {\n      var ns = key;\n\n      if (typeof value !== 'object') return ;\n\n      value.forIn(function(key, value) {\n        // if (phina.global[key]) {\n        //   console.log(ns, key);\n        //   phina.global['_' + key] = value;\n        // }\n        // else {\n        //   phina.global[key] = value;\n        // }\n        phina.global[key] = value;\n      });\n    });\n  });\n\n  phina._mainListeners = [];\n  phina._mainLoaded = false;\n  phina.$method('main', function(func) {\n    if (phina._mainLoaded) {\n      func();\n    }\n    else {\n      phina._mainListeners.push(func);\n    }\n  });\n\n  var doc = phina.global.document;\n  if (phina.global.addEventListener && doc && doc.readyState !== 'complete') {\n    phina.global.addEventListener('load', function() {\n      var run = function() {\n        var listeners = phina._mainListeners.clone();\n        phina._mainListeners.clear();\n        listeners.each(function(func) {\n          func();\n        });\n\n        // main 内で main を追加している場合があるのでそのチェック\n        if (phina._mainListeners.length > 0) {\n          run(0);\n        }\n        else {\n          phina._mainLoaded = true;\n        }\n      };\n      // ちょっと遅延させる(画面サイズ問題)\n      setTimeout(run);\n    });\n  }\n  else {\n    phina._mainLoaded = true;\n  }\n\n\n\n});\n\n\n\n\n\n\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.geom.Vector2\n   * ベクトルクラス\n   */\n  phina.define('phina.geom.Vector2', {\n\n    /** x座標 */\n    x: 0,\n    /** y座標 */\n    y: 0,\n\n    /**\n     * @constructor\n     */\n    init: function(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n\n    /**\n     * 複製\n     */\n    clone: function() {\n      return phina.geom.Vector2(this.x, this.y);\n    },\n\n    /**\n     * 等しいかどうかをチェック\n     * @return {Boolean}\n     */\n    equals: function(v) {\n      return (this.x === v.x && this.y === v.y);\n    },\n\n    /**\n     * セッター\n     */\n    set: function(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * 加算\n     */\n    add: function(v) {\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    },\n\n    /**\n     * 減算\n     */\n    sub: function(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    },\n\n    /**\n     * 乗算\n     */\n    mul: function(n) {\n      this.x *= n;\n      this.y *= n;\n      return this;\n    },\n\n    /**\n     * 除算\n     */\n    div: function(n) {\n      //console.assert(n != 0, \"0 division!!\");\n      n = n || 0.01;\n      this.x /= n;\n      this.y /= n;\n      return this;\n    },\n\n    /**\n     * 反転\n     */\n    negate: function() {\n      this.x = -this.x;\n      this.y = -this.y;\n      \n      return this;\n    },\n\n    /**\n     * @method\n     * 内積.\n     * 投影ベクトルを求めたり, 類似度に使ったり.\n     */\n    dot: function(v) {\n      return this.x * v.x + this.y * v.y;\n    },\n\n    /**\n     * @method\n     * 外積\n     */\n    cross: function(v) {\n      return (this.x*v.y) - (this.y*v.x);\n    },\n\n    /**\n     * 長さを取得\n     * ### memo\n     * magnitude って名前の方が良いかも. 検討中.\n     * @return {Number}\n     */\n    length: function() {\n      return Math.sqrt(this.x*this.x + this.y*this.y);\n    },\n    \n    /**\n     * 2乗された長さを取得\n     * C# の名前を引用\n     * or lengthSquare or lengthSqrt\n     * @return {Number}\n     */\n    lengthSquared: function() {\n      return this.x*this.x + this.y*this.y;\n    },\n    \n    /**\n     * ２点間の距離を返す\n     */\n    distance: function(v) {\n      return Math.sqrt( Math.pow(this.x-v.x, 2) + Math.pow(this.y-v.y, 2) );\n    },\n    \n    /**\n     * ２点間の距離を返す\n     */\n    distanceSquared: function(v) {\n      return Math.pow(this.x-v.x, 2) + Math.pow(this.y-v.y, 2);\n    },\n\n    /**\n     * ランダムベクトルをセット\n     */\n    random: function(min, max, len) {\n      var degree = phina.util.Random.randfloat(min || 0, max || 360);\n      var rad = degree*Math.DEG_TO_RAD;\n      var len = len || 1;\n\n      this.x = Math.cos(rad)*len;\n      this.y = Math.sin(rad)*len;\n\n      return this;\n    },\n    \n    /**\n     * 正規化\n     */\n    normalize: function() {\n      this.div(this.length());\n      return this;\n    },\n\n    /**\n     * 文字列に変換\n     * @return {String}\n     */\n    toString: function() {\n      return \"{x:{x}, y:{y}}\".format(this);\n    },\n\n    /**\n     * 大体の向きを文字列で取得\n     * @return {String}\n     */\n    getDirection: function() {\n      var angle = this.toDegree();\n      if (angle < 45) {\n        return \"right\";\n      } else if (angle < 135) {\n        return \"down\";\n      } else if (angle < 225) {\n        return \"left\"\n      } else if (angle < 315) {\n        return \"up\";\n      } else {\n        return \"right\";\n      }\n    },\n\n    /**\n     * 角度に変換\n     * @return {Number}\n     */\n    toAngle: function() {\n      var rad = Math.atan2(this.y, this.x);\n      return (rad + Math.PI*2)%(Math.PI*2);\n    },\n    \n    /**\n     * 角度(radian)と長さでベクトルをセット\n     */\n    fromAngle: function(rad, len) {\n      len = len || 1;\n      this.x = Math.cos(rad)*len;\n      this.y = Math.sin(rad)*len;\n      \n      return this;\n    },\n\n    /**\n     * 角度に変換(degree)\n     * @return {Number}\n     */\n    toDegree: function() {\n      return this.toAngle().toDegree();\n    },\n    \n    /**\n     * 角度(degree)と長さでベクトルをセット\n     */\n    fromDegree: function(deg, len) {\n      return this.fromAngle(deg.toRadian(), len);\n    },\n\n    /**\n     * 任意の角度(radian)で回転\n     */\n    rotate: function(rad, center) {\n      center = center || phina.geom.Vector2(0, 0);\n\n      var x1 = this.x - center.x;\n      var y1 = this.y - center.y;\n      var x2 = x1 * Math.cos(rad) - y1 * Math.sin(rad);\n      var y2 = x1 * Math.sin(rad) + y1 * Math.cos(rad);\n      this.set( center.x + x2, center.y + y2 );\n\n      return this;\n    },\n\n    _accessor: {\n    },\n\n    _static: {\n      /**\n       * @method\n       * @static\n       * min\n       */\n      min: function(a, b) {\n        return phina.geom.Vector2(\n          (a.x < b.x) ? a.x : b.x,\n          (a.y < b.y) ? a.y : b.y\n          );\n      },\n\n      /**\n       * @method\n       * @static\n       * max\n       */\n      max: function(a, b) {\n        return phina.geom.Vector2(\n          (a.x > b.x) ? a.x : b.x,\n          (a.y > b.y) ? a.y : b.y\n          );\n      },\n\n      /**\n       * @method\n       * @static\n       * 加算\n       */\n      add: function(lhs, rhs) {\n        return phina.geom.Vector2(lhs.x+rhs.x, lhs.y+rhs.y);\n      },\n      \n      /**\n       * @method\n       * @static\n       * 減算\n       */\n      sub: function(lhs, rhs) {\n        return phina.geom.Vector2(lhs.x-rhs.x, lhs.y-rhs.y);\n      },\n      \n      /**\n       * @method\n       * @static\n       * 乗算\n       */\n      mul: function(v, n) {\n        return phina.geom.Vector2(v.x*n, v.y*n);\n      },\n      \n      /**\n       * @method\n       * @static\n       * 割算\n       */\n      div: function(v, n) {\n        return phina.geom.Vector2(v.x/n, v.y/n);\n      },\n      \n      /**\n       * @method\n       * @static\n       * 反転\n       */\n      negate: function(v) {\n        return phina.geom.Vector2(-v.x, -v.y);\n      },\n      \n      /**\n       * @method\n       * @static\n       * 内積.\n       * 投影ベクトルを求めたり, 類似度に使ったり.\n       */\n      dot: function(lhs, rhs) {\n        return lhs.x * rhs.x + lhs.y * rhs.y;\n      },\n      \n      /**\n       * @method\n       * @static\n       * 外積\n       */\n      cross: function(lhs, rhs) {\n        return (lhs.x*rhs.y) - (lhs.y*rhs.x);\n      },\n      \n      /**\n       * @method\n       * @static\n       * ２点間の距離を返す\n       */\n      distance: function(lhs, rhs) {\n        return Math.sqrt( Math.pow(lhs.x-rhs.x, 2) + Math.pow(lhs.y-rhs.y, 2) );\n      },\n\n      distanceSquared: function(lhs, rhs) {\n        return Math.pow(lhs.x-rhs.x, 2) + Math.pow(lhs.y-rhs.y, 2);\n      },\n\n\n      /**\n       * @method\n       * @static\n       * マンハッタン距離\n       */\n      manhattanDistance: function(lhs, rhs) {\n        return Math.abs(lhs.x-rhs.x) + Math.abs(lhs.y-rhs.y);\n      },\n      \n      /**\n       * @method\n       * @static\n       * 法線ベクトル\n       */\n      normal: function(a, b) {\n        var temp = phina.geom.Vector2.sub(a, b);\n\n        return phina.geom.Vector2(-temp.y, temp.x);\n      },\n\n      /**\n       * @method\n       * @static\n       * 反射ベクトル\n       */\n      reflect: function(v, normal) {\n        var len = phina.geom.Vector2.dot(v, normal);\n        var temp= phina.geom.Vector2.mul(normal, 2*len);\n        \n        return phina.geom.Vector2.sub(v, temp);\n      },\n\n      /**\n       * @method\n       * @static\n       * 補間.\n       * 0.5 で lhs と rhs の中間ベクトルを求めることができます.\n       */\n      lerp: function(lhs, rhs, t) {\n        // TODO: \n        return phina.geom.Vector2(\n          lhs.x + (rhs.x-lhs.x)*t,\n          lhs.y + (rhs.y-lhs.y)*t\n        );\n      },\n      \n      \n      /**\n       * @method\n       * @static\n       * 補間\n       */\n      slerp: function(lhs, rhs, t) {\n          // TODO:\n          // cos...\n      },\n\n      random: function(min, max, len) {\n        return phina.geom.Vector2().random(min, max).mul(len||1);\n      },\n    },\n\n  });\n\n  phina.geom.Vector2.ZERO = phina.geom.Vector2(0, 0);\n  phina.geom.Vector2.LEFT = phina.geom.Vector2(-1, 0);\n  phina.geom.Vector2.RIGHT= phina.geom.Vector2(1, 0);\n  phina.geom.Vector2.UP   = phina.geom.Vector2(0, -1);\n  phina.geom.Vector2.DOWN = phina.geom.Vector2(0, 1);\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.geom.Vector3\n   * ベクトルクラス\n   */\n  phina.define('phina.geom.Vector3', {\n\n    /** x座標 */\n    x: 0,\n    /** y座標 */\n    y: 0,\n    /** z座標 */\n    z: 0,\n\n    /**\n     * @constructor\n     */\n    init: function(x, y, z) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    },\n\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.geom.Matrix33\n   * マトリックスクラス\n   */\n  phina.define('phina.geom.Matrix33', {\n\n    /**\n     * @constructor\n     * m00 m01 m02\n     * m10 m11 m12\n     * m20 m21 m22\n     */\n    init: function() {\n      if (arguments.length >= 9) {\n          this.set.apply(this, arguments);\n      }\n      else {\n          this.identity();\n      }\n    },\n\n    set: function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n      this.m00 = m00; this.m01 = m01; this.m02 = m02;\n      this.m10 = m10; this.m11 = m11; this.m12 = m12;\n      this.m20 = m20; this.m21 = m21; this.m22 = m22;\n\n      return this;\n    },\n\n    identity: function() {\n      this.m00 = 1; this.m01 = 0; this.m02 = 0;\n      this.m10 = 0; this.m11 = 1; this.m12 = 0;\n      this.m20 = 0; this.m21 = 0; this.m22 = 1;\n      return this;\n    },\n\n    /**\n     * クローン\n     */\n    clone: function() {\n      return phina.geom.Matrix33(\n        this.m00, this.m01, this.m02,\n        this.m10, this.m11, this.m12,\n        this.m20, this.m21, this.m22\n      );\n    },\n\n    /**\n     * 行列式\n     */\n    determinant: function() {\n      var m00 = this.m00; var m01 = this.m01; var m02 = this.m02;\n      var m10 = this.m10; var m11 = this.m11; var m12 = this.m12;\n      var m20 = this.m20; var m21 = this.m21; var m22 = this.m22;\n      \n      return m00*m11*m22 + m10*m21*m02 + m01*m12*m20 - m02*m11*m20 - m01*m10*m22 - m12*m21*m00;\n    },\n\n    /**\n     * 転置\n     */\n    transpose: function() {\n      var swap = function(a, b) {\n        var temp = this[a];\n        this[a] = this[b];\n        this[b] = temp;\n      }.bind(this);\n\n      swap('m01', 'm10');\n      swap('m02', 'm20');\n      swap('m12', 'm21');\n      \n      return this;\n    },\n\n    /**\n     * 逆行列\n     */\n    invert: function() {\n      var m00 = this.m00; var m01 = this.m01; var m02 = this.m02;\n      var m10 = this.m10; var m11 = this.m11; var m12 = this.m12;\n      var m20 = this.m20; var m21 = this.m21; var m22 = this.m22;\n\n      var det = this.determinant();\n\n      // |m00, m01, m02|\n      // |m10, m11, m12|\n      // |m20, m21, m22|\n      this.m00 = (m11*m22-m12*m21)/det;\n      this.m01 = (m10*m22-m12*m20)/det*-1;\n      this.m02 = (m10*m21-m11*m20)/det;\n      \n      this.m10 = (m01*m22-m02*m21)/det*-1;\n      this.m11 = (m00*m22-m02*m20)/det;\n      this.m12 = (m00*m21-m01*m20)/det*-1;\n      \n      this.m20 = (m01*m12-m02*m11)/det;\n      this.m21 = (m00*m12-m02*m10)/det*-1;\n      this.m22 = (m00*m11-m01*m10)/det;\n      \n      this.transpose();\n      \n      return this;\n\n    },\n\n    /**\n     * 掛け算\n     */\n    multiply: function(mat) {\n        var tm = this.m;\n        var om = mat.m;\n\n        var a00 = this.m00, a01 = this.m01, a02 = this.m02;\n        var a10 = this.m10, a11 = this.m11, a12 = this.m12;\n        var a20 = this.m20, a21 = this.m21, a22 = this.m22;\n        var b00 = mat.m00, b01 = mat.m01, b02 = mat.m02;\n        var b10 = mat.m10, b11 = mat.m11, b12 = mat.m12;\n        var b20 = mat.m20, b21 = mat.m21, b22 = mat.m22;\n\n        this.m00 = a00*b00 + a01*b10 + a02*b20;\n        this.m01 = a00*b01 + a01*b11 + a02*b21;\n        this.m02 = a00*b02 + a01*b12 + a02*b22;\n\n        this.m10 = a10*b00 + a11*b10 + a12*b20;\n        this.m11 = a10*b01 + a11*b11 + a12*b21;\n        this.m12 = a10*b02 + a11*b12 + a12*b22;\n\n        this.m20 = a20*b00 + a21*b10 + a22*b20;\n        this.m21 = a20*b01 + a21*b11 + a22*b21;\n        this.m22 = a20*b02 + a21*b12 + a22*b22;\n        \n        return this;\n    },\n\n    /**\n     * ベクトルとの掛け算\n     */\n    multiplyVector2: function(v) {\n      var vx = this.m00*v.x + this.m01*v.y + this.m02;\n      var vy = this.m10*v.x + this.m11*v.y + this.m12;\n      \n      return phina.geom.Vector2(vx, vy);\n    },\n\n    // 行\n    getRow: function(row) {\n      if ( row === 0 ) {\n        return [ this.m00, this.m01, this.m02 ];\n      }\n      else if ( row === 1 ) {\n        return [ this.m10, this.m11, this.m12 ];\n      }\n      else if ( row === 2 ) {\n        return [ this.m20, this.m21, this.m22 ];\n      }\n      else {\n        return null;\n      }\n    },\n\n    // 列\n    getCol: function(col) {\n      if ( col === 0 ) {\n        return [ this.m00, this.m10, this.m20 ];\n      }\n      else if ( col === 1 ) {\n        return [ this.m01, this.m11, this.m21 ];\n      }\n      else if ( col === 2 ) {\n        return [ this.m02, this.m12, this.m22 ];\n      }\n      else {\n        return null;\n      }\n    },\n    /**\n     * 文字列化\n     */\n    toString: function() {\n      return \"|{m00}, {m01}, {m02}|\\n|{m10}, {m11}, {m12}|\\n|{m20}, {m21}, {m22}|\".format(this);\n    },\n\n    _accessor: {\n      /**\n       * x\n       */\n      x: {\n        \"get\": function()   { return this._x; },\n        \"set\": function(v)  { this._x = v; }\n      },\n    }\n    \n  });\n\n\n  phina.geom.Matrix33.IDENTITY = phina.geom.Matrix33().identity();\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.geom.Rect\n   * \n   */\n  phina.define('phina.geom.Rect', {\n\n    /** x */\n    x: 0,\n    /** y */\n    y: 0,\n    /** 幅 */\n    width: 32,\n    /** 高さ */\n    height: 32,\n\n    init: function(x, y, width, height) {\n      this.set(x, y, width, height);\n    },\n\n    set: function(x, y, width, height) {\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n\n      return this;\n    },\n\n    moveTo: function(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    moveBy: function(x, y) {\n      this.x += x;\n      this.y += y;\n      return this;\n    },\n\n    setSize: function(w, h) {\n      this.width = w;\n      this.height = h;\n      return this;\n    },\n\n    padding: function(top, right, bottom, left) {\n      // css の padding に合わせて時計回りにパラメータ調整\n      switch (arguments.length) {\n        case 1:\n          top = right = bottom = left = arguments[0];\n          break;\n        case 2:\n          top     = bottom = arguments[0];\n          right   = left   = arguments[1];\n          break;\n        case 3:\n          top     = arguments[0];\n          right   = left = arguments[1];\n          bottom  = arguments[2];\n          break;\n      }\n      \n      this.x += left;\n      this.y += top;\n      this.width -= left+right;\n      this.height-= top +bottom;\n      \n      return this;\n    },\n\n    contains: function(x, y) {\n      return this.left <= x && x <= this.right && this.top <= y && y <= this.bottom;\n    },\n\n    clone: function() {\n      return phina.geom.Rect(this.x, this.y, this.width, this.height);\n    },\n\n    toCircle: function() {\n      var radius = ((this.width < this.height) ? this.width : this.height)/2;\n      return phina.geom.Circle(this.centerX, this.centerY, radius);\n    },\n\n    /**\n     * 配列に変換\n     */\n    toArray: function() {\n      return [this.x, this.y, this.width, this.height];\n    },\n\n    _accessor: {\n      \n      /**\n       * @property  left\n       * left\n       */\n      left: {\n        \"get\": function()   { return this.x; },\n        \"set\": function(v)  { this.width -= v-this.x; this.x = v; }\n      },\n      /**\n       * @property  top\n       * top\n       */\n      top: {\n        \"get\": function()   { return this.y; },\n        \"set\": function(v)  { this.height -= v-this.y; this.y = v; }\n      },\n      /**\n       * @property  right\n       * right\n       */\n      right: {\n        \"get\": function()   { return this.x + this.width; },\n        \"set\": function(v)  { this.width += v-this.right; },\n      },\n      /**\n       * @property  bottom\n       * bottom\n       */\n      bottom: {\n        \"get\": function()   { return this.y + this.height; },\n        \"set\": function(v)  { this.height += v-this.bottom; },\n      },\n      \n      /**\n       * @property  centerX\n       * centerX\n       */\n      centerX: {\n        \"get\": function()   { return this.x + this.width/2; },\n        \"set\": function(v)  {\n          // TODO: 検討中\n        },\n      },\n      \n      /**\n       * @property  centerY\n       * centerY\n       */\n      centerY: {\n        \"get\": function()   { return this.y + this.height/2; },\n        \"set\": function(v)  {\n          // TODO: 検討中\n        },\n      },\n    }\n\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.geom.Circle\n   * \n   */\n  phina.define('phina.geom.Circle', {\n\n    /** x */\n    x: 0,\n    /** y */\n    y: 0,\n    /** 半径 */\n    radius: 32,\n\n    init: function(x, y, radius) {\n      this.set(x, y, radius);\n    },\n\n    set: function(x, y, radius) {\n      this.x = x;\n      this.y = y;\n      this.radius = radius;\n\n      return this;\n    },\n\n    moveTo: function(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    moveBy: function(x, y) {\n      this.x += x;\n      this.y += y;\n      return this;\n    },\n\n    contains: function(x, y) {\n      var lenX = this.x-x;\n      var lenY = this.y-y;\n      var lenSquared = (lenX*lenX)+(lenY*lenY);\n\n      return lenSquared <= this.radius*this.radius;\n    },\n\n    clone: function() {\n      return phina.geom.Circle(this.x, this.y, this.radius);\n    },\n\n    toRect: function() {\n      var size = this.size;\n      return phina.geom.Rect(this.x - this.radius, this.y - this.radius, size, size);\n    },\n\n    /**\n     * 配列に変換\n     */\n    toArray: function() {\n      return [this.x, this.y, this.radius];\n    },\n\n    _accessor: {\n      \n      /**\n       * @property  left\n       * left\n       */\n      left: {\n        \"get\": function()   { return this.x - this.radius; },\n        \"set\": function(v)  {\n          // TODO: \n        }\n      },\n      /**\n       * @property  top\n       * top\n       */\n      top: {\n        \"get\": function()   { return this.y - this.radius; },\n        \"set\": function(v)  {\n          // TODO: \n        }\n      },\n      /**\n       * @property  right\n       * right\n       */\n      right: {\n        \"get\": function()   { return this.x + this.radius; },\n        \"set\": function(v)  {\n          // TODO: \n        }\n      },\n      /**\n       * @property  bottom\n       * bottom\n       */\n      bottom: {\n        \"get\": function()   { return this.y + this.radius; },\n        \"set\": function(v)  {\n          // TODO: \n        }\n      },\n      \n      /**\n       * @property  size\n       * size\n       */\n      size: {\n        \"get\": function()   { return this.radius*2; },\n        \"set\": function(v)  {\n          // TODO: 検討中\n        },\n      },\n    }\n\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.geom.Collision\n   * \n   */\n  phina.define('phina.geom.Collision', {\n\n    _static: {\n      testCircleCircle: function(circle0, circle1) {\n        var distanceSquared = phina.geom.Vector2.distanceSquared(circle0, circle1);\n        return distanceSquared <= Math.pow(circle0.radius + circle1.radius, 2);\n      },\n      testRectRect: function(rect0, rect1) {\n        return (rect0.left < rect1.right) && (rect0.right > rect1.left) &&\n          (rect0.top < rect1.bottom) && (rect0.bottom > rect1.top);\n      },\n      testCircleRect: function(circle, rect) {\n        // まずは大きな矩形で判定(高速化)\n        var bigRect = phina.geom.Rect(rect.left-circle.radius, rect.top-circle.radius, rect.width+circle.radius*2, rect.height+circle.radius*2);\n        if (bigRect.contains(circle.x, circle.y) === false) {\n          return false;\n        }\n        \n        // 2種類の矩形と衝突判定\n        var r = phina.geom.Rect(rect.left-circle.radius, rect.top, rect.width+circle.radius*2, rect.height);\n        if (r.contains(circle.x, circle.y)) {\n          return true;\n        }\n        r.set(rect.left, rect.top-circle.radius, rect.width, rect.height+circle.radius*2);\n        if (r.contains(circle.x, circle.y)) {\n          return true;\n        }\n        \n        // 円と矩形の４点の判定\n        var c = phina.geom.Circle(circle.x, circle.y, circle.radius);\n        // left top\n        if (c.contains(rect.left, rect.top)) {\n          return true;\n        }\n        // right top\n        if (c.contains(rect.right, rect.top)) {\n          return true;\n        }\n        // right bottom\n        if (c.contains(rect.right, rect.bottom)) {\n          return true;\n        }\n        // left bottom\n        if (c.contains(rect.left, rect.bottom)) {\n          return true;\n        }\n        \n        return false;\n      },\n      // 円と2点を結ぶ線分の当たり判定\n      testCircleLine : function(circle, p1, p2) {\n        // 先に線分端との判定\n        if (circle.contains(p1.x, p1.y) || circle.contains(p2.x, p2.y)) return true;\n        // 半径の2乗\n        var r2 = circle.radius * circle.radius;\n        // 円の中心座標\n        var p3 = phina.geom.Vector2(circle.x, circle.y);\n        // 各ベクトル\n        var p1p2 = phina.geom.Vector2.sub(p1, p2);\n        var p1p3 = phina.geom.Vector2.sub(p1, p3);\n        var p2p3 = phina.geom.Vector2.sub(p2, p3);\n        // 外積\n        var cross = phina.geom.Vector2.cross(p1p2, p1p3);\n        // 外積の絶対値の2乗\n        var cross2 = cross * cross;\n        // p1p2の長さの2乗\n        var length2 = p1p2.lengthSquared();\n        // 円の中心から線分までの垂線の距離の2乗\n        var d2 = cross2 / length2;\n        // 円の半径の2乗より小さいなら重複\n        if (d2 <= r2) {\n          var dot1 = phina.geom.Vector2.dot(p1p3, p1p2);\n          var dot2 = phina.geom.Vector2.dot(p2p3, p1p2);\n          // 通常は内積の乗算\n          if (dot1 * dot2 <= 0) return true;\n        }\n        return false;\n      },\n    }\n\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.util.Support\n   * \n   */\n  phina.define('phina.util.Support', {\n    _static: {\n      canvas: !!phina.global.CanvasRenderingContext2D,\n      webGL: (function() {\n        return !!phina.global.CanvasRenderingContext2D && !!document.createElement('canvas').getContext('webgl');\n      })(),\n      webAudio: !!phina.global.AudioContext || !!phina.global.webkitAudioContext || !!phina.global.mozAudioContext,\n    },\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.util.EventDispatcher\n   */\n  phina.define('phina.util.EventDispatcher', {\n\n    init: function() {\n      this._listeners = {};\n    },\n\n    on: function(type, listener) {\n      if (this._listeners[type] === undefined) {\n        this._listeners[type] = [];\n      }\n\n      this._listeners[type].push(listener);\n      return this;\n    },\n\n    off: function(type, listener) {\n      var listeners = this._listeners[type];\n      var index = listeners.indexOf(listener);\n      if (index != -1) {\n        listeners.splice(index,1);\n      }\n      return this;\n    },\n\n    fire: function(e) {\n      e.target = this;\n      var oldEventName = 'on' + e.type;\n      if (this[oldEventName]) this[oldEventName](e);\n      \n      var listeners = this._listeners[e.type];\n      if (listeners) {\n        var temp = listeners.clone();\n        for (var i=0,len=temp.length; i<len; ++i) {\n            temp[i].call(this, e);\n        }\n      }\n      \n      return this;\n    },\n\n    flare: function(type, param) {\n      var e = {type:type};\n      if (param) {\n        param.forIn(function(key, val) {\n          e[key] = val;\n        });\n      }\n      this.fire(e);\n\n      return this;\n    },\n\n    one: function(type, listener) {\n      var self = this;\n      \n      var func = function() {\n        var result = listener.apply(self, arguments);\n        self.off(type, func);\n        return result;\n      };\n      \n      this.on(type, func);\n      \n      return this;\n    },\n\n    has: function(type) {\n      if (this._listeners[type] === undefined && !this[\"on\" + type]) return false;\n      return true;\n    },\n\n    clear: function(type) {\n      var oldEventName = 'on' + type;\n      if (this[oldEventName]) delete this[oldEventName];\n      this._listeners[type] = [];\n      return this;\n    },\n  });\n\n\n  // 別名のメソッドを定義\n  (function() {\n    var methodMap = {\n      addEventListener: 'on',\n      removeEventListener: 'off',\n      clearEventListener: 'clear',\n      hasEventListener: 'has',\n      dispatchEvent: 'fire',\n      dispatchEventByType: 'flare',\n    };\n    methodMap.forIn(function(old, name) {\n      phina.util.EventDispatcher.prototype.$method(old, phina.util.EventDispatcher.prototype[name]);\n    });\n  })();\n\n});\n\n\n;(function() {\n\n  /**\n   * @class phina.util.Tween\n   * \n   */\n  phina.define('phina.util.Tween', {\n    superClass: 'phina.util.EventDispatcher',\n\n    /**\n     * @constructor\n     */\n    init: function(target) {\n      this.superInit();\n\n      this.time = 0;\n    },\n\n    fromTo: function(target, beginProps, finishProps, duration, easing) {\n      this.target = target;\n      this.beginProps = beginProps;\n      this.finishProps = finishProps;\n      this.duration = duration || 1000;\n      this.easing = easing;\n\n      // setup\n      this.changeProps = {};\n      for (var key in beginProps) {\n          this.changeProps[key] = finishProps[key] - beginProps[key];\n      }\n\n      return this;\n    },\n\n    to: function(target, finishProps, duration, easing) {\n      var beginProps = {};\n\n      for (var key in finishProps) {\n        beginProps[key] = target[key];\n      }\n\n      this.fromTo(target, beginProps, finishProps, duration, easing);\n\n      return this;\n    },\n\n    from: function(target, beginProps, duration, easing) {\n        var finishProps = {};\n\n        for (var key in beginProps) {\n          finishProps[key] = target[key];\n          target[key] = beginProps[key];\n        }\n\n        this.fromTo(target, beginProps, finishProps, duration, easing);\n\n        return this;\n    },\n\n    by: function(target, props, duration, easing) {\n      var beginProps = {};\n      var finishProps = {};\n\n      for (var key in props) {\n        beginProps[key] = target[key];\n        finishProps[key] = target[key] + props[key];\n      }\n\n      this.fromTo(target, beginProps, finishProps, duration, easing);\n\n      return this;\n    },\n\n    yoyo: function() {\n      var temp = this.beginProps;\n      this.beginProps = this.finishProps;\n      this.finishProps = temp;\n      this.changeProps.forIn(function(key, value, index) {\n        this.changeProps[key] = -value;\n        this.target[key] = this.beginProps[key];\n      }, this);\n      // TODO: easing も反転させる\n      // this.easing = easing;\n      return this;\n    },\n\n    gain: function(time) {\n      this.seek(this.time + time);\n    },\n    forward: function(time) {\n      this.seek(this.time + time);\n    },\n\n    backward: function(time) {\n      this.seek(this.time - time);\n    },\n\n    seek: function(time) {\n      this.time = Math.clamp(time, 0, this.duration);\n\n      this.beginProps.forIn(function(key, value) {\n        var v = this.easing(this.time, value, this.changeProps[key], this.duration);\n        this.target[key] = v;\n      }, this);\n\n      return this;\n    },\n\n    _accessor: {\n      easing: {\n        get: function() {\n          return this._easing;\n        },\n        set: function(v) {\n          this._easing = phina.util.Tween.EASING[v] || phina.util.Tween.EASING.default;\n        },\n      },\n    },\n\n    _static: {\n      /**\n       * @static\n       * イージング\n       * ### Reference\n       * - <http://coderepos.org/share/wiki/JSTweener>\n       * - <http://coderepos.org/share/browser/lang/javascript/jstweener/trunk/src/JSTweener.js>\n       * - <http://gsgd.co.uk/sandbox/jquery/easing/jquery.easing.1.3.js>\n       * - <http://hosted.zeh.com.br/tweener/docs/en-us/misc/transitions.html>\n       */\n      EASING: {\n\n        /** default */\n        \"default\": function(t, b, c, d) {\n          return c*t/d + b;\n        },\n        /** linear */\n        linear: function(t, b, c, d) {\n          return c*t/d + b;\n        },\n        /** swing */\n        swing: function(t, b, c, d) {\n          return -c *(t/=d)*(t-2) + b;\n        },\n        /** easeInQuad */\n        easeInQuad: function(t, b, c, d) {\n          return c*(t/=d)*t + b;\n        },\n        /** easeOutQuad */\n        easeOutQuad: function(t, b, c, d) {\n          return -c *(t/=d)*(t-2) + b;\n        },\n        /** easeInOutQuad */\n        easeInOutQuad: function(t, b, c, d) {\n          if((t/=d/2) < 1) return c/2*t*t + b;\n          return -c/2 *((--t)*(t-2) - 1) + b;\n        },\n        /** defeInCubic */\n        easeInCubic: function(t, b, c, d) {\n          return c*(t/=d)*t*t + b;\n        },\n        /** easeOutCubic */\n        easeOutCubic: function(t, b, c, d) {\n          return c*((t=t/d-1)*t*t + 1) + b;\n        },\n        /** easeInOutCubic */\n        easeInOutCubic: function(t, b, c, d) {\n          if((t/=d/2) < 1) return c/2*t*t*t + b;\n          return c/2*((t-=2)*t*t + 2) + b;\n        },\n        /** easeOutInCubic */\n        easeOutInCubic: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutCubic(t*2, b, c/2, d);\n          return phina.util.Tween.EASING.easeInCubic((t*2)-d, b+c/2, c/2, d);\n        },\n        /** easeInQuart */\n        easeInQuart: function(t, b, c, d) {\n          return c*(t/=d)*t*t*t + b;\n        },\n        /** easeOutQuart */\n        easeOutQuart: function(t, b, c, d) {\n          return -c *((t=t/d-1)*t*t*t - 1) + b;\n        },\n        /** easeInOutQuart */\n        easeInOutQuart: function(t, b, c, d) {\n          if((t/=d/2) < 1) return c/2*t*t*t*t + b;\n          return -c/2 *((t-=2)*t*t*t - 2) + b;\n        },\n        /** easeOutInQuart */\n        easeOutInQuart: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutQuart(t*2, b, c/2, d);\n          return phina.util.Tween.EASING.easeInQuart((t*2)-d, b+c/2, c/2, d);\n        },\n        /** easeInQuint */\n        easeInQuint: function(t, b, c, d) {\n          return c*(t/=d)*t*t*t*t + b;\n        },\n        /** easeOutQuint */\n        easeOutQuint: function(t, b, c, d) {\n          return c*((t=t/d-1)*t*t*t*t + 1) + b;\n        },\n        /** easeInOutQuint */\n        easeInOutQuint: function(t, b, c, d) {\n          if((t/=d/2) < 1) return c/2*t*t*t*t*t + b;\n          return c/2*((t-=2)*t*t*t*t + 2) + b;\n        },\n        /** easeOutInQuint */\n        easeOutInQuint: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutQuint(t*2, b, c/2, d);\n          return phina.util.Tween.EASING.easeInQuint((t*2)-d, b+c/2, c/2, d);\n        },\n        /** easeInSine */\n        easeInSine: function(t, b, c, d) {\n          return -c * Math.cos(t/d *(Math.PI/2)) + c + b;\n        },\n        /** easeOutSine */\n        easeOutSine: function(t, b, c, d) {\n          return c * Math.sin(t/d *(Math.PI/2)) + b;\n        },\n        /** easeInOutSine */\n        easeInOutSine: function(t, b, c, d) {\n          return -c/2 *(Math.cos(Math.PI*t/d) - 1) + b;\n        },\n        /** easeOutInSine */\n        easeOutInSine: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutSine(t*2, b, c/2, d);\n          return phina.util.Tween.EASING.easeInSine((t*2)-d, b+c/2, c/2, d);\n        },\n        /** easeInExpo */\n        easeInExpo: function(t, b, c, d) {\n          return(t==0) ? b : c * Math.pow(2, 10 *(t/d - 1)) + b - c * 0.001;\n        },\n        /** easeOutExpo */\n        easeOutExpo: function(t, b, c, d) {\n          return(t==d) ? b+c : c * 1.001 *(-Math.pow(2, -10 * t/d) + 1) + b;\n        },\n        /** easeInOutExpo */\n        easeInOutExpo: function(t, b, c, d) {\n          if(t==0) return b;\n          if(t==d) return b+c;\n          if((t/=d/2) < 1) return c/2 * Math.pow(2, 10 *(t - 1)) + b - c * 0.0005;\n          return c/2 * 1.0005 *(-Math.pow(2, -10 * --t) + 2) + b;\n        },\n        /** easeOutInExpo */\n        easeOutInExpo: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutExpo(t*2, b, c/2, d);\n          return phina.util.Tween.EASING.easeInExpo((t*2)-d, b+c/2, c/2, d);\n        },\n        /** easeInCirc */\n        easeInCirc: function(t, b, c, d) {\n          return -c *(Math.sqrt(1 -(t/=d)*t) - 1) + b;\n        },\n        /** easeOutCirc */\n        easeOutCirc: function(t, b, c, d) {\n          return c * Math.sqrt(1 -(t=t/d-1)*t) + b;\n        },\n        /** easeInOutCirc */\n        easeInOutCirc: function(t, b, c, d) {\n          if((t/=d/2) < 1) return -c/2 *(Math.sqrt(1 - t*t) - 1) + b;\n          return c/2 *(Math.sqrt(1 -(t-=2)*t) + 1) + b;\n        },\n        /** easeOutInCirc */\n        easeOutInCirc: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutCirc(t*2, b, c/2, d);\n          return phina.util.Tween.EASING.easeInCirc((t*2)-d, b+c/2, c/2, d);\n        },\n        /** easeInElastic */\n        easeInElastic: function(t, b, c, d, a, p) {\n          var s;\n          if(t==0) return b;  if((t/=d)==1) return b+c;  if(!p) p=d*.3;\n          if(!a || a < Math.abs(c)) { a=c; s=p/4; } else s = p/(2*Math.PI) * Math.asin(c/a);\n          return -(a*Math.pow(2,10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p )) + b;\n        },\n        /** easeOutElastic */\n        easeOutElastic: function(t, b, c, d, a, p) {\n          var s;\n          if(t==0) return b;  if((t/=d)==1) return b+c;  if(!p) p=d*.3;\n          if(!a || a < Math.abs(c)) { a=c; s=p/4; } else s = p/(2*Math.PI) * Math.asin(c/a);\n          return(a*Math.pow(2,-10*t) * Math.sin((t*d-s)*(2*Math.PI)/p ) + c + b);\n        },\n        /** easeInOutElastic */\n        easeInOutElastic: function(t, b, c, d, a, p) {\n          var s;\n          if(t==0) return b;  if((t/=d/2)==2) return b+c;  if(!p) p=d*(.3*1.5);\n          if(!a || a < Math.abs(c)) { a=c; s=p/4; }       else s = p/(2*Math.PI) * Math.asin(c/a);\n          if(t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p )) + b;\n          return a*Math.pow(2,-10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p )*.5 + c + b;\n        },\n        /** easeOutInElastic */\n        easeOutInElastic: function(t, b, c, d, a, p) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutElastic(t*2, b, c/2, d, a, p);\n          return phina.util.Tween.EASING.easeInElastic((t*2)-d, b+c/2, c/2, d, a, p);\n        },\n        /** easeInBack */\n        easeInBack: function(t, b, c, d, s) {\n          if(s == undefined) s = 1.70158;\n          return c*(t/=d)*t*((s+1)*t - s) + b;\n        },\n        /** easeOutBack */\n        easeOutBack: function(t, b, c, d, s) {\n          if(s == undefined) s = 1.70158;\n          return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;\n        },\n        /** easeInOutBack */\n        easeInOutBack: function(t, b, c, d, s) {\n          if(s == undefined) s = 1.70158;\n          if((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;\n          return c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;\n        },\n        /** easeOutInBack */\n        easeOutInBack: function(t, b, c, d, s) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutBack(t*2, b, c/2, d, s);\n          return phina.util.Tween.EASING.easeInBack((t*2)-d, b+c/2, c/2, d, s);\n        },\n        /** easeInBounce */\n        easeInBounce: function(t, b, c, d) {\n          return c - phina.util.Tween.EASING.easeOutBounce(d-t, 0, c, d) + b;\n        },\n        /** easeOutBounce */\n        easeOutBounce: function(t, b, c, d) {\n          if((t/=d) <(1/2.75)) {\n            return c*(7.5625*t*t) + b;\n          } else if(t <(2/2.75)) {\n            return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;\n          } else if(t <(2.5/2.75)) {\n            return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;\n          } else {\n            return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;\n          }\n        },\n        /** easeInOutBounce */\n        easeInOutBounce: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeInBounce(t*2, 0, c, d) * .5 + b;\n          else return phina.util.Tween.EASING.easeOutBounce(t*2-d, 0, c, d) * .5 + c*.5 + b;\n        },\n        /** easeOutInBounce */\n        easeOutInBounce: function(t, b, c, d) {\n          if(t < d/2) return phina.util.Tween.EASING.easeOutBounce(t*2, b, c/2, d);\n          return phina.util.Tween.EASING.easeInBounce((t*2)-d, b+c/2, c/2, d);\n        }\n\n      },\n    },\n  });\n\n})();\n\n\n\n;(function() {\n\n  /**\n   * @class phina.util.Ticker\n   * tick management class\n   */\n  phina.define('phina.util.Ticker', {\n    superClass: 'phina.util.EventDispatcher',\n\n    /** 経過フレーム数 */\n    frame: null,\n    /** 1フレームの経過時間 */\n    deltaTime: null,\n    /** 全体の経過時間 */\n    elapsedTime: null,\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n\n      this.fps = 30;\n      this.frame = 0;\n      this.deltaTime = 0;\n      this.elapsedTime = 0;\n    },\n\n    tick: function(func) {\n      this.on('tick', func);\n    },\n\n    run: function() {\n      var now = (new Date()).getTime();\n      // 1フレームに掛かった時間\n      this.deltaTime = now - this.currentTime;\n      // 全体の経過時間\n      this.elapsedTime = now - this.startTime;\n\n      var start = this.currentTime = now;\n      this.flare('tick');\n      var end = (new Date()).getTime();\n\n      // フレームを更新\n      this.frame += 1;\n\n      // calculate elapsed time\n      var elapsed = end-start;\n\n      // calculate next waiting time\n      var delay = Math.max(this.frameTime-elapsed, 0);\n\n      return delay;\n    },\n\n    start: function() {\n      var self = this;\n\n      this.startTime = this.currentTime = (new Date()).getTime();\n\n      var fn = function() {\n        var delay = self.run();\n        setTimeout(fn, delay);\n      };\n      fn();\n\n      return this;\n    },\n\n    resume: function() {\n      // TODO: \n    },\n\n    stop: function() {\n      // TODO: \n    },\n\n    rewind: function() {\n      // TODO: \n    },\n\n    _accessor: {\n      fps: {\n        \"get\": function()   { return this._fps; },\n        \"set\": function(v)  {\n          this._fps = v;\n          this.frameTime = 1000/this._fps;\n        },\n      },\n    },\n  });\n\n})();\n\n;(function() {\n\n  /**\n   * @class phina.util.Grid\n   * tick management class\n   */\n  phina.define('phina.util.Grid', {\n\n    /** 幅 */\n    width: 640,\n    /** 列数 */\n    columns: 12,\n    /** ループ */\n    loop: false,\n    /** オフセット値 */\n    offset: 0,\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      if (typeof arguments[0] === 'object') {\n        var param = arguments[0];\n        var width = param.width || 640;\n        var columns = param.columns || 12;\n        var loop = param.loop || false;\n        var offset = param.offset || 0;\n      }\n      else {\n        var width   = arguments[0] || 640;\n        var columns = arguments[1] || 12;\n        var loop    = arguments[2] || false;\n        var offset = arguments[3] || 0;\n      }\n\n      this.width = width;\n      this.columns = columns;\n      this.loop = loop;\n      this.offset = offset;\n      this.unitWidth = this.width/this.columns;\n    },\n\n    // スパン指定で値を取得(負数もok)\n    span: function(index) {\n      if (this.loop) {\n        index += this.columns;\n        index %= this.columns;\n      }\n      return this.unitWidth * index + this.offset;\n    },\n\n    //\n    unit: function() {\n      return this.unitWidth;\n    },\n\n    center: function(offset) {\n      var index = offset || 0;\n      return (this.width/2) + (this.unitWidth * index);\n    },\n\n  });\n\n})();\n\n\n\n// 監視オブジェクト\n// register で key を登録 (デフォルト値も一緒に？)\n// event dispatcher を継承\n// event dispatcher って util じゃね？\n// register で登録した値を変更したら change イベントが走る\n\n\n// 名前候補\n//  middleman(仲立人)\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.util.ChangeDispatcher\n   */\n  phina.define('phina.util.ChangeDispatcher', {\n    superClass: 'phina.util.EventDispatcher',\n\n    init: function() {\n      this.superInit();\n\n      this._observe = true;\n    },\n\n    register: function(key, defaultValue) {\n      if (arguments.length === 1) {\n        var obj = arguments[0];\n        obj.forIn(function(key, value) {\n          this.register(key, value);\n        }, this);\n      }\n      else {\n        var tempKey = '__' + key;\n        this[tempKey] = defaultValue;\n        this.accessor(key, {\n          get: function() {\n            return this[tempKey];\n          },\n          set: function(v) {\n            this[tempKey] = v;\n            if (this._observe) {\n              this.flare('change');\n            }\n          },\n        });\n      }\n      return this;\n    },\n\n    observe: function() {\n      this._observe = true;\n    },\n    unobserve: function() {\n      this._observe = false;\n    },\n  });\n\n});\n\n;(function() {\n\n  /**\n   * @class phina.util.Flow\n   * tick management class\n   */\n  phina.define('phina.util.Flow', {\n    superClass: 'phina.util.EventDispatcher',\n\n    /**\n     * @constructor\n     */\n    init: function(func, wait) {\n      this.superInit();\n\n      this.status = 'pending';\n      this.resultValue = null;\n      this._queue = [];\n      this.func = func;\n\n      if (wait !== true) {\n        var self = this;\n        var resolve = function() {\n          self.resolve.apply(self, arguments);\n          self.status = 'resolved';\n        };\n        var reject = function() {\n          self.reject.apply(self, arguments);\n          self.status = 'rejected';\n        };\n\n        this.func(resolve, reject);\n      }\n    },\n\n    /*\n     * 成功\n     */\n    resolve: function(arg) {\n      this.resultValue = arg;\n\n      // キューに積まれた関数を実行\n      this._queue.each(function(func) {\n        func(this.resultValue);\n      }, this);\n      this._queue.clear();\n    },\n\n    /*\n     * 失敗\n     */\n    reject: function() {\n\n    },\n\n    /*\n     * 非同期終了時の処理を登録\n     */\n    then: function(func) {\n      var self = this;\n      // 成功ステータスだった場合は即実行\n      if (this.status === 'resolved') {\n        var value = func(this.resultValue);\n        return phina.util.Flow.resolve(value);\n      }\n      else {\n        var flow = phina.util.Flow(function(resolve) {\n          resolve();\n        }, true);\n\n        this._queue.push(function(arg) {\n          var resultValue = func(arg);\n\n          if (resultValue instanceof phina.util.Flow) {\n            resultValue.then(function(value) {\n              flow.resolve(value);\n            });\n          }\n          else {\n            flow.resolve(arg);\n          }\n        });\n\n        return flow;\n      }\n    },\n\n    _static: {\n      resolve: function(value) {\n        if (value instanceof phina.util.Flow) {\n          return value;\n        }\n        else {\n          var flow = phina.util.Flow(function(resolve) {\n            resolve(value);\n          });\n          return flow;\n        }\n      },\n      all: function(flows) {\n        return phina.util.Flow(function(resolve) {\n          var count = 0;\n\n          var args = [];\n\n          flows.each(function(flow) {\n            flow.then(function(d) {\n              ++count;\n              args.push(d);\n\n              if (count >= flows.length) {\n                resolve(args);\n              }\n            });\n          });\n        });\n      },\n    },\n  });\n\n})();\n/*\n * color.js\n */\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.util.Color\n   * カラークラス\n   */\n  phina.define(\"phina.util.Color\", {\n    /** R値 */\n    r: 255,\n    /** G値 */\n    g: 255,\n    /** B値 */\n    b: 255,\n    /** A値 */\n    a: 1.0,\n\n    /**\n     * 初期化\n     */\n    init: function(r, g, b, a) {\n      this.set.apply(this, arguments);\n    },\n\n    /**\n     * セッター.\n     */\n    set: function(r, g, b, a) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      this.a = (a !== undefined) ? a : 1.0;\n      return this;\n    },\n\n    /**\n     * 数値によるセッター.\n     */\n    setFromNumber: function(r, g, b, a) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      this.a = (a !== undefined) ? a : 1.0;\n      return this;\n    },\n\n    /**\n     * 配列によるセッター\n     */\n    setFromArray: function(arr) {\n      return this.set.apply(this, arr);\n    },\n\n    /**\n     * オブジェクトによるセッター\n     */\n    setFromObject: function(obj) {\n      return this.set(obj.r, obj.g, obj.b, obj.a);\n    },\n\n    /**\n     * 文字列によるセッター\n     */\n    setFromString: function(str) {\n      var color = phina.util.Color.stringToNumber(str);\n      return this.set(color[0], color[1], color[2], color[3]);\n    },\n\n    /**\n     * 賢いセッター\n     */\n    setSmart: function() {\n      var arg = arguments[0];\n      if (arguments.length >= 3) {\n        this.set(arguments.r, arguments.g, arguments.b, arguments.a);\n      } else if (arg instanceof Array) {\n        this.setFromArray(arg);\n      } else if (arg instanceof Object) {\n        this.setFromObject(arg);\n      } else if (typeof(arg) == \"string\") {\n        this.setFromString(arg);\n      }\n      return this;\n    },\n\n    /**\n     * CSS 用 16進数文字列に変換\n     */\n    toStyleAsHex: function() {\n      return \"#{0}{1}{2}\".format(\n        this.r.toString(16).padding(2, '0'),\n        this.g.toString(16).padding(2, '0'),\n        this.b.toString(16).padding(2, '0')\n      );\n    },\n\n    /**\n     * CSS 用 RGB文字列に変換\n     */\n    toStyleAsRGB: function() {\n      return \"rgb({r},{g},{b})\".format({\n        r: ~~this.r,\n        g: ~~this.g,\n        b: ~~this.b\n      });\n    },\n\n\n    /**\n     * CSS 用 RGBA文字列に変換\n     */\n    toStyleAsRGBA: function() {\n      return \"rgba({r},{g},{b},{a})\".format({\n        r: ~~this.r,\n        g: ~~this.g,\n        b: ~~this.b,\n        a: this.a\n      });\n    },\n\n    /**\n     * CSS 用 RGBA 文字列に変換\n     */\n    toStyle: function() {\n      return \"rgba({r},{g},{b},{a})\".format({\n        r: ~~this.r,\n        g: ~~this.g,\n        b: ~~this.b,\n        a: this.a\n      });\n    },\n\n    _static: {\n\n      /**\n       * @static\n       * カラーリスト\n       */\n      COLOR_LIST: {\n        /** @property black */\n        \"black\": [0x00, 0x00, 0x00],\n        /** @property silver */\n        \"silver\": [0xc0, 0xc0, 0xc0],\n        /** @property gray */\n        \"gray\": [0x80, 0x80, 0x80],\n        /** @property white */\n        \"white\": [0xff, 0xff, 0xff],\n        /** @property maroon */\n        \"maroon\": [0x80, 0x00, 0x00],\n        /** @property red */\n        \"red\": [0xff, 0x00, 0x00],\n        /** @property purple */\n        \"purple\": [0x80, 0x00, 0x80],\n        /** @property fuchsia */\n        \"fuchsia\": [0xff, 0x00, 0xff],\n        /** @property green */\n        \"green\": [0x00, 0x80, 0x00],\n        /** @property lime */\n        \"lime\": [0x00, 0xff, 0x00],\n        /** @property olive */\n        \"olive\": [0x80, 0x80, 0x00],\n        /** @property yellow */\n        \"yellow\": [0xff, 0xff, 0x00],\n        /** @property navy */\n        \"navy\": [0x00, 0x00, 0x80],\n        /** @property blue */\n        \"blue\": [0x00, 0x00, 0xff],\n        /** @property teal */\n        \"teal\": [0x00, 0x80, 0x80],\n        /** @property aqua */\n        \"aqua\": [0x00, 0xff, 0xff],\n      },\n\n      /**\n       * @static\n       * @member phina.util.Color\n       * @method strToNum\n       */\n      strToNum: function(str) {\n        return this.stringToNumber(str);\n      },\n      stringToNumber: function(str) {\n        var value = null;\n        var type = null;\n\n        if (str[0] === '#') {\n          type = (str.length == 4) ? \"hex111\" : \"hex222\";\n        } else if (str[0] === 'r' && str[1] === 'g' && str[2] === 'b') {\n          type = (str[3] == 'a') ? \"rgba\" : \"rgb\";\n        } else if (str[0] === 'h' && str[1] === 's' && str[2] === 'l') {\n          type = (str[3] == 'a') ? \"hsla\" : \"hsl\";\n        }\n\n        if (type) {\n          var match_set = MATCH_SET_LIST[type];\n          var m = str.match(match_set.reg);\n          value = match_set.exec(m);\n        } else if (phina.util.Color.COLOR_LIST[str]) {\n          value = phina.util.Color.COLOR_LIST[str];\n        }\n\n        return value;\n      },\n\n      /**\n       * @static\n       * @method\n       * hsl を rgb に変換\n       */\n      HSLtoRGB: function(h, s, l) {\n        var r, g, b;\n\n        h %= 360;\n        h += 360;\n        h %= 360;\n        s *= 0.01;\n        l *= 0.01;\n\n        if (s === 0) {\n          var l = Math.round(l * 255);\n          return [l, l, l];\n        }\n        var m2 = (l < 0.5) ? l * (1 + s) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        // red\n        var temp = (h + 120) % 360;\n        if (temp < 60) {\n          r = m1 + (m2 - m1) * temp / 60;\n        } else if (temp < 180) {\n          r = m2;\n        } else {\n          r = m1;\n        }\n\n        // green\n        temp = h;\n        if (temp < 60) {\n          g = m1 + (m2 - m1) * temp / 60;\n        } else if (temp < 180) {\n          g = m2;\n        } else if (temp < 240) {\n          g = m1 + (m2 - m1) * (240 - temp) / 60;\n        } else {\n          g = m1;\n        }\n\n        // blue\n        temp = ((h - 120) + 360) % 360;\n        if (temp < 60) {\n          b = m1 + (m2 - m1) * temp / 60;\n        } else if (temp < 180) {\n          b = m2;\n        } else if (temp < 240) {\n          b = m1 + (m2 - m1) * (240 - temp) / 60;\n        } else {\n          b = m1;\n        }\n\n        return [\n          parseInt(r * 255),\n          parseInt(g * 255),\n          parseInt(b * 255)\n        ];\n      },\n\n      /**\n       * @static\n       * @method\n       * hsla を rgba に変換\n       */\n      HSLAtoRGBA: function(h, s, l, a) {\n        var temp = phina.util.Color.HSLtoRGB(h, s, l);\n        temp[3] = a;\n        return temp;\n      },\n\n      /**\n       * @static\n       * @method\n       * rgb 値を作成\n       */\n      createStyleRGB: function(r, g, b) {\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \")\";\n      },\n\n      /**\n       * @static\n       * @method\n       * rgba 値を作成\n       */\n      createStyleRGBA: function(r, g, b, a) {\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n      },\n\n      /**\n       * @static\n       * @method\n       * hsl 値を作成\n       */\n      createStyleHSL: function(h, s, l) {\n        return \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\n      },\n\n      /**\n       * @static\n       * @method\n       * hsla 値を作成\n       */\n      createStyleHSLA: function(h, s, l, a) {\n        return \"hsla(\" + h + \",\" + s + \"%,\" + l + \"%,\" + a + \")\";\n      },\n    }\n  });\n\n\n  var MATCH_SET_LIST = {\n    \"hex111\": {\n      reg: /^#(\\w{1})(\\w{1})(\\w{1})$/,\n      exec: function(m) {\n        return [\n          parseInt(m[1] + m[1], 16),\n          parseInt(m[2] + m[2], 16),\n          parseInt(m[3] + m[3], 16)\n        ];\n      }\n    },\n    \"hex222\": {\n      reg: /^#(\\w{2})(\\w{2})(\\w{2})$/,\n      exec: function(m) {\n        return [\n          parseInt(m[1], 16),\n          parseInt(m[2], 16),\n          parseInt(m[3], 16)\n        ];\n      }\n    },\n    \"rgb\": {\n      reg: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n      exec: function(m) {\n        return [\n          parseInt(m[1]),\n          parseInt(m[2]),\n          parseInt(m[3])\n        ];\n      }\n    },\n    \"rgba\": {\n      reg: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1}(\\.{1}\\d+)?)\\)$/,\n      exec: function(m) {\n        return [\n          parseInt(m[1]),\n          parseInt(m[2]),\n          parseInt(m[3]),\n          parseFloat(m[4])\n        ];\n      }\n    },\n    \"hsl\": {\n      reg: /^hsl\\((\\d{1,3}),\\s*(\\d{1,3})%,\\s*(\\d{1,3})%\\)$/,\n      exec: function(m) {\n        return phina.util.Color.HSLtoRGB(m[1], m[2], m[3]);\n      }\n    },\n    \"hsla\": {\n      reg: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1}(\\.{1}\\d+)?)\\)$/,\n      exec: function(m) {\n        return phina.util.Color.HSLAtoRGBA(m[1], m[2], m[3], m[4]);\n      },\n    }\n  };\n\n});\n\n/*\n * random.js\n */\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.util.Random\n   * ランダムクラス\n   */\n  phina.define(\"phina.util.Random\", {\n\n    seed: 1,\n\n    init: function(seed) {\n      this.seed = seed || (Date.now()) || 1;\n    },\n\n    random: function() {\n      var seed = this.seed;\n      seed = seed ^ (seed << 13);\n      seed = seed ^ (seed >>> 17);\n      seed = (seed ^ (seed << 5));\n\n      this.seed = seed;\n\n      return (seed >>> 0) / phina.util.Random.MAX;\n    },\n\n    randint: function(min, max) {\n      return Math.floor( this.random()*(max-min+1) ) + min;\n    },\n    randfloat: function(min, max) {\n      return this.random()*(max-min)+min;\n    },\n    randbool: function() {\n      return this.randint(0, 1) === 1;\n    },\n    randarray: function(len, min, max) {\n      len = len || 100;\n      min = min || 0;\n      max = max || 100;\n\n      return (len).map(function() {\n        return this.randint(min, max);\n      }, this);\n    },\n\n    _accessor: {\n      seed: {\n        get: function() { return this._seed; },\n        set: function (v) { this._seed = (v >>> 0) || 1; },\n      },\n    },\n\n    _static: {\n      MAX: 4294967295,\n\n      seed: (Date.now()),\n\n      getSeed: function() {\n        return this.seed;\n      },\n      setSeed: function(seed) {\n        this.seed = (seed >>> 0) || 1;\n        return this;\n      },\n\n      random: function() {\n        this.seed = this.xor32(this.seed);\n        return (this.seed >>> 0) / phina.util.Random.MAX;\n      },\n\n      randint: function(min, max) {\n        return phina.global.Math.floor( this.random()*(max-min+1) ) + min;\n      },\n      randfloat: function(min, max) {\n        return this.random()*(max-min)+min;\n      },\n      randbool: function() {\n        return this.randint(0, 1) === 1;\n      },\n      randarray: function(len, min, max) {\n        len = len || 100;\n        min = min || 0;\n        max = max || 100;\n\n        return (len).map(function() {\n          return this.randint(min, max);\n        }, this);\n      },\n\n      xor32: function(seed) {\n        seed = seed ^ (seed << 13);\n        seed = seed ^ (seed >>> 17);\n        seed = (seed ^ (seed << 5));\n\n        return seed;\n      },\n\n      /*\n       * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n       */\n      uuid: function() {\n        var d = new Date().getTime();\n        if(phina.global.performance && typeof phina.global.performance.now === \"function\"){\n          d += performance.now(); //use high-precision timer if available\n        }\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          var r = (d + Math.random()*16)%16 | 0;\n          d = Math.floor(d/16);\n          return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n        });\n        return uuid;\n      },\n\n    },\n  });\n\n  Math.$method(\"randint\", function(min, max) {\n    return phina.util.Random.randint(min, max);\n  });\n  Math.$method(\"randfloat\", function(min, max) {\n    return phina.util.Random.randfloat(min, max);\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.util.QueryString\n   * \n   */\n  phina.define('phina.util.QueryString', {\n    _static: {\n      parse: function(text, sep, eq, isDecode) {\n        text = text || location.search.substr(1);\n        sep = sep || '&';\n        eq = eq || '=';\n        var decode = (isDecode) ? decodeURIComponent : function(a) { return a; };\n        return text.split(sep).reduce(function(obj, v) {\n          var pair = v.split(eq);\n          obj[pair[0]] = decode(pair[1]);\n          return obj;\n        }, {});\n      },\n      stringify: function(value, sep, eq, isEncode) {\n        sep = sep || '&';\n        eq = eq || '=';\n        var encode = (isEncode) ? encodeURIComponent : function(a) { return a; };\n        return Object.keys(value).map(function(key) {\n          return key + eq + encode(value[key]);\n        }).join(sep);\n      },\n    },\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.Asset\n   * \n   */\n  phina.define('phina.asset.Asset', {\n    superClass: \"phina.util.EventDispatcher\",\n\n    serverError: false,\n    notFound: false,\n    loadError: false,\n\n    /**\n     * @constructor\n     */\n    init: function(src) {\n      this.superInit();\n\n      this.loaded = false;\n    },\n\n    load: function(src) {\n      this.src = src;\n      return phina.util.Flow(this._load.bind(this));\n    },\n\n    isLoaded: function() {\n      return this.loaded;\n    },\n\n    _load: function(resolve) {\n      var self = this;\n      setTimeout(function() {\n        self.loaded = true;\n        resolve();\n      }, 100);\n    },\n\n    // ロード失敗時にダミーをセットする\n    loadDummy: function() { },\n\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.AssetManager\n   * \n   */\n  phina.define('phina.asset.AssetManager', {\n    _static: {\n      assets: {\n        image: {},\n        sound: {},\n        spritesheet: {},\n      },\n      \n      get: function(type, key) {\n        return this.assets[type] && this.assets[type][key];\n      },\n      set: function(type, key, asset) {\n        if (!this.assets[type]) {\n          this.assets[type] = {};\n        }\n        this.assets[type][key] = asset;\n      },\n      contains: function(type, key) {\n        return ;\n      }\n    },\n\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.AssetLoader\n   * \n   */\n  phina.define('phina.asset.AssetLoader', {\n    superClass: \"phina.util.EventDispatcher\",\n\n    /**\n     * @constructor\n     */\n    init: function(params) {\n      this.superInit();\n\n      params = (params || {}).$safe({\n        cache: true,\n      });\n\n      this.assets = {};\n      this.cache = params.cache;\n    },\n\n    load: function(params) {\n      var self = this;\n      var flows = [];\n\n      var counter = 0;\n\n      params.forIn(function(type, assets) {\n        assets.forIn(function(key, value) {\n          var func = phina.asset.AssetLoader.assetLoadFunctions[type];\n          var flow = func(key, value);\n          flow.then(function(asset) {\n            if (self.cache) {\n              phina.asset.AssetManager.set(type, key, asset);\n            }\n            self.flare('progress', {\n              key: key,\n              asset: asset,\n              progress: (++counter/flows.length),\n            });\n          });\n          flows.push(flow);\n        });\n      });\n\n\n      if (self.cache) {\n\n        self.on('progress', function(e) {\n          if (e.progress >= 1.0) {\n            // load失敗時、対策\n            params.forIn(function(type, assets) {\n              assets.forIn(function(key, value) {\n                var asset = phina.asset.AssetManager.get(type, key);\n                if (asset.loadError) {\n                  var dummy = phina.asset.AssetManager.get(type, 'dummy');\n                  if (dummy) {\n                    if (dummy.loadError) {\n                      dummy.loadDummy();\n                      dummy.loadError = false;\n                    }\n                    phina.asset.AssetManager.set(type, key, dummy);\n                  } else {\n                    asset.loadDummy();\n                  }\n                }\n              });\n            });\n          }\n        });\n      }\n      return phina.util.Flow.all(flows).then(function(args) {\n        self.flare('load');\n      });\n    },\n\n    _static: {\n      assetLoadFunctions: {\n        image: function(key, path) {\n          var texture = phina.asset.Texture();\n          var flow = texture.load(path);\n          return flow;\n        },\n        sound: function(key, path) {\n          var sound = phina.asset.Sound();\n          var flow = sound.load(path);\n          return flow;\n        },\n        spritesheet: function(key, path) {\n          var ss = phina.asset.SpriteSheet();\n          var flow = ss.load(path);\n          return flow;\n        },\n        script: function(key, path) {\n          var script = phina.asset.Script();\n          return script.load(path);\n        },\n        font: function(key, path) {\n          var font = phina.asset.Font();\n          font.setFontName(key);\n          return font.load(path);\n        },\n        json: function(key, path) {\n          var text = phina.asset.File();\n          return text.load({\n            path: path,\n            dataType: \"json\",\n          });\n        },\n        xml: function(key, path) {\n          var text = phina.asset.File();\n          return text.load({\n            path: path,\n            dataType: \"xml\",\n          });\n        },\n        text: function(key, path) {\n          var text = phina.asset.File();\n          return text.load(path);\n        }\n      }\n    }\n\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.File\n   * \n   */\n  phina.define('phina.asset.File', {\n    superClass: \"phina.asset.Asset\",\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n    },\n\n    _load: function(resolve) {\n\n      var params = {};\n\n      if (typeof this.src === 'string') {\n        params.$extend({\n          path: this.src,\n        });\n      }\n      else if (typeof this.src === 'object') {\n        params.$extend(this.src);\n      }\n\n      params.$safe({\n        path: '',\n        dataType: 'text',\n      });\n\n      // load\n      var self = this;\n      var xml = new XMLHttpRequest();\n      xml.open('GET', params.path);\n      xml.onreadystatechange = function() {\n        if (xml.readyState === 4) {\n          if ([200, 201, 0].indexOf(xml.status) !== -1) {\n            var data = xml.responseText;\n\n            if (params.dataType === 'json') {\n              data = JSON.parse(data);\n            } else if (params.dataType === 'xml') {\n              data = (new DOMParser()).parseFromString(data, \"text/xml\");\n            }\n            self.dataType = params.dataType;\n\n            self.data = data;\n            resolve(self);\n          }\n        }\n      };\n\n      xml.send(null);\n      // this.domElement = new Image();\n      // this.domElement.src = this.src;\n\n      // var self = this;\n      // this.domElement.onload = function() {\n      //   self.loaded = true;\n      //   resolve(self);\n      // };\n    },\n\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.Script\n   * \n   */\n  phina.define('phina.asset.Script', {\n    superClass: \"phina.asset.Asset\",\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n    },\n\n    _load: function(resolve) {\n      var self = this;\n      this.domElement = document.createElement('script');\n      this.domElement.src = this.src;\n\n      this.domElement.onload = function() {\n        resolve(self);\n      }.bind(this);\n\n      document.body.appendChild(this.domElement);\n    },\n\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.Texture\n   *\n   */\n  phina.define('phina.asset.Texture', {\n    superClass: \"phina.asset.Asset\",\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n    },\n\n    _load: function(resolve) {\n      this.domElement = new Image();\n\n      var isLocal = (location.protocol == 'file:');\n      if ( !isLocal && !(/^data:/.test(this.src)) ) {\n        // this.domElement.crossOrigin = 'Anonymous'; // クロスオリジン解除\n      }\n\n      this.domElement.src = this.src;\n\n      var self = this;\n      this.domElement.onload = function(e) {\n        self.loaded = true;\n        resolve(self);\n      };\n      this.domElement.onerror = function(e) {\n        console.error(\"[phina.js] not found `{0}`!\".format(this.src));\n\n        var key = self.src.split('/').last.replace('.png', '').split('?').first.split('#').first;\n        e.target.src = \"http://dummyimage.com/128x128/444444/eeeeee&text=\" + key;\n        e.target.onerror = null;\n      };\n    },\n\n    clone: function () {\n      var image = this.domElement;\n      var canvas = phina.graphics.Canvas().setSize(image.width, image.height);\n      var t = phina.asset.Texture();\n      canvas.context.drawImage(image, 0, 0);\n      t.domElement = canvas.domElement;\n      return t;\n    },\n\n    transmit: function(color) {\n      // imagaオブジェクトをゲット\n      var image = this.domElement;\n      // 新規canvas作成\n      var canvas = phina.graphics.Canvas().setSize(image.width, image.height);\n      // 新規canvasに描画\n      canvas.context.drawImage(image, 0, 0);\n      // canvas全体のイメージデータ配列をゲット\n      var imageData = canvas.context.getImageData(0, 0, canvas.width, canvas.height);\n      var data = imageData.data;\n      // 透過色の指定がなければ左上のrgb値を抽出\n      var r = (color !== undefined) ? color.r : data[0];\n      var g = (color !== undefined) ? color.g : data[1];\n      var b = (color !== undefined) ? color.b : data[2];\n      // 配列を4要素目から4つ飛び（アルファ値）でループ\n      (3).step(data.length, 4, function(i) {\n        // rgb値を逆算でゲットし、左上のrgbと比較\n        if (data[i - 3] === r && data[i - 2] === g && data[i - 1] === b) {\n          // 一致した場合はアルファ値を書き換える\n          data[i] = 0;\n        }\n      });\n      // 書き換えたイメージデータをcanvasに戻す\n      canvas.context.putImageData(imageData, 0, 0);\n\n      this.domElement = canvas.domElement;\n    },\n\n    filter: function (filters) {\n      if (!filters) {\n        return this;\n      }\n      if (!Array.isArray(filters)) {\n        filters = [filters];\n      }\n      var image = this.domElement;\n      var w = image.width;\n      var h = image.height;\n      var canvas = phina.graphics.Canvas().setSize(w, h);\n      var imageData = null;\n\n      canvas.context.drawImage(image, 0, 0);\n      imageData = canvas.context.getImageData(0, 0, w, h);\n      filters.forEach( function (fn) {\n        if (typeof fn == 'function') {\n          h.times( function (y) {\n            w.times( function (x) {\n              var i = (y * w + x) * 4;\n              var pixel = imageData.data.slice(i, i + 4);\n              fn(pixel, i, x, y, imageData);\n            });\n          });\n        }\n      });\n      canvas.context.putImageData(imageData, 0, 0);\n      this.domElement = canvas.domElement;\n      return this;\n    },\n\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.Sound\n   * \n   */\n  phina.define('phina.asset.Sound', {\n    superClass: \"phina.asset.Asset\",\n    \n    _loop: false,\n    _loopStart: 0,\n    _loopEnd: 0,\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n      this.context = phina.asset.Sound.getAudioContext();\n      this.gainNode = this.context.createGain();\n    },\n\n    play: function() {\n      if (this.source) {\n        // TODO: キャッシュする？\n      }\n\n      this.source = this.context.createBufferSource();\n      this.source.buffer = this.buffer;\n      this.source.loop = this._loop;\n      this.source.loopStart = this._loopStart;\n      this.source.loopEnd = this._loopEnd;\n\n      // connect\n      this.source.connect(this.gainNode);\n      this.gainNode.connect(this.context.destination);\n      // play\n      this.source.start(0);\n      \n      // check play end\n      if (this.source.buffer) {\n        var time = (this.source.buffer.duration/this.source.playbackRate.value)*1000;\n        window.setTimeout(function(self) {\n          self.flare('ended');\n        }, time, this);\n      }\n\n      return this;\n    },\n\n    stop: function() {\n      // stop\n      if (this.source) {\n        this.source.stop && this.source.stop(0);\n        this.source = null;\n      }\n\n      return this;\n    },\n\n    pause: function() {\n      this.source.disconnect();\n      return this;\n    },\n\n    resume: function() {\n      this.source.connect(this.gainNode);\n      return this;\n    },\n\n    // 試してみるなう\n    _oscillator: function(type) {\n      var context = this.context;\n\n      var oscillator = context.createOscillator();\n\n      // Sine wave is type = “sine”\n      // Square wave is type = “square”\n      // Sawtooth wave is type = “saw”\n      // Triangle wave is type = “triangle”\n      // Custom wave is type = “custom” \n      oscillator.type = type || 'sine';\n\n      this.source = oscillator;\n      // connect\n      this.source.connect(context.destination);\n    },\n\n    loadFromBuffer: function(buffer) {\n      var context = this.context;\n\n      // set default buffer\n      if (!buffer) {\n        buffer = context.createBuffer( 1, 44100, 44100 );\n        var channel = buffer.getChannelData(0);\n\n        for( var i=0; i < channel.length; i++ )\n        {\n          channel[i] = Math.sin( i / 100 * Math.PI);\n        }\n      }\n\n      // source\n      this.buffer = buffer;\n    },\n\n    setLoop: function(loop) {\n      this.loop = loop;\n      return this;\n    },\n    setLoopStart: function(loopStart) {\n      this.loopStart = loopStart;\n      return this;\n    },\n    setLoopEnd: function(loopEnd) {\n      this.loopEnd = loopEnd;\n      return this;\n    },\n\n    _load: function(r) {\n      if (/^data:/.test(this.src)) {\n        this._loadFromURIScheme(r);\n      }\n      else {\n        this._loadFromFile(r);\n      }\n    },\n\n    _loadFromFile: function(r) {\n      var self = this;\n\n      var xml = new XMLHttpRequest();\n      xml.open('GET', this.src);\n      xml.onreadystatechange = function() {\n        if (xml.readyState === 4) {\n          if ([200, 201, 0].indexOf(xml.status) !== -1) {\n\n            // 音楽バイナリーデータ\n            var data = xml.response;\n\n            // webaudio 用に変換\n            self.context.decodeAudioData(data, function(buffer) {\n              self.loadFromBuffer(buffer);\n              r(self);\n            }, function() {\n              console.warn(\"音声ファイルのデコードに失敗しました。(\" + self.src + \")\");\n              r(self);\n              self.flare('decodeerror');\n            });\n\n          } else if (xml.status === 404) {\n            // not found\n\n            self.loadError = true;\n            self.notFound= true;\n            r(self);\n            self.flare('loaderror');\n            self.flare('notfound');\n\n          } else {\n            // サーバーエラー\n\n            self.loadError = true;\n            self.serverError = true;\n            r(self);\n            self.flare('loaderror');\n            self.flare('servererror');\n          }\n        }\n      };\n\n      xml.responseType = 'arraybuffer';\n\n      xml.send(null);\n    },\n\n    _loadFromURIScheme: function(r) {\n      var byteString = '';\n      if (this.src.split(',')[0].indexOf('base64') >= 0) {\n        byteString = atob(this.src.split(',')[1]);\n      }\n      else {\n        byteString = unescape(this.src.split(',')[1]);\n      }\n\n      var self = this;\n      var len = byteString.length;\n      var buffer = new Uint8Array(len);\n\n      for (var i=0; i<len; ++i) {\n        buffer[i] = byteString.charCodeAt(i);\n      }\n\n      // webaudio 用に変換\n      this.context.decodeAudioData(buffer.buffer, function(buffer) {\n        self.loadFromBuffer(buffer);\n        r(self);\n      }, function() {\n        console.warn(\"音声ファイルのデコードに失敗しました。(\" + self.src + \")\");\n        self.loaded = true;\n        r(self);\n      });\n    },\n\n    loadDummy: function() {\n      this.loadFromBuffer();\n    },\n\n    _accessor: {\n      volume: {\n        get: function()  { return this.gainNode.gain.value; },\n        set: function(v) { this.gainNode.gain.value = v; },\n      },\n      loop: {\n        get: function()  { return this._loop; },\n        set: function(v) {\n          this._loop = v;\n          if (this.source) this.source._loop = v;\n        },\n      },\n      loopStart: {\n        get: function()  { return this._loopStart; },\n        set: function(v) {\n          this._loopStart = v;\n          if (this.source) this.source._loopStart = v;\n        },\n      },\n      loopEnd: {\n        get: function()  { return this._loopEnd; },\n        set: function(v) {\n          this._loopEnd = v;\n          if (this.source) this.source._loopEnd = v;\n        },\n      },\n    },\n\n    _static: {\n      getAudioContext: function() {\n        if (!phina.util.Support.webAudio) return null;\n\n        if (this.context) return this.context;\n\n        var g = phina.global;\n        var context = null;\n\n        if (g.AudioContext) {\n          context = new AudioContext();\n        }\n        else if (g.webkitAudioContext) {\n          context = new webkitAudioContext();\n        }\n        else if (g.mozAudioContext) {\n          context = new mozAudioContext();\n        }\n\n        this.context = context;\n\n        return context;\n      },\n    },\n\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.SoundManager\n   * ### Ref\n   * - http://evolve.reintroducing.com/_source/classes/as3/SoundManager/SoundManager.html\n   * - https://github.com/nicklockwood/SoundManager\n   */\n  phina.define('phina.asset.SoundManager', {\n    _static: {\n      volume: 0.8,\n      musicVolume: 0.8,\n      muteFlag: false,\n      currentMusic: null,\n\n      play: function(name) {\n        var sound = phina.asset.AssetManager.get('sound', name);\n\n        sound.volume = this.getVolume();\n        sound.play();\n\n        return sound;\n      },\n\n      stop: function() {\n        // TODO: \n      },\n      pause: function() {\n        // TODO: \n      },\n      fade: function() {\n        // TODO: \n      },\n      setVolume: function(volume) {\n        this.volume = volume;\n      },\n      getVolume: function() {\n        return this.volume;\n      },\n\n      /*\n       * ミュート\n       */\n      mute: function() {\n        this.muteFlag = true;\n        if (this.currentMusic) {\n          this.currentMusic.volume = 0;\n        }\n        return this;\n      },\n      /*\n       * ミュート解除\n       */\n      unmute: function() {\n        this.muteFlag = false;\n        if (this.currentMusic) {\n          this.currentMusic.volume = this.getVolumeMusic();\n        }\n        return this;\n      },\n      isMute: function() {\n        return this.muteFlag;\n      },\n\n      playMusic: function(name, fadeTime, loop) {\n        loop = (loop !== undefined) ? loop : true;\n\n        if (this.currentMusic) {\n          this.stopMusic(fadeTime);\n        }\n\n        var music = phina.asset.AssetManager.get('sound', name);\n\n        music.setLoop(loop);\n        music.play();\n\n        if (fadeTime > 0) {\n          var count = 32;\n          var counter = 0;\n          var unitTime = fadeTime/count;\n          var volume = this.getVolumeMusic();\n\n          music.volume = 0;\n          var id = setInterval(function() {\n            counter += 1;\n            var rate = counter/count;\n            music.volume = rate*volume;\n\n            if (rate >= 1) {\n              clearInterval(id);\n              return false;\n            }\n\n            return true;\n          }, unitTime);\n        }\n        else {\n          music.volume = this.getVolumeMusic();\n        }\n\n        this.currentMusic = music;\n\n        return this.currentMusic;\n      },\n\n      stopMusic: function(fadeTime) {\n        if (!this.currentMusic) { return ; }\n\n        var music = this.currentMusic;\n        this.currentMusic = null;\n\n        if (fadeTime > 0) {\n          var count = 32;\n          var counter = 0;\n          var unitTime = fadeTime/count;\n          var volume = this.getVolumeMusic();\n\n          music.volume = 0;\n          var id = setInterval(function() {\n            counter += 1;\n            var rate = counter/count;\n            music.volume = volume*(1-rate);\n\n            if (rate >= 1) {\n              music.stop();\n              clearInterval(id);\n              return false;\n            }\n\n            return true;\n          }, unitTime);\n        }\n        else {\n          music.stop();\n        }\n      },\n\n      /*\n       * 音楽を一時停止\n       */\n      pauseMusic: function() {\n        if (!this.currentMusic) { return ; }\n        this.currentMusic.pause();\n      },\n      /*\n       * 音楽を再開\n       */\n      resumeMusic: function() {\n        if (!this.currentMusic) { return ; }\n        this.currentMusic.resume();\n      },\n      /*\n       * 音楽のボリュームを設定\n       */\n      setVolumeMusic: function(volume) {\n        this.musicVolume = volume;\n        if (this.currentMusic) {\n          this.currentMusic.volume = volume;\n        }\n\n        return this;\n      },\n      /*\n       * 音楽のボリュームを取得\n       */\n      getVolumeMusic: function() {\n        return this.musicVolume;\n      },\n\n    },\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.SpriteSheet\n   * \n   */\n  phina.define('phina.asset.SpriteSheet', {\n    superClass: \"phina.asset.Asset\",\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n    },\n\n    setup: function(params) {\n      this._setupFrame(params.frame);\n      this._setupAnim(params.animations);\n      return this;\n    },\n\n    _load: function(resolve) {\n\n      var self = this;\n\n      if (typeof this.src === 'string') {\n        var xml = new XMLHttpRequest();\n        xml.open('GET', this.src);\n        xml.onreadystatechange = function() {\n          if (xml.readyState === 4) {\n            if ([200, 201, 0].indexOf(xml.status) !== -1) {\n              var data = xml.responseText;\n              var json = JSON.parse(data);\n\n              self.setup(json);\n\n              resolve(self);\n            }\n          }\n        };\n\n        xml.send(null);\n      }\n      else {\n        this.setup(this.src);\n        resolve(self);\n      }\n\n    },\n\n    _setupFrame: function(frame) {\n      var frames = this.frames = [];\n      var unitWidth = frame.width;\n      var unitHeight = frame.height;\n\n      var count = frame.rows * frame.cols;\n      this.frame = count;\n\n      (count).times(function(i) {\n        var xIndex = i%frame.cols;\n        var yIndex = (i/frame.cols)|0;\n\n        frames.push({\n          x: xIndex*unitWidth,\n          y: yIndex*unitHeight,\n          width: unitWidth,\n          height: unitHeight,\n        });\n      });\n    },\n\n    _setupAnim: function(animations) {\n      this.animations = {};\n\n      // デフォルトアニメーション\n      this.animations[\"default\"] = {\n          frames: [].range(0, this.frame),\n          next: \"default\",\n          frequency: 1,\n      };\n\n      animations.forIn(function(key, value) {\n        var anim = value;\n\n        if (anim instanceof Array) {\n          this.animations[key] = {\n            frames: [].range(anim[0], anim[1]),\n            next: anim[2],\n            frequency: anim[3] || 1,\n          };\n        }\n        else {\n          this.animations[key] = {\n            frames: anim.frames,\n            next: anim.next,\n            frequency: anim.frequency || 1\n          };\n        }\n\n      }, this);\n    },\n\n    /**\n     * フレームを取得\n     */\n    getFrame: function(index) {\n      return this.frames[index];\n    },\n\n    getAnimation: function(name) {\n      name = (name !== undefined) ? name : \"default\";\n      return this.animations[name];\n    },\n\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.asset.Font\n   * \n   */\n  phina.define(\"phina.asset.Font\", {\n    superClass: \"phina.asset.Asset\",\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n      this.fontName = null;\n    },\n\n    load: function(path) {\n      this.src = path;\n\n      var reg = /(.*)(?:\\.([^.]+$))/;\n      var key = this.fontName || path.match(reg)[1].split('/').last;    //フォント名指定が無い場合はpathの拡張子前を使用\n      var type = path.match(reg)[2];\n      var format = \"unknown\";\n      switch (type) {\n        case \"ttf\":\n          format = \"truetype\"; break;\n        case \"otf\":\n          format = \"opentype\"; break;\n        case \"woff\":\n          format = \"woff\"; break;\n        case \"woff2\":\n          format = \"woff2\"; break;\n        default:\n          console.warn(\"サポートしていないフォント形式です。(\" + path + \")\");\n      }\n      this.format = format;\n      this.fontName = key;\n\n      if (format !== \"unknown\") {\n        var text = \"@font-face { font-family: '{0}'; src: url({1}) format('{2}'); }\".format(key, path, format);\n        var e = document.querySelector(\"head\");\n        var fontFaceStyleElement = document.createElement(\"style\");\n        if (fontFaceStyleElement.innerText) {\n          fontFaceStyleElement.innerText = text;\n        } else {\n          fontFaceStyleElement.textContent = text;\n        }\n        e.appendChild(fontFaceStyleElement);\n      }\n\n      return phina.util.Flow(this._load.bind(this));\n    },\n\n    _load: function(resolve) {\n      if (this.format !== \"unknown\") {\n        this._checkLoaded(this.fontName, function() {\n          this.loaded = true;\n          resolve(this);\n        }.bind(this));\n      } else {\n        this.loaded = true;\n        resolve(this);\n      }\n    },\n\n    _checkLoaded: function (font, callback) {\n      var canvas = phina.graphics.Canvas();\n      var DEFAULT_FONT = canvas.context.font.split(' ')[1];\n      canvas.context.font = '40px ' + DEFAULT_FONT;\n\n      var checkText = \"1234567890-^\\\\qwertyuiop@[asdfghjkl;:]zxcvbnm,./\\!\\\"#$%&'()=~|QWERTYUIOP`{ASDFGHJKL+*}ZXCVBNM<>?_１２３４５６７８９０－＾￥ｑｗｅｒｔｙｕｉｏｐａｓｄｆｇｈｊｋｌｚｘｃｖｂｎｍ，．あいうかさたなをん時は金なり\";\n      // 特殊文字対応\n      checkText += String.fromCharCode(\"0xf04b\");\n\n      var before = canvas.context.measureText(checkText).width;\n      canvas.context.font = '40px ' + font + ', ' + DEFAULT_FONT;\n\n      var timeoutCount = 30;\n      var checkLoadFont = function () {\n        var after = canvas.context.measureText(checkText).width;\n        if (after !== before) {\n          setTimeout(function() {\n            callback && callback();\n          }, 100);\n        } else {\n          if (--timeoutCount > 0) {\n            setTimeout(checkLoadFont, 100);\n          }\n          else {\n            callback && callback();\n            console.warn(\"timeout font loading\");\n          }\n        }\n      };\n      checkLoadFont();\n    },\n\n    setFontName: function(name) {\n      if (this.loaded) {\n        console.warn(\"フォント名はLoad前にのみ設定が出来ます(\" + name + \")\");\n        return this;\n      }\n      this.fontName = name;\n      \n      return this;\n    },\n\n    getFontName: function() {\n      return this.fontName;\n    },\n\n  });\n});\n\n\n;(function() {\n  /**\n   * @class phina.input.Input\n   * \n   */\n  phina.define('phina.input.Input', {\n\n    superClass: 'phina.util.EventDispatcher',\n\n    /** domElement */\n    domElement: null,\n\n    /**\n     * @constructor\n     */\n    init: function(domElement) {\n      this.superInit();\n      \n      this.domElement = domElement || window.document;\n\n      this.position = phina.geom.Vector2(0, 0);\n      this.startPosition = phina.geom.Vector2(0, 0);\n      this.deltaPosition = phina.geom.Vector2(0, 0);\n      this.prevPosition = phina.geom.Vector2(0, 0);\n      this._tempPosition = phina.geom.Vector2(0, 0);\n\n      this.maxCacheNum = phina.input.Input.defaults.maxCacheNum;\n      this.minDistance = phina.input.Input.defaults.minDistance;\n      this.maxDistance = phina.input.Input.defaults.maxDistance;\n      this.cachePositions = [];\n      this.flickVelocity = phina.geom.Vector2(0, 0);\n\n      this.flags = 0;\n    },\n\n    update: function() {\n      this.last = this.now;\n      this.now = this.flags;\n      this.start = (this.now ^ this.last) & this.now;\n      this.end   = (this.now ^ this.last) & this.last;\n\n      // 変化値を更新\n      this.deltaPosition.x = this._tempPosition.x - this.position.x;\n      this.deltaPosition.y = this._tempPosition.y - this.position.y;\n\n      if (this.deltaPosition.x === 0 && this.deltaPosition.y === 0) {\n        this._moveFlag = false;\n      }\n      else {\n        this._moveFlag = true;\n      }\n\n      if (this.start) {\n        this.startPosition.set(this.position.x, this.position.y);\n      }\n\n      // 前回の座標を更新\n      this.prevPosition.set(this.position.x, this.position.y);\n\n      // 現在の位置を更新\n      this.position.set(this._tempPosition.x, this._tempPosition.y);\n\n      if (this.cachePositions.length > this.maxCacheNum) {\n        this.cachePositions.shift();\n      }\n      this.cachePositions.push(this.position.clone());\n    },\n\n    _start: function(x, y, flag) {\n      flag = (flag !== undefined) ? flag : 1;\n      this._move(x, y);\n\n      this.flags |= flag;\n\n      var x = this._tempPosition.x;\n      var y = this._tempPosition.y;\n      this.position.set(x, y);\n      this.prevPosition.set(x, y);\n\n      this.flickVelocity.set(0, 0);\n      this.cachePositions.clear();\n    },\n\n    _end: function(flag) {\n      flag = (flag !== undefined) ? flag : 1;\n      this.flags &= ~(flag);\n\n      if (this.cachePositions.length < 2) return;\n\n      var first = this.cachePositions.first;\n      var last = this.cachePositions.last;\n\n      var v = phina.geom.Vector2.sub(last, first);\n\n      var len = v.length();\n\n      if (len > this.minDistance) {\n        var normalLen = len.clamp(this.minDistance, this.maxDistance);\n        v.div(len).mul(normalLen);\n        this.flickVelocity.set(v.x, v.y);\n      }\n\n      this.cachePositions.clear();\n    },\n\n    // スケールを考慮\n    _move: function(x, y) {\n      this._tempPosition.x = x;\n      this._tempPosition.y = y;\n\n      // adjust scale\n      var elm = this.domElement;\n      if (elm.style.width) {\n        this._tempPosition.x *= elm.width / parseInt(elm.style.width);\n      }\n      if (elm.style.height) {\n        this._tempPosition.y *= elm.height / parseInt(elm.style.height);\n      }\n    },\n\n    _accessor: {\n      /**\n       * @property    x\n       * x座標値\n       */\n      x: {\n        \"get\": function()   { return this.position.x; },\n        \"set\": function(v)  { this.position.x = v; }\n      },\n      /**\n       * @property    y\n       * y座標値\n       */\n      y: {\n        \"get\": function()   { return this.position.y; },\n        \"set\": function(v)  { this.position.y = v; }\n      },\n      /**\n       * @property    dx\n       * dx値\n       */\n      dx: {\n        \"get\": function()   { return this.deltaPosition.x; },\n        \"set\": function(v)  { this.deltaPosition.x = v; }\n      },\n      /**\n       * @property    dy\n       * dy値\n       */\n      dy: {\n        \"get\": function()   { return this.deltaPosition.y; },\n        \"set\": function(v)  { this.deltaPosition.y = v; }\n      },\n\n      /**\n       * @property    fx\n       * fx値\n       */\n      fx: {\n        \"get\": function()   { return this.flickVelocity.x; },\n        \"set\": function(v)  { this.flickVelocity.x = v; }\n      },\n      /**\n       * @property    fy\n       * fy値\n       */\n      fy: {\n        \"get\": function()   { return this.flickVelocity.y; },\n        \"set\": function(v)  { this.flickVelocity.y = v; }\n      },\n\n    },\n\n    _static: {\n      defaults: {\n        maxCacheNum: 3,\n        minDistance: 10,\n        maxDistance: 100,\n      },\n    },\n  });\n\n\n})();\n\n;(function() {\n\n  /**\n   * @class phina.input.Mouse\n   * @extends phina.input.Input\n   */\n  phina.define('phina.input.Mouse', {\n\n    superClass: 'phina.input.Input',\n\n    /**\n     * @constructor\n     */\n    init: function(domElement) {\n      this.superInit(domElement);\n\n      this.id = 0;\n\n      var self = this;\n      this.domElement.addEventListener('mousedown', function(e) {\n        self._start(e.pointX, e.pointY, 1<<e.flags);\n      });\n\n      this.domElement.addEventListener('mouseup', function(e) {\n        self._end(1<<e.flags);\n      });\n      this.domElement.addEventListener('mousemove', function(e) {\n        self._move(e.pointX, e.pointY);\n      });\n    },\n\n    /**\n     * ボタン取得\n     */\n    getButton: function(button) {\n      if (typeof(button) == \"string\") {\n        button = BUTTON_MAP[button];\n      }\n      \n      return (this.now & button) != 0;\n    },\n\n    /**\n     * ボタンダウン取得\n     */\n    getButtonDown: function(button) {\n      if (typeof(button) === 'string') {\n        button = BUTTON_MAP[button];\n      }\n\n      return (this.start & button) != 0;\n    },\n        \n    /**\n     * ボタンアップ取得\n     */\n    getButtonUp: function(button) {\n      if (typeof(button) == \"string\") {\n        button = BUTTON_MAP[button];\n      }\n      \n      return (this.end & button) != 0;\n    },\n\n    _static: {\n      /** @static @property */\n      BUTTON_LEFT: 0x1,\n      /** @static @property */\n      BUTTON_MIDDLE: 0x2,\n      /** @static @property */\n      BUTTON_RIGHT: 0x4,\n    }\n  });\n\n  var BUTTON_MAP = {\n    \"left\"  : phina.input.Mouse.BUTTON_LEFT,\n    \"middle\": phina.input.Mouse.BUTTON_MIDDLE,\n    \"right\" : phina.input.Mouse.BUTTON_RIGHT\n  };\n\n  phina.input.Mouse.prototype.getPointing = function() { return this.getButton(\"left\"); };\n  phina.input.Mouse.prototype.getPointingStart = function() { return this.getButtonDown(\"left\"); };\n  phina.input.Mouse.prototype.getPointingEnd = function() { return this.getButtonUp(\"left\"); };\n\n})();\n\n;(function() {\n\n  /**\n   * @class phina.input.Touch\n   * @extends phina.input.Input\n   */\n  phina.define('phina.input.Touch', {\n\n    superClass: 'phina.input.Input',\n\n    /**\n     * @constructor\n     */\n    init: function(domElement, isMulti) {\n      this.superInit(domElement);\n\n      this.id = null;\n\n      if (isMulti === true) {\n        return ;\n      }\n\n      var self = this;\n      this.domElement.addEventListener('touchstart', function(e) {\n        self._start(e.pointX, e.pointY, true);\n      });\n\n      this.domElement.addEventListener('touchend', function(e) {\n        self._end();\n      });\n      this.domElement.addEventListener('touchmove', function(e) {\n        self._move(e.pointX, e.pointY);\n      });\n    },\n\n    /**\n     * タッチしているかを判定\n     */\n    getTouch: function() {\n      return this.now != 0;\n    },\n    \n    /**\n     * タッチ開始時に true\n     */\n    getTouchStart: function() {\n      return this.start != 0;\n    },\n    \n    /**\n     * タッチ終了時に true\n     */\n    getTouchEnd: function() {\n      return this.end != 0;\n    },\n\n  });\n\n  /**\n   * @method\n   * ポインティング状態取得(mouse との差異対策)\n   */\n  phina.input.Touch.prototype.getPointing        = phina.input.Touch.prototype.getTouch;\n  /**\n   * @method\n   * ポインティングを開始したかを取得(mouse との差異対策)\n   */\n  phina.input.Touch.prototype.getPointingStart   = phina.input.Touch.prototype.getTouchStart;\n  /**\n   * @method\n   * ポインティングを終了したかを取得(mouse との差異対策)\n   */\n  phina.input.Touch.prototype.getPointingEnd     = phina.input.Touch.prototype.getTouchEnd;\n\n\n})();\n\n\n;(function() {\n\n  phina.define('phina.input.TouchList', {\n    domElement: null,\n    touchMap: null,\n    touches: null,\n    _id: null,\n\n    init: function(domElement) {\n      this.domElement = domElement;\n\n      this.touches = [];\n      var touchMap = this.touchMap = {};\n\n      // 32bit 周期でIDをループさせる\n      this._id = new Uint32Array(1);\n\n      var self = this;\n      var each = Array.prototype.forEach;\n      this.domElement.addEventListener('touchstart', function(e) {\n        each.call(e.changedTouches, function(t) {\n          var touch = self.getEmpty();\n          touchMap[t.identifier] = touch;\n          touch._start(t.pointX, t.pointY);\n        });\n      });\n\n      this.domElement.addEventListener('touchend', function(e) {\n        each.call(e.changedTouches, function(t) {\n          var id = t.identifier;\n          var touch = touchMap[id];\n          touch._end();\n          delete touchMap[id];\n        });\n      });\n      this.domElement.addEventListener('touchmove', function(e) {\n        each.call(e.changedTouches, function(t) {\n          var touch = touchMap[t.identifier];\n          touch._move(t.pointX, t.pointY);\n        });\n        e.stop();\n      });\n\n      // iPhone では 6本指以上タッチすると強制的にすべてのタッチが解除される\n      this.domElement.addEventListener('touchcancel', function(e) {\n        console.warn('この端末での同時タッチ数の制限を超えました。');\n        each.call(e.changedTouches, function(t) {\n          var id = t.identifier;\n          var touch = touchMap[id];\n          touch._end();\n          delete touchMap[id];\n        });\n        e.stop();\n      });\n    },\n\n    getEmpty: function() {\n      var touch = phina.input.Touch(this.domElement, true);\n    \n      touch.id = this.id;\n      this.touches.push(touch);\n\n      return touch;\n    },\n\n    getTouch: function(id) {\n      return this.touchMap[id];\n    },\n\n\n    removeTouch: function(touch) {\n      var i = this.touches.indexOf(touch);\n      this.touches.splice(i, 1);\n    },\n\n    update: function() {\n      this.touches.forEach(function(touch) {\n        if (!touch.released) {\n          touch.update();\n\n          if (touch.flags === 0) {\n            touch.released = true;\n          }\n        }\n        else {\n          touch.released = false;\n          this.removeTouch(touch);\n        }\n\n      }, this);\n    },\n\n    _accessor: {\n      id: {\n        get: function() {\n          return this._id[0]++;\n        }\n      },\n    },\n  });\n\n})();\n/*\n *\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.input.Keyboard\n   * @extends phina.input.Input\n   */\n  phina.define('phina.input.Keyboard', {\n\n    superClass: 'phina.input.Input',\n\n    /**\n     * @constructor\n     */\n    init: function(domElement) {\n      this.superInit(domElement);\n\n      this.key = {};\n      this.press  = {};\n      this.down   = {};\n      this.up     = {};\n      this.last   = {};\n\n      this._keydown = null;\n      this._keyup = null;\n      this._keypress = null;\n\n      var self = this;\n      this.domElement.addEventListener('keydown', function(e) {\n        self.key[e.keyCode] = true;\n        self._keydown = e.keyCode;\n      });\n\n      this.domElement.addEventListener('keyup', function(e) {\n        self.key[e.keyCode] = false;\n        self._keyup = e.keyCode;\n      });\n      this.domElement.addEventListener('keypress', function(e) {\n        self._keypress = e.keyCode;\n      });\n    },\n\n    /**\n     * 情報更新処理\n     * マイフレーム呼んで下さい.\n     * @private\n     */\n    update: function() {\n      // TODO: 一括ビット演算で行うよう修正する\n      for (var k in this.key) {\n        this.last[k]    = this.press[k];\n        this.press[k]   = this.key[k];\n        \n        this.down[k] = (this.press[k] ^ this.last[k]) & this.press[k];\n        this.up[k] = (this.press[k] ^ this.last[k]) & this.last[k];\n      }\n\n      if (this._keydown) {\n        this.flare('keydown', { keyCode: this._keydown });\n        this._keydown = null;\n      }\n      if (this._keyup) {\n        this.flare('keyup', { keyCode: this._keyup });\n        this._keyup = null;\n      }\n      if (this._keypress) {\n        this.flare('keypress', { keyCode: this._keypress });\n        this._keypress = null;\n      }\n      \n      return this;\n    },\n\n    /**\n     * キーを押しているかをチェック\n     * @param   {Number/String} key keyCode or keyName\n     * @returns {Boolean}   チェック結果\n     */\n    getKey: function(key) {\n      if (typeof(key) === \"string\") {\n        key = phina.input.Keyboard.KEY_CODE[key];\n      }\n      return !!this.press[key] === true;\n    },\n    \n    /**\n     * キーを押したかをチェック\n     * @param   {Number/String} key keyCode or keyName\n     * @returns {Boolean}   チェック結果\n     */\n    getKeyDown: function(key) {\n      if (typeof(key) == \"string\") {\n        key = phina.input.Keyboard.KEY_CODE[key];\n      }\n      return this.down[key] == true;\n    },\n    \n    /**\n     * キーを離したかをチェック\n     * @param   {Number/String} key keyCode or keyName\n     * @returns {Boolean}   チェック結果\n     */\n    getKeyUp: function(key) {\n      if (typeof(key) == \"string\") {\n        key = phina.input.Keyboard.KEY_CODE[key];\n      }\n      return this.up[key] == true;\n    },\n    \n    /**\n     * キーの方向を Angle(Degree) で取得\n     * @returns {Boolean}   角度(Degree)\n     */\n    getKeyAngle: function() {\n      var angle = null;\n      var arrowBit =\n        (this.getKey(\"left\")   << 3) | // 1000\n        (this.getKey(\"up\")     << 2) | // 0100\n        (this.getKey(\"right\")  << 1) | // 0010\n        (this.getKey(\"down\"));         // 0001\n      \n      if (arrowBit !== 0 && phina.input.Keyboard.ARROW_BIT_TO_ANGLE_TABLE.hasOwnProperty(arrowBit)) {\n        angle = phina.input.Keyboard.ARROW_BIT_TO_ANGLE_TABLE[arrowBit];\n      }\n      \n      return angle;\n    },\n\n    /**\n     * キーの押している向きを取得\n     * 正規化されている\n     */\n    getKeyDirection: function() {\n      var direction = phina.geom.Vector2(0, 0);\n\n      if (this.getKey(\"left\")) {\n        direction.x = -1;\n      }\n      else if (this.getKey(\"right\")) {\n        direction.x = 1;\n      }\n      if (this.getKey(\"up\")) {\n        direction.y = -1;\n      }\n      else if (this.getKey(\"down\")) {\n        direction.y = 1;\n      }\n\n      if (direction.x && direction.y) {\n        direction.div(Math.SQRT2);\n      }\n\n      return direction;\n    },\n    \n    /**\n     * キーの状態を設定する\n     */\n    setKey: function(key, flag) {\n      if (typeof(key) == \"string\") {\n        key = phina.input.Keyboard.KEY_CODE[key];\n      }\n      this.key[key] = flag;\n      \n      return this;\n    },\n\n    /**\n     * キーを全て離したことにする\n     */\n    clearKey: function() {\n      this.key = {};\n      \n      return this;\n    },\n\n\n    /*\n     * @enum ARROW_BIT_TO_ANGLE_TABLE\n     * 方向のアングル jsduckでは数字をプロパティに指定できない？\n     * @private\n     */\n    _static: {\n      ARROW_BIT_TO_ANGLE_TABLE: {\n        /* @property 下 */\n        0x01: 270,\n        /* @property 右 */\n        0x02:   0,\n        /* @property 上 */\n        0x04:  90,\n        /* @property 左 */\n        0x08: 180,\n\n        /* @property 右上 */\n        0x06:  45,\n        /* @property 右下 */\n        0x03: 315,\n        /* @property 左上 */\n        0x0c: 135,\n        /* @property 左下 */\n        0x09: 225,\n\n        // 三方向同時押し対応\n        // 想定外の操作だが対応しといたほうが無難\n        /* @property 右上左 */\n        0x0e:  90,\n        /* @property 上左下 */\n        0x0d: 180,\n        /* @property 左下右 */\n        0x0b: 270,\n        /* @property 下右上 */\n        0x07:   0,\n      },\n\n      /*\n       * @enum KEY_CODE\n       * キー番号\n       * @private\n       */\n      KEY_CODE: {\n        /* @property */\n        \"backspace\" : 8,\n        /* @property */\n        \"tab\"       : 9,\n        /* @property */\n        \"enter\"     : 13,\n        /* @property */\n        \"return\"    : 13,\n        /* @property */\n        \"shift\"     : 16,\n        /* @property */\n        \"ctrl\"      : 17,\n        /* @property */\n        \"alt\"       : 18,\n        /* @property */\n        \"pause\"     : 19,\n        /* @property */\n        \"capslock\"  : 20,\n        /* @property */\n        \"escape\"    : 27,\n        /* @property */\n        \"pageup\"    : 33,\n        /* @property */\n        \"pagedown\"  : 34,\n        /* @property */\n        \"end\"       : 35,\n        /* @property */\n        \"home\"      : 36,\n        /* @property */\n        \"left\"      : 37,\n        /* @property */\n        \"up\"        : 38,\n        /* @property */\n        \"right\"     : 39,\n        /* @property */\n        \"down\"      : 40,\n        /* @property */\n        \"insert\"    : 45,\n        /* @property */\n        \"delete\"    : 46,\n        \n        /* @property */\n        \"0\" : 48,\n        /* @property */\n        \"1\" : 49,\n        /* @property */\n        \"2\" : 50,\n        /* @property */\n        \"3\" : 51,\n        /* @property */\n        \"4\" : 52,\n        /* @property */\n        \"5\" : 53,\n        /* @property */\n        \"6\" : 54,\n        /* @property */\n        \"7\" : 55,\n        /* @property */\n        \"8\" : 56,\n        /* @property */\n        \"9\" : 57,\n        /* @property */\n        \n        \"a\" : 65,\n        /* @property */\n        \"A\" : 65,\n        /* @property */\n        \"b\" : 66,\n        /* @property */\n        \"B\" : 66,\n        /* @property */\n        \"c\" : 67,\n        /* @property */\n        \"C\" : 67,\n        /* @property */\n        \"d\" : 68,\n        /* @property */\n        \"D\" : 68,\n        /* @property */\n        \"e\" : 69,\n        /* @property */\n        \"E\" : 69,\n        /* @property */\n        \"f\" : 70,\n        /* @property */\n        \"F\" : 70,\n        /* @property */\n        \"g\" : 71,\n        /* @property */\n        \"G\" : 71,\n        /* @property */\n        \"h\" : 72,\n        /* @property */\n        \"H\" : 72,\n        /* @property */\n        \"i\" : 73,\n        /* @property */\n        \"I\" : 73,\n        /* @property */\n        \"j\" : 74,\n        /* @property */\n        \"J\" : 74,\n        /* @property */\n        \"k\" : 75,\n        /* @property */\n        \"K\" : 75,\n        /* @property */\n        \"l\" : 76,\n        /* @property */\n        \"L\" : 76,\n        /* @property */\n        \"m\" : 77,\n        /* @property */\n        \"M\" : 77,\n        /* @property */\n        \"n\" : 78,\n        /* @property */\n        \"N\" : 78,\n        /* @property */\n        \"o\" : 79,\n        /* @property */\n        \"O\" : 79,\n        /* @property */\n        \"p\" : 80,\n        /* @property */\n        \"P\" : 80,\n        /* @property */\n        \"q\" : 81,\n        /* @property */\n        \"Q\" : 81,\n        /* @property */\n        \"r\" : 82,\n        /* @property */\n        \"R\" : 82,\n        /* @property */\n        \"s\" : 83,\n        /* @property */\n        \"S\" : 83,\n        /* @property */\n        \"t\" : 84,\n        /* @property */\n        \"T\" : 84,\n        /* @property */\n        \"u\" : 85,\n        /* @property */\n        \"U\" : 85,\n        /* @property */\n        \"v\" : 86,\n        /* @property */\n        \"V\" : 86,\n        /* @property */\n        \"w\" : 87,\n        /* @property */\n        \"W\" : 87,\n        /* @property */\n        \"x\" : 88,\n        /* @property */\n        \"X\" : 88,\n        /* @property */\n        \"y\" : 89,\n        /* @property */\n        \"Y\" : 89,\n        /* @property */\n        \"z\" : 90,\n        /* @property */\n        \"Z\" : 90,\n        \n        /* @property */\n        \"numpad0\" : 96,\n        /* @property */\n        \"numpad1\" : 97,\n        /* @property */\n        \"numpad2\" : 98,\n        /* @property */\n        \"numpad3\" : 99,\n        /* @property */\n        \"numpad4\" : 100,\n        /* @property */\n        \"numpad5\" : 101,\n        /* @property */\n        \"numpad6\" : 102,\n        /* @property */\n        \"numpad7\" : 103,\n        /* @property */\n        \"numpad8\" : 104,\n        /* @property */\n        \"numpad9\" : 105,\n        /* @property */\n        \"multiply\"      : 106,\n        /* @property */\n        \"add\"           : 107,\n        /* @property */\n        \"subtract\"      : 109,\n        /* @property */\n        \"decimalpoint\"  : 110,\n        /* @property */\n        \"divide\"        : 111,\n\n        /* @property */\n        \"f1\"    : 112,\n        /* @property */\n        \"f2\"    : 113,\n        /* @property */\n        \"f3\"    : 114,\n        /* @property */\n        \"f4\"    : 115,\n        /* @property */\n        \"f5\"    : 116,\n        /* @property */\n        \"f6\"    : 117,\n        /* @property */\n        \"f7\"    : 118,\n        /* @property */\n        \"f8\"    : 119,\n        /* @property */\n        \"f9\"    : 120,\n        /* @property */\n        \"f10\"   : 121,\n        /* @property */\n        \"f11\"   : 122,\n        /* @property */\n        \"f12\"   : 123,\n        \n        /* @property */\n        \"numlock\"   : 144,\n        /* @property */\n        \"scrolllock\": 145,\n        /* @property */\n        \"semicolon\" : 186,\n        /* @property */\n        \"equalsign\" : 187,\n        /* @property */\n        \"comma\"     : 188,\n        /* @property */\n        \"dash\"      : 189,\n        /* @property */\n        \"period\"    : 190,\n        /* @property */\n        \"forward slash\" : 191,\n        /* @property */\n        \"/\": 191,\n        /* @property */\n        \"grave accent\"  : 192,\n        /* @property */\n        \"open bracket\"  : 219,\n        /* @property */\n        \"back slash\"    : 220,\n        /* @property */\n        \"close bracket\"  : 221,\n        /* @property */\n        \"single quote\"  : 222,\n        /* @property */\n        \"space\"         : 32\n\n      },\n    }\n  });\n\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.input.GamepadManager\n   * ゲームパッドマネージャー.\n   * ゲームパッド接続状況の監視、個々のゲームパッドの入力状態の更新を行う.\n   */\n  phina.define('phina.input.GamepadManager', {\n    superClass: 'phina.util.EventDispatcher',\n\n    /**\n     * 作成済みphina.input.Gamepadオブジェクトのリスト\n     *\n     * @type {Object.<number, phina.input.Gamepad>}\n     */\n    gamepads: null,\n\n    /**\n     * 作成済みゲームパッドのindexのリスト\n     *\n     * @type {number[]}\n     * @private\n     */\n    _created: null,\n\n    /**\n     * ラップ前Gamepadのリスト\n     * @type {phina.input.Gamepad[]}\n     * @private\n     */\n    _rawgamepads: null,\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n\n      this.gamepads = {};\n      this._created = [];\n      this._rawgamepads = [];\n\n      this._prevTimestamps = {};\n\n      this._getGamepads = null;\n      var navigator = phina.global.navigator;\n      if (navigator && navigator.getGamepads) {\n        this._getGamepads = navigator.getGamepads.bind(navigator);\n      } else if (navigator && navigator.webkitGetGamepads) {\n        this._getGamepads = navigator.webkitGetGamepads.bind(navigator);\n      } else {\n        this._getGamepads = function() {};\n      }\n\n      phina.global.addEventListener('gamepadconnected', function(e) {\n        var gamepad = this.get(e.gamepad.index);\n        gamepad.connected = true;\n        this.flare('connected', {\n          gamepad: gamepad,\n        });\n      }.bind(this));\n\n      phina.global.addEventListener('gamepaddisconnected', function(e) {\n        var gamepad = this.get(e.gamepad.index);\n        gamepad.connected = false;\n        this.flare('disconnected', {\n          gamepad: gamepad,\n        });\n      }.bind(this));\n    },\n\n    /**\n     * 情報更新処理\n     * マイフレーム呼んで下さい.\n     */\n    update: function() {\n      this._poll();\n\n      for (var i = 0, end = this._created.length; i < end; i++) {\n        var index = this._created[i];\n        var rawgamepad = this._rawgamepads[index];\n\n        if (!rawgamepad) {\n          continue;\n        }\n\n        if (rawgamepad.timestamp && (rawgamepad.timestamp === this._prevTimestamps[i])) {\n          this.gamepads[index]._updateStateEmpty();\n          continue;\n        }\n\n        this._prevTimestamps[i] = rawgamepad.timestamp;\n        this.gamepads[index]._updateState(rawgamepad);\n      }\n    },\n\n    /**\n     * 指定されたindexのGamepadオブジェクトを返す.\n     *\n     * 未作成の場合は作成して返す.\n     */\n    get: function(index) {\n      index = index || 0;\n\n      if (!this.gamepads[index]) {\n        this._created.push(index);\n        this.gamepads[index] = phina.input.Gamepad(index);\n      }\n\n      return this.gamepads[index];\n    },\n\n    /**\n     * 指定されたindexのGamepadオブジェクトを破棄する.\n     * 破棄されたGamepadオブジェクトは以降更新されない.\n     */\n    dispose: function(index) {\n      if (this._created.contains(index)) {\n        var gamepad = this.get(index);\n        delete this.gamepad[gamepad];\n        this._created.erase(index);\n\n        gamepad.connected = false;\n      }\n    },\n\n    /**\n     * 指定されたindexのゲームパッドが接続中かどうかを返す.\n     *\n     * Gamepadオブジェクトが未作成の場合でも動作する.\n     */\n    isConnected: function(index) {\n      index = index || 0;\n\n      return this._rawgamepads[index] && this._rawgamepads[index].connected;\n    },\n\n    /**\n     * @private\n     */\n    _poll: function() {\n      var rawGamepads = this._getGamepads();\n      if (rawGamepads) {\n        this._rawgamepads.clear();\n\n        for (var i = 0, end = rawGamepads.length; i < end; i++) {\n          if (rawGamepads[i]) {\n            this._rawgamepads.push(rawGamepads[i]);\n          }\n        }\n      }\n    },\n\n    _static: {\n      /** ブラウザがGamepad APIに対応しているか. */\n      isAvailable: (function() {\n        var nav = phina.global.navigator;\n        if (!nav) return false;\n\n        return (!!nav.getGamepads) || (!!nav.webkitGetGamepads);\n      })(),\n    },\n\n  });\n\n  /**\n   * @class phina.input.Gamepad\n   * ゲームパッド\n   *\n   * 直接インスタンス化せず、phina.input.GamepadManagerオブジェクトから取得して使用する.\n   */\n  phina.define(\"phina.input.Gamepad\", {\n\n    index: null,\n    buttons: null,\n    /** @type {Array.<phina.geom.Vector2>} */\n    sticks: null,\n\n    id: null,\n    connected: false,\n    mapping: null,\n    timestamp: null,\n\n    init: function(index) {\n      this.index = index || 0;\n\n      this.buttons = Array.range(0, 16).map(function() {\n        return {\n          value: 0,\n          pressed: false,\n          last: false,\n          down: false,\n          up: false,\n        };\n      });\n      this.sticks = Array.range(0, 2).map(function() {\n        return phina.geom.Vector2(0, 0);\n      });\n    },\n\n    /**\n     * ボタンが押されているか.\n     */\n    getKey: function(button) {\n      if (typeof(button) === 'string') {\n        button = phina.input.Gamepad.BUTTON_CODE[button];\n      }\n      if (this.buttons[button]) {\n        return this.buttons[button].pressed;\n      } else {\n        return false;\n      }\n    },\n\n    /**\n     * ボタンを押した.\n     */\n    getKeyDown: function(button) {\n      if (typeof(button) === 'string') {\n        button = phina.input.Gamepad.BUTTON_CODE[button];\n      }\n      if (this.buttons[button]) {\n        return this.buttons[button].down;\n      } else {\n        return false;\n      }\n    },\n\n    /**\n     * ボタンを離した.\n     */\n    getKeyUp: function(button) {\n      if (typeof(button) === 'string') {\n        button = phina.input.Gamepad.BUTTON_CODE[button];\n      }\n      if (this.buttons[button]) {\n        return this.buttons[button].up;\n      } else {\n        return false;\n      }\n    },\n\n    /**\n     * 十字キーの入力されている方向.\n     */\n    getKeyAngle: function() {\n      var angle = null;\n      var arrowBit =\n        (this.getKey('left') << 3) | // 1000\n        (this.getKey('up') << 2) | // 0100\n        (this.getKey('right') << 1) | // 0010\n        (this.getKey('down')); // 0001\n\n      if (arrowBit !== 0 && ARROW_BIT_TO_ANGLE_TABLE.hasOwnProperty(arrowBit)) {\n        angle = ARROW_BIT_TO_ANGLE_TABLE[arrowBit];\n      }\n\n      return angle;\n    },\n\n    /**\n     * 十字キーの入力されている方向をベクトルで.\n     * 正規化されている.\n     */\n    getKeyDirection: function() {\n      var direction = phina.geom.Vector2(0, 0);\n\n      if (this.getKey('left')) {\n        direction.x = -1;\n      } else if (this.getKey('right')) {\n        direction.x = 1;\n      }\n      if (this.getKey('up')) {\n        direction.y = -1;\n      } else if (this.getKey('down')) {\n        direction.y = 1;\n      }\n\n      if (direction.x && direction.y) {\n        direction.div(Math.SQRT2);\n      }\n\n      return direction;\n    },\n\n    /**\n     * スティックの入力されている方向.\n     */\n    getStickAngle: function(stickId) {\n      stickId = stickId || 0;\n      var stick = this.sticks[stickId];\n      return stick ? Math.atan2(-stick.y, stick.x) : null;\n    },\n\n    /**\n     * スティックの入力されている方向をベクトルで.\n     */\n    getStickDirection: function(stickId) {\n      stickId = stickId || 0;\n      return this.sticks ? this.sticks[stickId].clone() : phina.geom.Vector2(0, 0);\n    },\n\n    /**\n     * @private\n     */\n    _updateState: function(gamepad) {\n      this.id = gamepad.id;\n      this.connected = gamepad.connected;\n      this.mapping = gamepad.mapping;\n      this.timestamp = gamepad.timestamp;\n\n      for (var i = 0, iend = gamepad.buttons.length; i < iend; i++) {\n        this._updateButton(gamepad.buttons[i], i);\n      }\n\n      for (var j = 0, jend = gamepad.axes.length; j < jend; j += 2) {\n        this._updateStick(gamepad.axes[j + 0], j / 2, 'x');\n        this._updateStick(gamepad.axes[j + 1], j / 2, 'y');\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateStateEmpty: function() {\n      for (var i = 0, iend = this.buttons.length; i < iend; i++) {\n        this.buttons[i].down = false;\n        this.buttons[i].up = false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateButton: function(value, buttonId) {\n      if (this.buttons[buttonId] === undefined) {\n        this.buttons[buttonId] = {\n          value: 0,\n          pressed: false,\n          last: false,\n          down: false,\n          up: false,\n        };\n      }\n      \n      var button = this.buttons[buttonId];\n\n      button.last = button.pressed;\n\n      if (typeof value === 'object') {\n        button.value = value.value;\n        button.pressed = value.pressed;\n      } else {\n        button.value = value;\n        button.pressed = value > phina.input.Gamepad.ANALOGUE_BUTTON_THRESHOLD;\n      }\n\n      button.down = (button.pressed ^ button.last) & button.pressed;\n      button.up = (button.pressed ^ button.last) & button.last;\n    },\n\n    /**\n     * @private\n     */\n    _updateStick: function(value, stickId, axisName) {\n      if (this.sticks[stickId] === undefined) {\n        this.sticks[stickId] = phina.geom.Vector2(0, 0);\n      }\n      this.sticks[stickId][axisName] = value;\n    },\n\n    _static: {\n      /** ブラウザがGamepad APIに対応しているか. */\n      isAvailable: (function() {\n        var nav = phina.global.navigator;\n        if (!nav) return false;\n\n        return (!!nav.getGamepads) || (!!nav.webkitGetGamepads);\n      })(),\n\n      /** アナログ入力対応のボタンの場合、どの程度まで押し込むとonになるかを表すしきい値. */\n      ANALOGUE_BUTTON_THRESHOLD: 0.5,\n\n      /** ボタン名とボタンIDのマップ. */\n      BUTTON_CODE: {\n        'a': 0,\n        'b': 1,\n        'x': 2,\n        'y': 3,\n\n        'l1': 4,\n        'r1': 5,\n        'l2': 6,\n        'r2': 7,\n\n        'select': 8,\n        'start': 9,\n\n        'l3': 10,\n        'r3': 11,\n\n        'up': 12,\n        'down': 13,\n        'left': 14,\n        'right': 15,\n\n        'special': 16,\n\n        'A': 0,\n        'B': 1,\n        'X': 2,\n        'Y': 3,\n\n        'L1': 4,\n        'R1': 5,\n        'L2': 6,\n        'R2': 7,\n\n        'SELECT': 8,\n        'START': 9,\n\n        'L3': 10,\n        'R3': 11,\n\n        'UP': 12,\n        'DOWN': 13,\n        'LEFT': 14,\n        'RIGHT': 15,\n\n        'SPECIAL': 16,\n      },\n    },\n  });\n\n  var ARROW_BIT_TO_ANGLE_TABLE = {\n    0x00: null,\n\n    /* @property 下 */\n    0x01: 270,\n    /* @property 右 */\n    0x02: 0,\n    /* @property 上 */\n    0x04: 90,\n    /* @property 左 */\n    0x08: 180,\n\n    /* @property 右上 */\n    0x06: 45,\n    /* @property 右下 */\n    0x03: 315,\n    /* @property 左上 */\n    0x0c: 135,\n    /* @property 左下 */\n    0x09: 225,\n\n    // 三方向同時押し対応\n    // 想定外の操作だが対応しといたほうが無難\n    /* @property 右上左 */\n    0x0e: 90,\n    /* @property 上左下 */\n    0x0d: 180,\n    /* @property 左下右 */\n    0x0b: 270,\n    /* @property 下右上 */\n    0x07: 0,\n  };\n\n});\n\n/*\n *\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.input.Accelerometer\n   * スマートフォンのセンサー情報\n   */\n  phina.define('phina.input.Accelerometer', {\n\n    /** @property  gravity 重力センサー */\n    /** @property  acceleration 加速度センサー */\n    /** @property  rotation 回転加速度センサー */\n    /** @property  orientation スマートフォンの傾き */\n\n    /**\n     * @constructor\n     */\n    init: function() {\n\n      var self = this;\n      \n      this.gravity        = phina.geom.Vector3(0, 0, 0);\n      this.acceleration   = phina.geom.Vector3(0, 0, 0);\n      this.rotation       = phina.geom.Vector3(0, 0, 0);\n      this.orientation    = phina.geom.Vector3(0, 0, 0);\n\n      if (phina.isMobile()) {\n        phina.global.addEventListener(\"devicemotion\", function(e) {\n          var acceleration = self.acceleration;\n          var gravity = self.gravity;\n          var rotation = self.rotation;\n          \n          if (e.acceleration) {\n            acceleration.x = e.acceleration.x;\n            acceleration.y = e.acceleration.y;\n            acceleration.z = e.acceleration.z;\n          }\n          if (e.accelerationIncludingGravity) {\n            gravity.x = e.accelerationIncludingGravity.x;\n            gravity.y = e.accelerationIncludingGravity.y;\n            gravity.z = e.accelerationIncludingGravity.z;\n          }\n          if (e.rotationRate) {\n            rotation.x = rotation.beta  = e.rotationRate.beta;\n            rotation.y = rotation.gamma = e.rotationRate.gamma;\n            rotation.z = rotation.alpha = e.rotationRate.alpha;\n          }\n        });\n        \n        phina.global.addEventListener(\"deviceorientation\", function(e) {\n          var orientation = self.orientation;\n          orientation.alpha   = e.alpha;  // z(0~360)\n          orientation.beta    = e.beta;   // x(-180~180)\n          orientation.gamma   = e.gamma;  // y(-90~90)\n        });\n      }\n    },\n\n  });\n\n});\n\nphina.namespace(function() {\n\n\n  phina.define('phina.app.Updater', {\n\n    init: function(app) {\n      this.app = app;\n    },\n\n    update: function(root) {\n      this._updateElement(root);\n    },\n\n    _updateElement: function(element) {\n      var app = this.app;\n\n      // 更新するかを判定\n      if (element.awake === false) return ;\n\n      // エンターフレームイベント\n      if (element.has('enterframe')) {\n        element.flare('enterframe', {\n          app: this.app,\n        });\n      }\n\n      // 更新\n      if (element.update) element.update(app);\n\n      // タッチ判定\n      // this._checkPoint(element);\n\n      // 子供を更新\n      var len = element.children.length;\n      if (element.children.length > 0) {\n        var tempChildren = element.children.slice();\n        for (var i=0; i<len; ++i) {\n          this._updateElement(tempChildren[i]);\n        }\n      }\n    },\n\n    _checkPoint: function(obj) {\n\n      this.app.pointers.forEach(function(p) {\n        if (p.id !== null) {\n          this.__checkPoint(obj, p);\n        }\n      }, this);\n    },\n\n    __checkPoint: function(obj, p) {\n      if (!obj.interactive) return ;\n\n      var prevOverFlag = obj._overFlags[p.id];\n      var overFlag = obj.hitTest2(p.x, p.y);\n      obj._overFlags[p.id] = overFlag;\n\n      if (!prevOverFlag && overFlag) {\n        obj.flare('pointover', {\n          pointer: p,\n        });\n      }\n      if (prevOverFlag && !overFlag) {\n        obj.flare('pointout');\n      }\n\n      if (overFlag) {\n        if (p.getPointingStart()) {\n          obj._touchFlags[p.id] = true;\n          obj.flare('pointstart');\n        }\n      }\n\n      if (obj._touchFlags[p.id]) {\n        obj.flare('pointstay');\n        if (p._moveFlag) {\n          obj.flare('pointmove');\n        }\n      }\n\n      if (obj._touchFlags[p.id]===true && p.getPointingEnd()) {\n        obj._touchFlags[p.id] = false;\n        obj.flare('pointend');\n\n        if (obj._overFlags[p.id]) {\n          obj._overFlags[p.id] = false;\n          obj.flare('pointout');\n        }\n      }\n    },\n\n  });\n\n  \n});\n\nphina.namespace(function() {\n\n\n  phina.define('phina.app.Interactive', {\n\n    init: function(app) {\n      this.app = app;\n      this._enable = true;\n      this.multiTouch = true;\n      this.cursor = {\n        normal: '',\n        hover: 'pointer',\n      };\n\n      this._holds = [];\n      this.app.on('changescene', function() {\n        this._holds.clear();\n      }.bind(this));\n    },\n\n    enable: function() {\n      this._enable = true;\n      return this;\n    },\n    disable: function() {\n      this._enable = false;\n      return this;\n    },\n\n    check: function(root) {\n      // カーソルのスタイルを反映\n      if (this.app.domElement) {\n        if (this._holds.length > 0) {\n          this.app.domElement.style.cursor = this.cursor.hover;\n        }\n        else {\n          this.app.domElement.style.cursor = this.cursor.normal;\n        }\n      }\n\n      if (!this._enable || !this.app.pointers) return ;\n      this._checkElement(root);\n    },\n\n    _checkElement: function(element) {\n      var app = this.app;\n\n      // 更新するかを判定\n      if (element.awake === false) return ;\n\n      // 子供を更新\n      var len = element.children.length;\n      if (element.children.length > 0) {\n        var tempChildren = element.children.slice();\n        for (var i=0; i<len; ++i) {\n          this._checkElement(tempChildren[i]);\n        }\n      }\n\n      // タッチ判定\n      this._checkPoint(element);\n    },\n\n    _checkPoint: function(obj) {\n      if (this.multiTouch) {\n        this.app.pointers.forEach(function(p) {\n          if (p.id !== null) {\n            this.__checkPoint(obj, p);\n          }\n        }, this);\n      }\n      else {\n        this.__checkPoint(obj, this.app.pointer);\n      }\n    },\n\n    __checkPoint: function(obj, p) {\n      if (!obj.interactive) return ;\n\n      var prevOverFlag = obj._overFlags[p.id];\n      var overFlag = obj.hitTest(p.x, p.y);\n      obj._overFlags[p.id] = overFlag;\n\n      var e = {\n        pointer: p,\n        interactive: this,\n      };\n\n      if (!prevOverFlag && overFlag) {\n        obj.flare('pointover', e);\n\n        if (obj.boundingType && obj.boundingType !== 'none') {\n          this._holds.push(obj);\n        }\n      }\n      if (prevOverFlag && !overFlag) {\n        obj.flare('pointout', e);\n        this._holds.erase(obj);\n      }\n\n      if (overFlag) {\n        if (p.getPointingStart()) {\n          obj._touchFlags[p.id] = true;\n          obj.flare('pointstart', e);\n          // クリックフラグを立てる\n          obj._clicked = true;\n        }\n      }\n\n      if (obj._touchFlags[p.id]) {\n        obj.flare('pointstay', e);\n        if (p._moveFlag) {\n          obj.flare('pointmove', e);\n        }\n      }\n\n      if (obj._touchFlags[p.id]===true && p.getPointingEnd()) {\n        obj._touchFlags[p.id] = false;\n        obj.flare('pointend', e);\n\n        if (obj._overFlags[p.id]) {\n          obj._overFlags[p.id] = false;\n          obj.flare('pointout', e);\n        }\n      }\n    },\n  });\n\n  \n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.app.BaseApp\n   * ベースとなるアプリケーションクラス\n   */\n  phina.define('phina.app.BaseApp', {\n    superClass: 'phina.util.EventDispatcher',\n\n    /** awake */\n    awake: null,\n    /** fps */\n    fps: null,\n    /** frame */\n    frame: null,\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n      this._scenes = [phina.app.Scene()];\n      this._sceneIndex = 0;\n\n      this.updater = phina.app.Updater(this);\n      this.interactive = phina.app.Interactive(this);\n\n      this.awake = true;\n      this.ticker = phina.util.Ticker();\n    },\n\n    run: function() {\n      var self = this;\n\n      this.ticker.tick(function() {\n        self._loop();\n      });\n\n      this.ticker.start();\n\n      return this;\n    },\n\n    replaceScene: function(scene) {\n      this.flare('replace');\n      this.flare('changescene');\n\n      var e = null;\n      if (this.currentScene) {\n        this.currentScene.app = null;\n      }\n      this.currentScene = scene;\n      this.currentScene.app = this;\n      this.currentScene.flare('enter', {\n        app: this,\n      });\n\n      return this;\n    },\n\n    pushScene: function(scene) {\n      this.flare('push');\n      this.flare('changescene');\n\n      this.currentScene.flare('pause', {\n        app: this,\n      });\n      \n      this._scenes.push(scene);\n      ++this._sceneIndex;\n\n      this.flare('pushed');\n      \n      scene.app = this;\n      scene.flare('enter', {\n        app: this,\n      });\n\n      return this;\n    },\n\n    /**\n     * シーンをポップする(ポーズやオブション画面などで使用)\n     */\n    popScene: function() {\n      this.flare('pop');\n      this.flare('changescene');\n\n      var scene = this._scenes.pop();\n      --this._sceneIndex;\n\n      scene.flare('exit', {\n        app: this,\n      });\n      scene.app = null;\n\n      this.flare('poped');\n      \n      // \n      this.currentScene.flare('resume', {\n        app: this,\n        prevScene: scene,\n      });\n      \n      return scene;\n    },\n\n    /**\n     * シーンのupdateを実行するようにする\n     */\n    start: function() {\n      this.awake = true;\n\n      return this;\n    },\n    \n    /**\n     * シーンのupdateを実行しないようにする\n     */\n    stop: function() {\n      this.awake = false;\n\n      return this;\n    },\n\n    enableStats: function() {\n      if (phina.global.Stats) {\n        this.stats = new Stats();\n        document.body.appendChild(this.stats.domElement);\n      }\n      else {\n        // console.warn(\"not defined stats.\");\n        var STATS_URL = 'https://cdnjs.cloudflare.com/ajax/libs/stats.js/r14/Stats.js';\n        var script = document.createElement('script');\n        script.src = STATS_URL;\n        document.body.appendChild(script);\n        script.onload = function() {\n          this.enableStats();\n        }.bind(this);\n      }\n      return this;\n    },\n\n    enableDatGUI: function(callback) {\n      if (phina.global.dat) {\n        var gui = new phina.global.dat.GUI();\n        callback(gui);\n      }\n      else {\n        // console.warn(\"not defined dat.GUI.\");\n        var URL = 'https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.5.1/dat.gui.js';\n        var script = document.createElement('script');\n        script.src = URL;\n        document.body.appendChild(script);\n        script.onload = function() {\n          var gui = new phina.global.dat.GUI();\n          callback(gui);\n        }.bind(this);\n      }\n      return this;\n    },\n\n    _loop: function() {\n      this._update();\n      this._draw();\n\n      this.interactive.check(this.currentScene);\n\n      // stats update\n      if (this.stats) this.stats.update();\n    },\n\n    _update: function() {\n      if (this.awake) {\n        // エンターフレームイベント\n        if (this.has('enterframe')) {\n          this.flare('enterframe');\n        }\n\n        this.update && this.update();\n        this.updater.update(this.currentScene);\n      }\n    },\n\n    /**\n     * 描画用仮想関数\n     * @private\n     */\n    _draw: function() {},\n\n    _accessor: {\n      currentScene: {\n        \"get\": function()   { return this._scenes[this._sceneIndex]; },\n        \"set\": function(v)  { this._scenes[this._sceneIndex] = v; },\n      },\n\n      rootScene: {\n        \"get\": function()   { return this._scenes[0]; },\n        \"set\": function(v)  { this._scenes[0] = v; },\n      },\n\n      frame: {\n        \"get\": function () { return this.ticker.frame; },\n        \"set\": function (v) { this.ticker.frame = v; },\n      },\n\n      fps: {\n        \"get\": function () { return this.ticker.fps; },\n        \"set\": function (v) { this.ticker.fps = v; },\n      },\n\n      deltaTime: {\n        \"get\": function () { return this.ticker.deltaTime; },\n      },\n\n      elapsedTime: {\n        \"get\": function () { return this.ticker.elapsedTime; },\n      },\n\n      currentTime: {\n        \"get\": function () { return this.ticker.currentTime; },\n      },\n\n      startTime: {\n        \"get\": function () { return this.ticker.startTime; },\n      },\n    },\n\n  });\n\n  \n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.app.Element\n   * @extends phina.util.EventDispatcher\n   */\n  phina.define('phina.app.Element', {\n    superClass: 'phina.util.EventDispatcher',\n\n    /// 親\n    parent: null,\n\n    /// 子供\n    children: null,\n\n    /// 有効化どうか\n    awake: true,\n\n    /**\n     * @constructor\n     */\n    init: function() {\n      this.superInit();\n      this.children = [];\n    },\n\n    addChild: function(child) {\n      if (child.parent) child.remove();\n\n      child.parent = this;\n      this.children.push(child);\n\n      child.has('added') && child.flare('added');\n\n      return child;\n    },\n\n    addChildTo: function(parent) {\n      parent.addChild(this);\n\n      return this;\n    },\n\n    addChildAt: function(child, index) {\n      if (child.parent) child.remove();\n\n      child.parent = this;\n      this.children.splice(index, 0, child);\n\n      child.has('added') && child.flare('added');\n\n      return child;\n    },\n\n    getChildAt: function(index) {\n      return this.children.at(index);\n    },\n\n    getChildByName: function(name) {\n      // TODO: \n    },\n\n    getChildIndex: function(child) {\n      return this.children.indexOf(child);\n    },\n\n    getParent: function() {\n      return this.parent;\n    },\n\n    getRoot: function() {\n      var elm = this;\n      for (elm=this.parent; elm.parent != null; elm = elm.parent) {\n\n      }\n      return elm;\n    },\n\n    removeChild: function(child) {\n      var index = this.children.indexOf(child);\n      if (index !== -1) {\n        this.children.splice(index, 1);\n        child.has('removed') && child.flare('removed');\n      }\n      return this;\n    },\n\n    remove: function() {\n      if (!this.parent) return ;\n\n      this.parent.removeChild(this);\n      this.parent = null;\n      \n      return this;\n    },\n\n    isAwake: function() {\n      return this.awake;\n    },\n\n    wakeUp: function() {\n      this.awake = true;\n      return this;\n    },\n\n    sleep: function() {\n      this.awake = false;\n      return this;\n    },\n\n    fromJSON: function(json) {\n\n      var createChildren = function(name, data) {\n        // \n        var args = data.arguments;\n        args = (args instanceof Array) ? args : [args];\n        // \n        var _class = phina.using(data.className);\n        // \n        var element = _class.apply(null, args);\n        \n        element.name = name;\n        this[name] = element;\n\n        element.fromJSON(data);\n        element.addChildTo(this)\n      }.bind(this);\n\n      json.forIn(function(key, value) {\n        if (key === 'children') {\n          value.forIn(function(name, data) {\n            createChildren(name, data);\n          });\n        }\n        else {\n          if (key !== 'type' && key !== 'className') {\n            this[key] = value;\n          }\n        }\n      }, this);\n\n      return this;\n    },\n\n    toJSON: function() {\n      var json = {};\n\n      // this.forIn(function(key, value) {\n      //   if (key[0] === '_') return ;\n      //   json[key] = value;\n      // });\n\n      var keys = [\n        'x', 'y',\n        'rotation',\n        'scaleX', 'scaleY',\n        'originX', 'originY',\n        'className',\n        'name',\n      ];\n\n      keys.each(function(key) {\n        json[key] = this[key];\n      }, this);\n\n      var children = this.children.map(function(child) {\n        return child.toJSON();\n      });\n\n      if (children.length) {\n        json.children = {};\n        children.each(function(child) {\n          json.children[child.name] = child;\n        });\n      }\n\n      return json;\n    },\n  });\n  \n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.app.Object2D\n   * Object2D\n   * @extends phina.app.Element\n   */\n  phina.define('phina.app.Object2D', {\n    superClass: 'phina.app.Element',\n\n    /** 位置 */\n    position: null,\n    /** 回転 */\n    rotation: 0,\n    /** スケール */\n    scale: null,\n    /** 基準位置 */\n    origin: null,\n\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      this.superInit();\n\n      options = ({}).$safe(options, phina.app.Object2D.defaults);\n\n      this.position = phina.geom.Vector2(options.x, options.y);\n      this.scale    = phina.geom.Vector2(options.scaleX, options.scaleY);\n      this.rotation = options.rotation;\n      this.origin   = phina.geom.Vector2(options.originX, options.originY);\n\n      this._matrix = phina.geom.Matrix33().identity();\n      this._worldMatrix = phina.geom.Matrix33().identity();\n\n      this.interactive = false;\n      this._overFlags = {};\n      this._touchFlags = {};\n\n      this.width = options.width;\n      this.height = options.height;\n      this.radius = options.radius;\n      this.boundingType = options.boundingType;\n    },\n\n    /**\n     * 点と衝突しているかを判定\n     * @param {Number} x\n     * @param {Number} y\n     */\n    hitTest: function(x, y) {\n      if (this.boundingType === 'rect') {\n        return this.hitTestRect(x, y);\n      }\n      else if (this.boundingType === 'circle') {\n        return this.hitTestCircle(x, y);\n      }\n      else {\n        // none の場合\n        return true;\n      }\n    },\n\n    hitTestRect: function(x, y) {\n      var p = this.globalToLocal(phina.geom.Vector2(x, y));\n\n      var left   = -this.width*this.originX;\n      var right  = +this.width*(1-this.originX);\n      var top    = -this.height*this.originY;\n      var bottom = +this.height*(1-this.originY);\n\n      return ( left < p.x && p.x < right ) && ( top  < p.y && p.y < bottom );\n    },\n\n    hitTestCircle: function(x, y) {\n      // 円判定\n      var p = this.globalToLocal(phina.geom.Vector2(x, y));\n      if (((p.x)*(p.x)+(p.y)*(p.y)) < (this.radius*this.radius)) {\n          return true;\n      }\n      return false;\n    },\n\n    /**\n     * 要素と衝突しているかを判定\n     * @param {Object} elm\n     */\n    hitTestElement: function(elm) {\n      var rect0 = this;\n      var rect1 = elm;\n      return (rect0.left < rect1.right) && (rect0.right > rect1.left) &&\n             (rect0.top < rect1.bottom) && (rect0.bottom > rect1.top);\n    },\n\n\n    globalToLocal: function(p) {\n      var matrix = this._worldMatrix.clone();\n      matrix.invert();\n      // matrix.transpose();\n\n      var temp = matrix.multiplyVector2(p);\n\n      return temp;\n    },\n\n    setInteractive: function(flag, type) {\n      this.interactive = flag;\n      if (type) {\n        this.boundingType = type;\n      }\n\n      return this;\n    },\n\n    /**\n     * X 座標値をセット\n     * @param {Number} x\n     */\n    setX: function(x) {\n      this.position.x = x;\n      return this;\n    },\n    \n    /**\n     * Y 座標値をセット\n     * @param {Number} y\n     */\n    setY: function(y) {\n      this.position.y = y;\n      return this;\n    },\n    \n    /**\n     * XY 座標をセット\n     * @param {Number} x\n     * @param {Number} y\n     */\n    setPosition: function(x, y) {\n      this.position.x = x;\n      this.position.y = y;\n      return this;\n    },\n\n    /**\n     * 回転をセット\n     * @param {Number} rotation\n     */\n    setRotation: function(rotation) {\n      this.rotation = rotation;\n      return this;\n    },\n\n    /**\n     * スケールをセット\n     * @param {Number} x\n     * @param {Number} y\n     */\n    setScale: function(x, y) {\n      this.scale.x = x;\n      if (arguments.length <= 1) {\n          this.scale.y = x;\n      } else {\n          this.scale.y = y;\n      }\n      return this;\n    },\n    \n    /**\n     * 基準点をセット\n     * @param {Number} x\n     * @param {Number} y\n     */\n    setOrigin: function(x, y) {\n      this.origin.x = x;\n      this.origin.y = y;\n      return this;\n    },\n    \n    /**\n     * 幅をセット\n     * @param {Number} width\n     */\n    setWidth: function(width) {\n      this.width = width;\n      return this;\n    },\n    \n    /**\n     * 高さをセット\n     * @param {Number} height\n     */\n    setHeight: function(height) {\n      this.height = height;\n      return this;\n    },\n    \n    /**\n     * サイズ(幅, 高さ)をセット\n     * @param {Number} width\n     * @param {Number} height\n     */\n    setSize: function(width, height) {\n      this.width  = width;\n      this.height = height;\n      return this;\n    },\n\n    setBoundingType: function(type) {\n      this.boundingType = type;\n      return this;\n    },\n\n    moveTo: function(x, y) {\n      this.position.x = x;\n      this.position.y = y;\n      return this;\n    },\n\n    moveBy: function(x, y) {\n      this.position.x += x;\n      this.position.y += y;\n      return this;\n    },\n\n    _calcWorldMatrix: function() {\n      if (!this.parent) return ;\n\n      // cache check\n      if (this.rotation != this._cachedRotation) {\n        this._cachedRotation = this.rotation;\n\n        var r = this.rotation*(Math.PI/180);\n        this._sr = Math.sin(r);\n        this._cr = Math.cos(r);\n      }\n\n      var local = this._matrix;\n      var parent = this.parent._worldMatrix || phina.geom.Matrix33.IDENTITY;\n      var world = this._worldMatrix;\n\n      // ローカルの行列を計算\n      local.m00 = this._cr * this.scale.x;\n      local.m01 =-this._sr * this.scale.y;\n      local.m10 = this._sr * this.scale.x;\n      local.m11 = this._cr * this.scale.y;\n      local.m02 = this.position.x;\n      local.m12 = this.position.y;\n\n      // cache\n      var a00 = local.m00; var a01 = local.m01; var a02 = local.m02;\n      var a10 = local.m10; var a11 = local.m11; var a12 = local.m12;\n      var b00 = parent.m00; var b01 = parent.m01; var b02 = parent.m02;\n      var b10 = parent.m10; var b11 = parent.m11; var b12 = parent.m12;\n\n      // 親の行列と掛け合わせる\n      world.m00 = b00 * a00 + b01 * a10;\n      world.m01 = b00 * a01 + b01 * a11;\n      world.m02 = b00 * a02 + b01 * a12 + b02;\n\n      world.m10 = b10 * a00 + b11 * a10;\n      world.m11 = b10 * a01 + b11 * a11;\n      world.m12 = b10 * a02 + b11 * a12 + b12;\n\n      return this;\n    },\n\n    _accessor: {\n      /**\n       * @property    x\n       * x座標値\n       */\n      x: {\n        \"get\": function()   { return this.position.x; },\n        \"set\": function(v)  { this.position.x = v; }\n      },\n      /**\n       * @property    y\n       * y座標値\n       */\n      y: {\n        \"get\": function()   { return this.position.y; },\n        \"set\": function(v)  { this.position.y = v; }\n      },\n\n      /**\n       * @property    originX\n       * x座標値\n       */\n      originX: {\n        \"get\": function()   { return this.origin.x; },\n        \"set\": function(v)  { this.origin.x = v; }\n      },\n      \n      /**\n       * @property    originY\n       * y座標値\n       */\n      originY: {\n        \"get\": function()   { return this.origin.y; },\n        \"set\": function(v)  { this.origin.y = v; }\n      },\n      \n      /**\n       * @property    scaleX\n       * スケールX値\n       */\n      scaleX: {\n        \"get\": function()   { return this.scale.x; },\n        \"set\": function(v)  { this.scale.x = v; }\n      },\n      \n      /**\n       * @property    scaleY\n       * スケールY値\n       */\n      scaleY: {\n        \"get\": function()   { return this.scale.y; },\n        \"set\": function(v)  { this.scale.y = v; }\n      },\n      \n      /**\n       * @property    width\n       * width\n       */\n      width: {\n        \"get\": function()   {\n          return (this.boundingType === 'rect') ?\n            this._width : this._diameter;\n        },\n        \"set\": function(v)  { this._width = v; }\n      },\n      /**\n       * @property    height\n       * height\n       */\n      height: {\n        \"get\": function()   {\n          return (this.boundingType === 'rect') ?\n            this._height : this._diameter;\n        },\n        \"set\": function(v)  { this._height = v; }\n      },\n\n      /**\n       * @property    radius\n       * 半径\n       */\n      radius: {\n        \"get\": function()   {\n          return (this.boundingType === 'rect') ?\n            (this.width+this.height)/4 : this._radius;\n        },\n        \"set\": function(v)  {\n          this._radius = v;\n          this._diameter = v*2;\n        },\n      },\n      \n      /**\n       * @property    top\n       * 左\n       */\n      top: {\n        \"get\": function()   { return this.y - this.height*this.originY; },\n        \"set\": function(v)  { this.y = v + this.height*this.originY; },\n      },\n   \n      /**\n       * @property    right\n       * 左\n       */\n      right: {\n        \"get\": function()   { return this.x + this.width*(1-this.originX); },\n        \"set\": function(v)  { this.x = v - this.width*(1-this.originX); },\n      },\n   \n      /**\n       * @property    bottom\n       * 左\n       */\n      bottom: {\n        \"get\": function()   { return this.y + this.height*(1-this.originY); },\n        \"set\": function(v)  { this.y = v - this.height*(1-this.originY); },\n      },\n   \n      /**\n       * @property    left\n       * 左\n       */\n      left: {\n        \"get\": function()   { return this.x - this.width*this.originX; },\n        \"set\": function(v)  { this.x = v + this.width*this.originX; },\n      },\n\n      /**\n       * @property    centerX\n       * centerX\n       */\n      centerX: {\n        \"get\": function()   { return this.x + this.width/2 - this.width*this.originX; },\n        \"set\": function(v)  {\n          // TODO: どうしようかな??\n        }\n      },\n   \n      /**\n       * @property    centerY\n       * centerY\n       */\n      centerY: {\n        \"get\": function()   { return this.y + this.height/2 - this.height*this.originY; },\n        \"set\": function(v)  {\n          // TODO: どうしようかな??\n        }\n      },\n    },\n    _static: {\n      defaults: {\n        x: 0,\n        y: 0,\n        scaleX: 1,\n        scaleY: 1,\n        rotation: 0,\n        originX: 0.5,\n        originY: 0.5,\n        \n        width: 64,\n        height: 64,\n        radius: 32,\n        boundingType: 'rect',\n      },\n    },\n\n  });\n\n  \n});\n\nphina.namespace(function() {\n\n\n  phina.define('phina.app.Scene', {\n    superClass: 'phina.app.Element',\n\n    init: function() {\n      this.superInit();\n    },\n\n    exit: function(nextLabel, nextArguments) {\n      if (!this.app) return ;\n\n      if (arguments.length > 0) {\n        if (typeof arguments[0] === 'object') {\n          nextLabel = arguments[0].nextLabel || this.nextLabel;\n          nextArguments = arguments[0];\n        }\n\n        this.nextLabel = nextLabel;\n        this.nextArguments = nextArguments;\n      }\n\n      this.app.popScene();\n\n      return this;\n    },\n  });\n  \n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.accessory.Accessory\n   */\n  phina.define('phina.accessory.Accessory', {\n    superClass: 'phina.util.EventDispatcher',\n\n    /**\n     * @constructor\n     */\n    init: function(target) {\n      this.superInit();\n\n      this.target = target;\n    },\n    setTarget: function(target) {\n      if (this.target === target) return ;\n\n      this.target = target;\n      return this;\n    },\n    getTarget: function() {\n      return this.target;\n    },\n    isAttached: function() {\n      return !!this.target;\n    },\n    attachTo: function(element) {\n      element.attach(this);\n      this.setTarget(element);\n      return this;\n    },\n    remove: function() {\n      this.target.detach(this);\n      this.target = null;\n    },\n  });\n\n  phina.app.Element.prototype.$method('attach', function(accessory) {\n    if (!this.accessories) {\n      this.accessories = [];\n      this.on('enterframe', function(e) {\n        this.accessories.each(function(accessory) {\n          accessory.update && accessory.update(e.app);\n        });\n      });\n    }\n\n    this.accessories.push(accessory);\n    accessory.setTarget(this);\n    accessory.flare('attached');\n\n    return this;\n  });\n\n  phina.app.Element.prototype.$method('detach', function(accessory) {\n    if (this.accessories) {\n      this.accessories.erase(accessory);\n      accessory.setTarget(null);\n      accessory.flare('detached');\n    }\n\n    return this;\n  });\n\n});\n\n\n\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.accessory.Tweener\n   * Tweener\n   */\n  var Tweener = phina.define('phina.accessory.Tweener', {\n    superClass: 'phina.accessory.Accessory',\n\n    updateType: 'normal',\n\n    /**\n     * @constructor\n     */\n    init: function(target) {\n      this.superInit(target);\n\n      this._init();\n    },\n\n    _init: function() {\n      this._loop = false;\n      this._tasks = [];\n      this._index = 0;\n      this.playing = true;\n      this._update = this._updateTask;\n    },\n\n    update: function(app) {\n      this._update(app);\n    },\n\n    setUpdateType: function(type) {\n      this.updateType = type;\n      return this;\n    },\n\n    to: function(props, duration, easing) {\n      this._add({\n        type: 'tween',\n        mode: 'to',\n        props: props,\n        duration: duration,\n        easing: easing,\n      });\n      return this;\n    },\n\n    by: function(props, duration, easing) {\n      this._add({\n        type: 'tween',\n        mode: 'by',\n        props: props,\n        duration: duration,\n        easing: easing,\n      });\n\n      return this;\n    },\n\n    from: function(props, duration, easing) {\n      this._add({\n        type: 'tween',\n        mode: 'from',\n        props: props,\n        duration: duration,\n        easing: easing,\n      });\n      return this;\n    },\n\n    wait: function(time) {\n      this._add({\n        type: 'wait',\n        data: {\n          limit: time,\n        },\n      });\n      return this;\n    },\n\n    call: function(func, self, args) {\n      this._add({\n        type: 'call',\n        data: {\n          func: func,\n          self: self || this,\n          args: args,\n        },\n      });\n      return this;\n    },\n\n    /**\n     * プロパティをセット\n     * @param {Object} key\n     * @param {Object} value\n     */\n    set: function(key, value) {\n      var values = null;\n      if (arguments.length == 2) {\n        values = {};\n        values[key] = value;\n      }\n      else {\n        values = key;\n      }\n      this._tasks.push({\n        type: \"set\",\n        data: {\n          values: values\n        }\n      });\n\n      return this;\n    },\n\n    moveTo: function(x, y, duration, easing) {\n      return this.to({ x: x, y: y }, duration, easing);\n    },\n    moveBy: function(x, y, duration, easing) {\n      return this.by({ x: x, y: y }, duration, easing);\n    },\n\n    rotateTo: function(rotation, duration, easing) {\n      return this.to({ rotation: rotation }, duration, easing);\n    },\n    rotateBy: function(rotation, duration, easing) {\n      return this.by({ rotation: rotation }, duration, easing);\n    },\n\n    scaleTo: function(scale, duration, easing) {\n      return this.to({ scaleX: scale, scaleY: scale }, duration, easing);\n    },\n    scaleBy: function(scale, duration, easing) {\n      return this.by({ scaleX: scale, scaleY: scale }, duration, easing);\n    },\n\n    fade: function(value, duration, easing) {\n      return this.to({ alpha: value }, duration, easing);\n    },\n\n    fadeOut: function(duration, easing) {\n      return this.fade(0.0, duration, easing);\n    },\n\n    fadeIn: function(duration, easing) {\n      return this.fade(1.0, duration, easing);\n    },\n\n    /**\n     * アニメーション開始\n     */\n    play: function() {\n      this.playing = true;\n      return this;\n    },\n\n    /**\n     * アニメーションを一時停止\n     */\n    pause: function() {\n      this.playing = false;\n      return this;\n    },\n\n    stop: function() {\n      this.playing = false;\n      this.rewind();\n      return this;\n    },\n\n    /**\n     * アニメーションを巻き戻す\n     */\n    rewind: function() {\n      this._update = this._updateTask;\n      this._index = 0;\n      return this;\n    },\n\n    yoyo: function() {\n      // TODO: 最初の値が分からないので反転できない...\n      this._update = this._updateTask;\n      this._index = 0;\n      this._tasks.each(function(task) {\n        if (task.type === 'tween') {\n\n        }\n      });\n      this.play();\n\n      return this;\n    },\n\n    /**\n     * アニメーションループ設定\n     * @param {Boolean} flag\n     */\n    setLoop: function(flag) {\n      this._loop = flag;\n      return this;\n    },\n\n    /**\n     * アニメーションをクリア\n     */\n    clear: function() {\n      this._init();\n      return this;\n    },\n\n    fromJSON: function(json) {\n      if (json.loop !== undefined) {\n        this.setLoop(json.loop);\n      }\n\n      json.tweens.each(function(t) {\n        t = t.clone();\n        var method = t.shift();\n        this[method].apply(this, t);\n      }, this);\n\n      return this;\n    },\n\n    _add: function(params) {\n      this._tasks.push(params);\n    },\n\n    _updateTask: function(app) {\n      if (!this.playing) return ;\n\n      var task = this._tasks[this._index];\n      if (!task) {\n        if (this._loop) {\n          this.rewind();\n          this._update(app);\n        }\n        else {\n          this.playing = false;\n        }\n        return ;\n      }\n      else {\n        ++this._index;\n      }\n\n      if (task.type === 'tween') {\n        this._tween = phina.util.Tween();\n\n        var duration = task.duration || this._getDefaultDuration();\n        if (task.mode === 'to') {\n          this._tween.to(this.target, task.props, duration, task.easing);\n        }\n        else if (task.mode === 'by') {\n          this._tween.by(this.target, task.props, duration, task.easing);\n        }\n        else {\n          this._tween.from(this.target, task.props, duration, task.easing);\n        }\n        this._update = this._updateTween;\n        this._update(app);\n      }\n      else if (task.type === 'wait') {\n        this._wait = {\n          time: 0,\n          limit: task.data.limit,\n        };\n\n        this._update = this._updateWait;\n        this._update(app);\n      }\n      else if (task.type === 'call') {\n        task.data.func.apply(task.data.self, task.data.args);\n        // 1フレーム消費しないよう再帰\n        this._update(app);\n      }\n      else if (task.type === 'set') {\n        this.target.$extend(task.data.values);\n        // 1フレーム消費しないよう再帰\n        this._update(app);\n      }\n    },\n\n    _updateTween: function(app) {\n      var tween = this._tween;\n      var time = this._getUnitTime(app);\n\n      tween.forward(time);\n      this.flare('tween');\n\n      if (tween.time >= tween.duration) {\n        delete this._tween;\n        this._tween = null;\n        this._update = this._updateTask;\n      }\n    },\n\n    _updateWait: function(app) {\n      var wait = this._wait;\n      var time = this._getUnitTime(app);\n      wait.time += time;\n\n      if (wait.time >= wait.limit) {\n        delete this._wait;\n        this._wait = null;\n        this._update = this._updateTask;\n      }\n    },\n\n    _getUnitTime: function(app) {\n      var obj = UPDATE_MAP[this.updateType];\n      if (obj) {\n        return obj.func(app);\n      }\n      else {\n        return 1000 / app.fps;\n      }\n    },\n\n    _getDefaultDuration: function() {\n      var obj = UPDATE_MAP[this.updateType];\n      return obj && obj.duration;\n    },\n\n    _static: {\n      UPDATE_MAP: {\n        normal: {\n          func: function(app) {\n            return 1000 / app.fps;\n          },\n          duration: 1000,\n        },\n\n        delta: {\n          func: function(app) {\n            return app.ticker.deltaTime;\n          },\n          duration: 1000,\n        },\n\n        fps: {\n          func: function(app) {\n            return 1;\n          },\n          duration: 30,\n        },\n\n      }\n    }\n  });\n\n  var UPDATE_MAP = Tweener.UPDATE_MAP;\n\n  phina.app.Element.prototype.getter('tweener', function() {\n    if (!this._tweener) {\n      this._tweener = phina.accessory.Tweener().attachTo(this);\n    }\n    return this._tweener;\n  });\n  \n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.accessory.Draggable\n   * Draggable\n   */\n  phina.define('phina.accessory.Draggable', {\n    superClass: 'phina.accessory.Accessory',\n\n    /**\n     * @constructor\n     */\n    init: function(target) {\n      this.superInit(target);\n\n      this.initialPosition = phina.geom.Vector2(0, 0);\n      var self = this;\n\n      this.on('attached', function() {\n        this.target.setInteractive(true);\n\n        this._dragging = false;\n\n        this.target.on('pointstart', function(e) {\n          if (phina.accessory.Draggable._lock) return ;\n\n          this._dragging = true;\n          self.initialPosition.x = this.x;\n          self.initialPosition.y = this.y;\n          self.flare('dragstart');\n          this.flare('dragstart');\n        });\n        this.target.on('pointmove', function(e) {\n          if (!this._dragging) return ;\n\n          this.x += e.pointer.dx;\n          this.y += e.pointer.dy;\n          self.flare('drag');\n          this.flare('drag');\n        });\n\n        this.target.on('pointend', function(e) {\n          if (!this._dragging) return ;\n\n          this._dragging = false;\n          self.flare('dragend');\n          this.flare('dragend');\n        });\n      });\n    },\n\n    back: function(time, easing) {\n      if (time) {\n        var t = this.target;\n        t.setInteractive(false);\n        var tweener = phina.accessory.Tweener().attachTo(t);\n        tweener\n          .to({\n            x: this.initialPosition.x,\n            y: this.initialPosition.y,\n          }, time, easing || 'easeOutElastic')\n          .call(function() {\n            tweener.remove();\n\n            t.setInteractive(true);\n            this.flare('backend');\n          }, this);\n      }\n      else {\n        this.target.x = this.initialPosition.x;\n        this.target.y = this.initialPosition.y;\n        this.flare('backend');\n      }\n    },\n\n    enable: function() {\n      this._enable = true;\n    },\n\n    _static: {\n      _lock: false,\n      lock: function() {\n        this._lock = true;\n      },\n      unlock: function() {\n        this._lock = false;\n      },\n    }\n\n  });\n\n  phina.app.Element.prototype.getter('draggable', function() {\n    if (!this._draggable) {\n      this._draggable = phina.accessory.Draggable().attachTo(this);\n    }\n    return this._draggable;\n  });\n  \n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.accessory.Flickable\n   * Flickable\n   */\n  phina.define('phina.accessory.Flickable', {\n    superClass: 'phina.accessory.Accessory',\n\n    /**\n     * @constructor\n     */\n    init: function(target) {\n      this.superInit(target);\n\n      this.initialPosition = phina.geom.Vector2(0, 0);\n      var self = this;\n\n      this.friction = 0.9;\n      this.velocity = phina.geom.Vector2(0, 0);\n      this.vertical = true;\n      this.horizontal = true;\n\n      this.cacheList = [];\n\n      this.on('attached', function() {\n        this.target.setInteractive(true);\n\n        this.target.on('pointstart', function(e) {\n          self.initialPosition.set(this.x, this.y);\n          self.velocity.set(0, 0);\n        });\n        this.target.on('pointstay', function(e) {\n          if (self.horizontal) {\n            this.x += e.pointer.dx;\n          }\n          if (self.vertical) {\n            this.y += e.pointer.dy;\n          }\n\n          if (self.cacheList.length > 3) self.cacheList.shift();\n          self.cacheList.push(e.pointer.deltaPosition.clone());\n        });\n\n        this.target.on('pointend', function(e) {\n          // 動きのある delta position を後ろから検索　\n          var delta = self.cacheList.reverse().find(function(v) {\n            return v.lengthSquared() > 10;\n          });\n          self.cacheList.clear();\n\n          if (delta) {\n            self.velocity.x = delta.x;\n            self.velocity.y = delta.y;\n\n            self.flare('flickstart', {\n              direction: delta.normalize(),\n            });\n          }\n          else {\n            self.flare('flickcancel');\n          }\n\n          // self.flare('flick');\n          // self.flare('flickend');\n        });\n      });\n    },\n\n    update: function() {\n      if (!this.target) return ;\n\n      this.velocity.x *= this.friction;\n      this.velocity.y *= this.friction;\n\n      if (this.horizontal) {\n        this.target.position.x += this.velocity.x;\n      }\n      if (this.vertical) {\n        this.target.position.y += this.velocity.y;\n      }\n    },\n\n    cancel: function() {\n      this.target.x = this.initialPosition.x;\n      this.target.y = this.initialPosition.y;\n      this.velocity.set(0, 0);\n\n      // TODO: \n      // this.setInteractive(false);\n      // this.tweener.clear()\n      //     .move(this.initialX, this.initialY, 500, \"easeOutElastic\")\n      //     .call(function () {\n      //         this.setInteractive(true);\n      //         this.fire(tm.event.Event(\"backend\"));\n      //     }.bind(this));\n    },\n\n    enable: function() {\n      this._enable = true;\n    },\n\n  });\n\n  phina.app.Element.prototype.getter('flickable', function() {\n    if (!this._flickable) {\n      this._flickable = phina.accessory.Flickable().attachTo(this);\n    }\n    return this._flickable;\n  });\n  \n});\n/*\n * frameanimation.js\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.accessory.FrameAnimation\n   * FrameAnimation\n   */\n  phina.define('phina.accessory.FrameAnimation', {\n    superClass: 'phina.accessory.Accessory',\n\n    /**\n     * @constructor\n     */\n    init: function(ss) {\n      this.superInit();\n\n      this.ss = phina.asset.AssetManager.get('spritesheet', ss);\n      this.paused = true;\n      this.finished = false;\n      this.fit = true;\n    },\n\n    update: function() {\n      if (this.paused) return ;\n      if (!this.currentAnimation) return ;\n\n      if (this.finished) {\n        this.finished = false;\n        this.currentFrameIndex = 0;\n        return ;\n      }\n\n      ++this.frame;\n      if (this.frame%this.currentAnimation.frequency === 0) {\n        ++this.currentFrameIndex;\n        this._updateFrame();\n      }\n    },\n\n    gotoAndPlay: function(name) {\n      this.frame = 0;\n      this.currentFrameIndex = 0;\n      this.currentAnimation = this.ss.getAnimation(name);\n      this._updateFrame();\n\n      this.paused = false;\n\n      return this;\n    },\n\n    gotoAndStop: function(name) {\n      this.frame = 0;\n      this.currentFrameIndex = 0;\n      this.currentAnimation = this.ss.getAnimation(name);\n      this._updateFrame();\n\n      this.paused = true;\n\n      return this;\n    },\n\n    _updateFrame: function() {\n      var anim = this.currentAnimation;\n      if (anim) {\n        if (this.currentFrameIndex >= anim.frames.length) {\n          if (anim.next) {\n            this.gotoAndPlay(anim.next);\n            return ;\n          }\n          else {\n            this.paused = true;\n            this.finished = true;\n            return ;\n          }\n        }\n      }\n\n      var index = anim.frames[this.currentFrameIndex];\n      var frame = this.ss.getFrame(index);\n      this.target.srcRect.set(frame.x, frame.y, frame.width, frame.height);\n\n      if (this.fit) {\n        this.target.width = frame.width;\n        this.target.height = frame.height;\n      }\n    },\n  });\n});\n/*\n *\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.accessory.Physical\n   * 本物ではないので名前変えるかも*\n   * FakePhysical or MarioPhysical or LiePhysical\n   * RetroPysical or PysicaLike\n   */\n  phina.define('phina.accessory.Physical', {\n    superClass: 'phina.accessory.Accessory',\n\n    /**\n     * @constructor\n     */\n    init: function(target) {\n      this.superInit(target);\n\n      this.velocity = phina.geom.Vector2(0, 0);\n      this.gravity = phina.geom.Vector2(0, 0);\n\n      this.friction = 1.0;\n    },\n\n    update: function() {\n      var t = this.target;\n\n      this.velocity.x *= this.friction;\n      this.velocity.y *= this.friction;\n\n      this.velocity.x += this.gravity.x;\n      this.velocity.y += this.gravity.y;\n\n      t.position.x += this.velocity.x;\n      t.position.y += this.velocity.y;\n    },\n\n    force: function(x, y) {\n      this.velocity.set(x, y);\n      return this;\n    },\n\n    addForce: function(x, y) {\n      this.velocity.x += x;\n      this.velocity.y += y;\n      return this;\n    },\n\n    setGravity: function(x, y) {\n      this.gravity.set(x, y);\n      return this;\n    },\n\n    setFriction: function(fr) {\n      this.friction = fr;\n      return this;\n    },\n  });\n\n  phina.app.Element.prototype.getter('physical', function() {\n    if (!this._physical) {\n      this._physical = phina.accessory.Physical().attachTo(this);\n    }\n    return this._physical;\n  });\n\n\n});\n\n\n\n\n\n(function() {\n\n  if (!phina.global.Event) return ;\n\n  /**\n   * @class global.Event\n   * 既存のEventオブジェクト拡張\n   */\n    \n  /**\n   * @method stop\n   * イベントのデフォルト処理 & 伝達を止める\n   */\n  Event.prototype.stop = function() {\n    // イベントキャンセル\n    this.preventDefault();\n    // イベント伝達を止める\n    this.stopPropagation();\n  };\n\n})();\n\n(function() {\n\n  if (!phina.global.MouseEvent) return ;\n\n  /**\n   * @class global.MouseEvent\n   * MouseEvent クラス\n   */\n  \n  /**\n   * @method    pointX\n   * マウスのX座標.\n   */\n  MouseEvent.prototype.getter(\"pointX\", function() {\n    return this.clientX - this.target.getBoundingClientRect().left;\n    // return this.pageX - this.target.getBoundingClientRect().left - window.scrollX;\n  });\n  \n  /**\n   * @method    pointY\n   * マウスのY座標.\n   */\n  MouseEvent.prototype.getter(\"pointY\", function() {\n    return this.clientY - this.target.getBoundingClientRect().top;\n    // return this.pageY - this.target.getBoundingClientRect().top - window.scrollY;\n  });\n    \n})();\n\n\n(function() {\n    \n  if (!phina.global.TouchEvent) return ;\n  \n  \n  /**\n   * @class global.TouchEvent\n   * TouchEvent クラス\n   */\n  \n  /**\n   * @method    pointX\n   * タッチイベント.\n   */\n  TouchEvent.prototype.getter(\"pointX\", function() {\n      return this.touches[0].clientX - this.target.getBoundingClientRect().left;\n      // return this.touches[0].pageX - this.target.getBoundingClientRect().left - tm.global.scrollX;\n  });\n  \n  /**\n   * @method    pointY\n   * タッチイベント.\n   */\n  TouchEvent.prototype.getter(\"pointY\", function() {\n      return this.touches[0].clientY - this.target.getBoundingClientRect().top;\n      // return this.touches[0].pageY - this.target.getBoundingClientRect().top - tm.global.scrollY;\n  });  \n    \n})();\n\n\n(function() {\n    \n  if (!phina.global.Touch) return ;\n  \n  /**\n   * @class global.Touch\n   * TouchEvent クラス\n   */\n  \n  /**\n   * @method    pointX\n   * タッチイベント.\n   */\n  Touch.prototype.getter(\"pointX\", function() {\n      return this.clientX - this.target.getBoundingClientRect().left;\n  });\n\n  /**\n   * @method    pointY\n   * タッチイベント.\n   */\n  Touch.prototype.getter(\"pointY\", function() {\n      return this.clientY - this.target.getBoundingClientRect().top;\n  });\n    \n})();\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.graphics.Canvas\n   * キャンバス拡張クラス\n   */\n  phina.define('phina.graphics.Canvas', {\n    domElement: null,\n    canvas: null,\n    context: null,\n\n    /**\n     * 初期化\n     */\n    init: function(canvas) {\n      if (typeof canvas === 'string') {\n        this.canvas = document.querySelector(canvas);\n      }\n      else {\n        this.canvas = canvas || document.createElement('canvas');\n      }\n\n      this.domElement = this.canvas;\n      this.context = this.canvas.getContext('2d');\n      this.context.lineCap = 'round';\n      this.context.lineJoin = 'round';\n    },\n\n    /**\n     * サイズをセット\n     */\n    setSize: function(width, height) {\n      this.canvas.width   = width;\n      this.canvas.height  = height;\n      return this;\n    },\n\n    setSizeToScreen: function() {\n      this.canvas.style.position  = \"fixed\";\n      this.canvas.style.margin    = \"0px\";\n      this.canvas.style.padding   = \"0px\";\n      this.canvas.style.left      = \"0px\";\n      this.canvas.style.top       = \"0px\";\n      return this.setSize(window.innerWidth, window.innerHeight);\n    },\n\n    fitScreen: function(isEver) {\n      isEver = isEver === undefined ? true : isEver;\n\n      var _fitFunc = function() {\n        var e = this.domElement;\n        var s = e.style;\n        \n        s.position = \"absolute\";\n        s.margin = \"auto\";\n        s.left = \"0px\";\n        s.top  = \"0px\";\n        s.bottom = \"0px\";\n        s.right = \"0px\";\n\n        var rateWidth = e.width/window.innerWidth;\n        var rateHeight= e.height/window.innerHeight;\n        var rate = e.height/e.width;\n        \n        if (rateWidth > rateHeight) {\n          s.width  = Math.floor(innerWidth)+\"px\";\n          s.height = Math.floor(innerWidth*rate)+\"px\";\n        }\n        else {\n          s.width  = Math.floor(innerHeight/rate)+\"px\";\n          s.height = Math.floor(innerHeight)+\"px\";\n        }\n      }.bind(this);\n      \n      // 一度実行しておく\n      _fitFunc();\n\n      // リサイズ時のリスナとして登録しておく\n      if (isEver) {\n        phina.global.addEventListener(\"resize\", _fitFunc, false);\n      }\n    },\n\n    /**\n     * クリア\n     */\n    clear: function(x, y, width, height) {\n      x = x || 0;\n      y = y || 0;\n      width = width || this.width;\n      height= height|| this.height;\n      this.context.clearRect(x, y, width, height);\n      return this;\n    },\n\n    clearColor: function(fillStyle, x, y, width, height) {\n      x = x || 0;\n      y = y || 0;\n      width = width || this.width;\n      height= height|| this.height;\n\n      var context = this.context;\n\n      context.save();\n      context.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0); // 行列初期化\n      context.fillStyle = fillStyle;     // 塗りつぶしスタイルセット\n      context.fillRect(x, y, width, height);\n      context.restore();\n\n      return this;\n    },\n\n\n    /**\n     * パスを開始(リセット)\n     */\n    beginPath: function() {\n      this.context.beginPath();\n      return this;\n    },\n\n    /**\n     *  パスを閉じる\n     */\n    closePath: function() {\n      this.context.closePath();\n      return this;\n    },\n\n\n    /**\n     *  新規パス生成\n     */\n    moveTo: function(x, y) {\n      this.context.moveTo(x, y);\n      return this;\n    },\n\n    /**\n     * パスに追加\n     */\n    lineTo: function(x, y) {\n      this.context.lineTo(x, y);\n      return this;\n    },\n\n    quadraticCurveTo: function() {\n      this.context.quadraticCurveTo.apply(this.context, arguments);\n      return this;\n    },\n\n    bezierCurveTo: function() {\n      this.context.bezierCurveTo.apply(this.context, arguments);\n      return this;\n    },\n\n    /**\n     * パス内を塗りつぶす\n     */\n    fill: function() {\n      this.context.fill();\n      return this;\n    },\n\n    /**\n     * パス上にラインを引く\n     */\n    stroke: function() {\n      this.context.stroke();\n      return this;\n    },\n\n    /**\n     * クリップ\n     */\n    clip: function() {\n      this.context.clip();\n      return this;\n    },\n\n        \n    /**\n     * 点描画\n     */\n    drawPoint: function(x, y) {\n      return this.strokeRect(x, y, 1, 1);\n    },\n\n    /**\n     * ラインパスを作成\n     */\n    line: function(x0, y0, x1, y1) {\n      return this.moveTo(x0, y0).lineTo(x1, y1);\n    },\n    \n    /**\n     * ラインを描画\n     */\n    drawLine: function(x0, y0, x1, y1) {\n      return this.beginPath().line(x0, y0, x1, y1).stroke();\n    },\n\n    /**\n     * ダッシュラインを描画\n     */\n    drawDashLine: function(x0, y0, x1, y1, pattern) {\n      var patternTable = null;\n      if (typeof(pattern) == \"string\") {\n        patternTable = pattern;\n      }\n      else {\n        pattern = pattern || 0xf0f0;\n        patternTable = pattern.toString(2);\n      }\n      patternTable = patternTable.padding(16, '1');\n      \n      var vx = x1-x0;\n      var vy = y1-y0;\n      var len = Math.sqrt(vx*vx + vy*vy);\n      vx/=len; vy/=len;\n      \n      var x = x0;\n      var y = y0;\n      for (var i=0; i<len; ++i) {\n        if (patternTable[i%16] == '1') {\n          this.drawPoint(x, y);\n          // this.fillRect(x, y, this.context.lineWidth, this.context.lineWidth);\n        }\n        x += vx;\n        y += vy;\n      }\n      \n      return this;\n    },\n\n    /**\n     * v0(x0, y0), v1(x1, y1) から角度を求めて矢印を描画\n     * http://hakuhin.jp/as/rotation.html\n     */\n    drawArrow: function(x0, y0, x1, y1, arrowRadius) {\n      var vx = x1-x0;\n      var vy = y1-y0;\n      var angle = Math.atan2(vy, vx)*180/Math.PI;\n      \n      this.drawLine(x0, y0, x1, y1);\n      this.fillPolygon(x1, y1, arrowRadius || 5, 3, angle);\n      \n      return this;\n    },\n\n\n    /**\n     * lines\n     */\n    lines: function() {\n      this.moveTo(arguments[0], arguments[1]);\n      for (var i=1,len=arguments.length/2; i<len; ++i) {\n        this.lineTo(arguments[i*2], arguments[i*2+1]);\n      }\n      return this;\n    },\n\n    /**\n     * ラインストローク描画\n     */\n    strokeLines: function() {\n      this.beginPath();\n      this.lines.apply(this, arguments);\n      this.stroke();\n      return this;\n    },\n\n    /**\n     * ライン塗りつぶし描画\n     */\n    fillLines: function() {\n      this.beginPath();\n      this.lines.apply(this, arguments);\n      this.fill();\n      return this;\n    },\n    \n    /**\n     * 四角形パスを作成する\n     */\n    rect: function(x, y, width, height) {\n      this.context.rect.apply(this.context, arguments);\n      return this;\n    },\n    \n    /**\n     * 四角形塗りつぶし描画\n     */\n    fillRect: function() {\n      this.context.fillRect.apply(this.context, arguments);\n      return this;\n    },\n    \n    /**\n     * 四角形ライン描画\n     */\n    strokeRect: function() {\n      this.context.strokeRect.apply(this.context, arguments);\n      return this;\n    },\n    \n    /**\n     * 角丸四角形パス\n     */\n    roundRect: function(x, y, width, height, radius) {\n      var l = x + radius;\n      var r = x + width - radius;\n      var t = y + radius;\n      var b = y + height - radius;\n      \n      /*\n      var ctx = this.context;\n      ctx.moveTo(l, y);\n      ctx.lineTo(r, y);\n      ctx.quadraticCurveTo(x+width, y, x+width, t);\n      ctx.lineTo(x+width, b);\n      ctx.quadraticCurveTo(x+width, y+height, r, y+height);\n      ctx.lineTo(l, y+height);\n      ctx.quadraticCurveTo(x, y+height, x, b);\n      ctx.lineTo(x, t);\n      ctx.quadraticCurveTo(x, y, l, y);\n      /**/\n      \n      this.context.arc(l, t, radius,     -Math.PI, -Math.PI*0.5, false);  // 左上\n      this.context.arc(r, t, radius, -Math.PI*0.5,            0, false);  // 右上\n      this.context.arc(r, b, radius,            0,  Math.PI*0.5, false);  // 右下\n      this.context.arc(l, b, radius,  Math.PI*0.5,      Math.PI, false);  // 左下\n      this.closePath();\n      \n      return this;\n    },\n\n    /**\n     * 角丸四角形塗りつぶし\n     */\n    fillRoundRect: function(x, y, width, height, radius) {\n      return this.beginPath().roundRect(x, y, width, height, radius).fill();\n    },\n\n    /**\n     * 角丸四角形ストローク描画\n     */\n    strokeRoundRect: function(x, y, width, height, radius) {\n      return this.beginPath().roundRect(x, y, width, height, radius).stroke();\n    },\n\n    /**\n     * 円のパスを設定\n     */\n    circle: function(x, y, radius) {\n      this.context.arc(x, y, radius, 0, Math.PI*2, false);\n      return this;\n    },\n    \n    /**\n     * 塗りつぶし円を描画\n     */\n    fillCircle: function(x, y, radius) {\n      var c = this.context;\n      c.beginPath();\n      c.arc(x, y, radius, 0, Math.PI*2, false);\n      c.closePath();\n      c.fill();\n      return this;\n    },\n    \n    /**\n     * ストローク円を描画\n     */\n    strokeCircle: function(x, y, radius) {\n      var c = this.context;\n      c.beginPath();\n      c.arc(x, y, radius, 0, Math.PI*2, false);\n      c.closePath();\n      c.stroke();\n      return this;\n    },\n\n    /**\n     * 円弧のパスを設定\n     */\n    arc: function(x, y, radius, startAngle, endAngle, anticlockwise) {\n      this.context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n      return this;\n    },\n    \n    /**\n     * 塗りつぶし円弧を描画\n     */\n    fillArc: function(x, y, radius, startAngle, endAngle, anticlockwise) {\n      return this.beginPath().arc(x, y, radius, startAngle, endAngle, anticlockwise).fill();\n    },\n    \n    /**\n     * ストローク円弧を描画\n     */\n    strokeArc: function(x, y, radius, startAngle, endAngle, anticlockwise) {\n      return this.beginPath().arc(x, y, radius, startAngle, endAngle, anticlockwise).stroke();\n    },\n\n\n    pie: function(x, y, radius, startAngle, endAngle, anticlockwise) {\n      var context = this.context;\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\n      context.closePath();\n      return this;\n    },\n    fillPie: function(x, y, radius, startAngle, endAngle, anticlockwise) {\n      return this.beginPath().pie(x, y, radius, startAngle, endAngle, anticlockwise).fill();\n    },\n    strokePie: function(x, y, radius, startAngle, endAngle, anticlockwise) {\n      return this.beginPath().pie(x, y, radius, startAngle, endAngle, anticlockwise).stroke();\n    },\n\n    \n    /**\n     * ポリゴンパス\n     */\n    polygon: function(x, y, size, sides, offsetAngle) {\n      var radDiv = (Math.PI*2)/sides;\n      var radOffset = (offsetAngle!==undefined) ? offsetAngle*Math.PI/180 : -Math.PI/2;\n      \n      this.moveTo(x + Math.cos(radOffset)*size, y + Math.sin(radOffset)*size);\n      for (var i=1; i<sides; ++i) {\n        var rad = radDiv*i+radOffset;\n        this.lineTo(\n          x + Math.cos(rad)*size,\n          y + Math.sin(rad)*size\n        );\n      }\n      this.closePath();\n      return this;\n    },\n    /**\n     * ポリゴン塗りつぶし\n     */\n    fillPolygon: function(x, y, radius, sides, offsetAngle) {\n      return this.beginPath().polygon(x, y, radius, sides, offsetAngle).fill();\n    },\n    /**\n     * ポリゴンストローク描画\n     */\n    strokePolygon: function(x, y, radius, sides, offsetAngle) {\n      return this.beginPath().polygon(x, y, radius, sides, offsetAngle).stroke();\n    },\n    \n    /**\n     * star\n     */\n    star: function(x, y, radius, sides, sideIndent, offsetAngle) {\n      var x = x || 0;\n      var y = y || 0;\n      var radius = radius || 64;\n      var sides = sides || 5;\n      var sideIndentRadius = radius * (sideIndent || 0.38);\n      var radOffset = (offsetAngle) ? offsetAngle*Math.PI/180 : -Math.PI/2;\n      var radDiv = (Math.PI*2)/sides/2;\n\n      this.moveTo(\n        x + Math.cos(radOffset)*radius,\n        y + Math.sin(radOffset)*radius\n      );\n      for (var i=1; i<sides*2; ++i) {\n        var rad = radDiv*i + radOffset;\n        var len = (i%2) ? sideIndentRadius : radius;\n        this.lineTo(\n          x + Math.cos(rad)*len,\n          y + Math.sin(rad)*len\n        );\n      }\n      this.closePath();\n\n      return this;\n    },\n\n    /**\n     * 星を塗りつぶし描画\n     */\n    fillStar: function(x, y, radius, sides, sideIndent, offsetAngle) {\n      this.beginPath().star(x, y, radius, sides, sideIndent, offsetAngle).fill();\n      return this;\n    },\n\n    /**\n     * 星をストローク描画\n     */\n    strokeStar: function(x, y, radius, sides, sideIndent, offsetAngle) {\n      this.beginPath().star(x, y, radius, sides, sideIndent, offsetAngle).stroke();\n      return this;\n    },\n\n    /*\n     * heart\n     */\n    heart: function(x, y, radius, angle) {\n      var half_radius = radius*0.5;\n      var rad = (angle === undefined) ? Math.PI/4 : Math.degToRad(angle);\n\n      // 半径 half_radius の角度 angle 上の点との接線を求める\n      var p = Math.cos(rad)*half_radius;\n      var q = Math.sin(rad)*half_radius;\n\n      // 円の接線の方程式 px + qy = r^2 より y = (r^2-px)/q\n      var x2 = -half_radius;\n      var y2 = (half_radius*half_radius-p*x2)/q;\n\n      // 中心位置調整\n      var height = y2 + half_radius;\n      var offsetY = half_radius-height/2;\n\n      // パスをセット\n      this.moveTo(0+x, y2+y+offsetY);\n\n      this.arc(-half_radius+x, 0+y+offsetY, half_radius, Math.PI-rad, Math.PI*2);\n      this.arc(half_radius+x, 0+y+offsetY, half_radius, Math.PI, rad);\n      this.closePath();\n\n      return this;\n    },\n\n    /*\n     * fill heart\n     */\n    fillHeart: function(x, y, radius, angle) {\n      return this.beginPath().heart(x, y, radius, angle).fill();\n    },\n\n    /*\n     * stroke heart\n     */\n    strokeHeart: function(x, y, radius, angle) {\n      return this.beginPath().heart(x, y, radius, angle).stroke();\n    },\n\n    /*\n     * http://stackoverflow.com/questions/14169234/the-relation-of-the-bezier-curve-and-ellipse\n     */\n    ellipse: function(x, y, w, h) {\n      var ctx = this.context;\n      var kappa = 0.5522848;\n\n      var ox = (w / 2) * kappa; // control point offset horizontal\n      var oy = (h / 2) * kappa; // control point offset vertical\n      var xe = x + w;           // x-end\n      var ye = y + h;           // y-end\n      var xm = x + w / 2;       // x-middle\n      var ym = y + h / 2;       // y-middle\n\n      ctx.moveTo(x, ym);\n      ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n      ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n      ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n      ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n      // ctx.closePath();\n\n      return this;\n    },\n\n    fillEllipse: function(x, y, width, height) {\n      return this.beginPath().ellipse(x, y, width, height).fill();\n    },\n    strokeEllipse: function(x, y, width, height) {\n      return this.beginPath().ellipse(x, y, width, height).stroke();\n    },\n\n    /*\n     * 画像を描画\n     */\n    drawImage: function() {\n      this.context.drawImage.apply(this.context, arguments);\n    },\n\n    /**\n     * 行列をセット\n     */\n    setTransform: function(m11, m12, m21, m22, dx, dy) {\n      this.context.setTransform(m11, m12, m21, m22, dx, dy);\n      return this;\n    },\n\n    /**\n     * 行列をリセット\n     */\n    resetTransform: function() {\n      this.setTransform(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);\n      return this;\n    },\n    /**\n     * 中心に移動\n     */\n    transformCenter: function() {\n      this.context.setTransform(1, 0, 0, 1, this.width/2, this.height/2);\n      return this;\n    },\n\n    /**\n     * 移動\n     */\n    translate: function(x, y) {\n      this.context.translate(x, y);\n      return this;\n    },\n    \n    /**\n     * 回転\n     */\n    rotate: function(rotation) {\n      this.context.rotate(rotation);\n      return this;\n    },\n    \n    /**\n     * スケール\n     */\n    scale: function(scaleX, scaleY) {\n      this.context.scale(scaleX, scaleY);\n      return this;\n    },\n\n    /**\n     * 状態を保存\n     */\n    save: function() {\n      this.context.save();\n      return this;\n    },\n\n    /**\n     * 状態を復元\n     */\n    restore: function() {\n      this.context.restore();\n      return this;\n    },\n\n    /**\n     * 画像として保存\n     */\n    saveAsImage: function(mime_type) {\n      mime_type = mime_type || \"image/png\";\n      var data_url = this.canvas.toDataURL(mime_type);\n      // data_url = data_url.replace(mime_type, \"image/octet-stream\");\n      window.open(data_url, \"save\");\n      \n      // toDataURL を使えば下記のようなツールが作れるかも!!\n      // TODO: プログラムで絵をかいて保存できるツール\n    },\n\n\n    _accessor: {\n      /**\n       * 幅\n       */\n      width: {\n        \"get\": function()   { return this.canvas.width; },\n        \"set\": function(v)  { this.canvas.width = v; }\n      },\n\n      /**\n       * 高さ\n       */\n      height: {\n        \"get\": function()   { return this.canvas.height; },\n        \"set\": function(v)  { this.canvas.height = v; }\n      },\n\n      fillStyle: {\n        \"get\": function()   { return this.context.fillStyle; },\n        \"set\": function(v)  { this.context.fillStyle = v; }\n      },\n\n      strokeStyle: {\n        \"get\": function()   { return this.context.strokeStyle; },\n        \"set\": function(v)  { this.context.strokeStyle = v; }\n      },\n\n      globalAlpha: {\n        \"get\": function()   { return this.context.globalAlpha; },\n        \"set\": function(v)  { this.context.globalAlpha = v; }\n      },\n\n      globalCompositeOperation: {\n        \"get\": function()   { return this.context.globalCompositeOperation; },\n        \"set\": function(v)  { this.context.globalCompositeOperation = v; }\n      },\n\n      shadowBlur: {\n        \"get\": function()   { return this.context.shadowBlur; },\n        \"set\": function(v)  { this.context.shadowBlur = v; }\n      },\n\n      shadowColor: {\n        \"get\": function()   { return this.context.shadowColor; },\n        \"set\": function(v)  { this.context.shadowColor = v; }\n      },\n\n      shadowOffsetX: {\n        \"get\": function()   { return this.context.shadowOffsetX; },\n        \"set\": function(v)  { this.context.shadowOffsetX = v; }\n      },\n\n      shadowOffsetY: {\n        \"get\": function()   { return this.context.shadowOffsetY; },\n        \"set\": function(v)  { this.context.shadowOffsetY = v; }\n      },\n\n      lineCap: {\n        \"get\": function()   { return this.context.lineCap; },\n        \"set\": function(v)  { this.context.lineCap = v; }\n      },\n\n      lineJoin: {\n        \"get\": function()   { return this.context.lineJoin; },\n        \"set\": function(v)  { this.context.lineJoin = v; }\n      },\n\n      miterLimit: {\n        \"get\": function()   { return this.context.miterLimit; },\n        \"set\": function(v)  { this.context.miterLimit = v; }\n      },\n\n      lineWidth: {\n        \"get\": function()   { return this.context.lineWidth; },\n        \"set\": function(v)  { this.context.lineWidth = v; }\n      },\n\n      font: {\n        \"get\": function()   { return this.context.font; },\n        \"set\": function(v)  { this.context.font = v; }\n      },\n\n      textAlign: {\n        \"get\": function()   { return this.context.textAlign; },\n        \"set\": function(v)  { this.context.textAlign = v; }\n      },\n\n      textBaseline: {\n        \"get\": function()   { return this.context.textBaseline; },\n        \"set\": function(v)  { this.context.textBaseline = v; }\n      },\n\n      imageSmoothingEnabled: {\n        \"get\": function()   { return this.context.imageSmoothingEnabled; },\n        \"set\": function(v)  {\n          this.context.imageSmoothingEnabled = v;\n          this.context.webkitImageSmoothingEnabled = v;\n          this.context.mozImageSmoothingEnabled = v;\n        }\n      },\n    },\n\n    _static: {\n      _context: (function() {\n        if (phina.util.Support.canvas) {\n          return document.createElement('canvas').getContext('2d');\n        }\n        else {\n          return null;\n        }\n      })(),\n\n      measureText: function(font, text) {\n        this._context.font = font;\n        return this._context.measureText(text);\n      },\n\n      createLinearGradient: function() {\n        return this._context.createLinearGradient.apply(this._context, arguments);\n      },\n    },\n  });\n});\n\n/*\n *\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.graphics.CanvasRecorder\n   * Reference <https://github.com/jnordberg/gif.js/>\n   */\n  phina.define('phina.graphics.CanvasRecorder', {\n\n    superClass: 'phina.util.EventDispatcher',\n\n    _id: null,\n    objectURL: null,\n\n    init: function(canvas, options) {\n      this.superInit();\n\n      this.canvas = canvas;\n\n      this.gif = new GIF((options || {}).$safe({\n        workers: 4,\n        quality: 10,\n        width: canvas.width,\n        height: canvas.height,\n      }));\n\n      this.gif.on('finished', function(blob) {\n        this.objectURL = URL.createObjectURL(blob);\n        this.flare('finished');\n      }.bind(this));\n    },\n\n    /**\n     * key と value はアクセサを参照\n     */\n    setOption: function(key, value) {\n      this.gif.setOption(key, value);\n      return this;\n    },\n\n    /**\n     * key と value はアクセサを参照\n     */\n    setOptions: function(options) {\n      this.gif.setOptions(options);\n      return this;\n    },\n\n    start: function(fps, recordingTime) {\n      fps = fps || 30;\n      recordingTime = recordingTime || 2000;\n      var frameTime = 1000 / fps;\n      var time = 0;\n      this._id = setInterval(function() {\n        var ctx = this.canvas.context;\n        this.gif.addFrame(ctx, {\n          copy: true,\n          delay: frameTime,\n        });\n\n        time += frameTime;\n\n        if (time > recordingTime) {\n          this.stop();\n        }\n      }.bind(this), frameTime);\n\n      return this;\n    },\n\n    stop: function() {\n      if (this._id === null) return this;\n      clearInterval(this._id);\n\n      // レンダリング\n      this.gif.render();\n      this._id = null;\n      return this;\n    },\n\n    open: function() {\n      window.open(this.objectURL);\n    },\n\n    _accessor: {\n\n      width: {\n        get: function() {\n          return this.gif.options.width || this.canvas.width;\n        },\n        set: function(width) {\n          this.setOption('width', width);\n        },\n      },\n\n      height: {\n        get: function() {\n          return this.gif.options.height || this.canvas.height;\n        },\n        set: function(height) {\n          this.setOption('height', height);\n        },\n      },\n\n      // GIF のクオリティ。低いほどハイクオリティ\n      quality: {\n        get: function() {\n          return this.gif.options.quality;\n        },\n        set: function(quality) {\n          this.setOption('quality', quality);\n        },\n      },\n\n      // Worker の URL デフォルトで gif.worker.js\n      workerScript: {\n        get: function() {\n          return this.gif.options.workerScript;\n        },\n        set: function(workerScript) {\n          this.setOption('workerScript', workerScript);\n        },\n      },\n\n      // 起動する Worker の数\n      workers: {\n        get: function() {\n          return this.gif.options.workers;\n        },\n        set: function(workers) {\n          this.setOption('workers', workers);\n        },\n      },\n\n      // ループするか 0 でループ -1 でループしない\n      repeat: {\n        get: function() {\n          return this.gif.options.repeat;\n        },\n        set: function(repeat) {\n          this.setOption('repeat', repeat);\n        },\n      },\n\n      // true で ループ false でループしない\n      loop: {\n        get: function() {\n          return this.gif.options.repeat === 0;\n        },\n        set: function(loop) {\n          this.setOption('repeat', loop ? 0 : -1);\n        },\n      },\n\n      // 透過する色 ? transparent hex color, 0x00FF00 = green\n      transparent: {\n        get: function() {\n          return this.gif.options.transparent;\n        },\n        set: function(transparent) {\n          this.setOption('transparent', transparent);\n        },\n      },\n\n      // background color where source image is transparent\n      background: {\n        get: function() {\n          return this.gif.options.background;\n        },\n        set: function(background) {\n          this.setOption('background', background);\n        },\n      },\n    }\n  });\n\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.DisplayElement\n   * \n   */\n  phina.define('phina.display.DisplayElement', {\n    superClass: 'phina.app.Object2D',\n\n    /** 表示フラグ */\n    visible: true,\n    /** アルファ */\n    alpha: 1.0,\n    /** ブレンドモード */\n    blendMode: \"source-over\",\n\n    /** 子供を 自分のCanvasRenderer で描画するか */\n    renderChildBySelf: false,\n\n    init: function(options) {\n      options = (options || {});\n      \n      this.superInit(options);\n\n      this.visible = true;\n      this.alpha = 1.0;\n      this._worldAlpha = 1.0;\n    },\n\n    /**\n     * 表示/非表示をセット\n     */\n    setVisible: function(flag) {\n      this.visible = flag;\n      return this;\n    },\n\n    /**\n     * 表示\n     */\n    show: function() {\n      this.visible = true;\n      return this;\n    },\n\n    /**\n     * 非表示\n     */\n    hide: function() {\n      this.visible = false;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcWorldAlpha: function() {\n      if (!this.parent) {\n        this._worldAlpha = this.alpha;\n        return ;\n      }\n      else {\n        var worldAlpha = (this.parent._worldAlpha !== undefined) ? this.parent._worldAlpha : 1.0; \n        // alpha\n        this._worldAlpha = worldAlpha * this.alpha;\n      }\n    },\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.PlainElement\n   *\n   */\n  phina.define('phina.display.PlainElement', {\n    superClass: 'phina.display.DisplayElement',\n\n    init: function(options) {\n      this.superInit(options);\n      this.canvas = phina.graphics.Canvas();\n      this.canvas.setSize(this.width, this.height);\n    },\n\n    draw: function(canvas) {\n      var image = this.canvas.domElement;\n      var w = image.width;\n      var h = image.height;\n\n      var x = -w*this.origin.x;\n      var y = -h*this.origin.y;\n\n      canvas.context.drawImage(image,\n        0, 0, w, h,\n        x, y, w, h\n        );\n    },\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.Shape\n   *\n   */\n  var Shape = phina.define('phina.display.Shape', {\n    superClass: 'phina.display.PlainElement',\n\n    init: function(options) {\n      options = ({}).$safe(options, {\n        width: 64,\n        height: 64,\n        padding: 8,\n\n        backgroundColor: '#aaa',\n        fill: '#00a',\n        stroke: '#aaa',\n        strokeWidth: 4,\n\n        shadow: false,\n        shadowBlur: 4,\n      });\n      this.superInit(options);\n\n      this.padding = options.padding;\n\n      this.backgroundColor = options.backgroundColor;\n      this.fill = options.fill;\n      this.stroke = options.stroke;\n      this.strokeWidth = options.strokeWidth;\n\n      this.shadow = options.shadow;\n      this.shadowBlur = options.shadowBlur;\n\n      this.watchDraw = true;\n      this._dirtyDraw = true;\n\n      this.on('enterframe', function() {\n        // render\n        if (this.watchDraw && this._dirtyDraw === true) {\n          this.render(this.canvas);\n          this._dirtyDraw = false;\n        }\n      });\n    },\n\n    calcCanvasWidth: function() {\n      return this.width + this.padding*2;\n    },\n\n    calcCanvasHeight: function() {\n      return this.height + this.padding*2;\n    },\n\n    calcCanvasSize: function () {\n      return {\n        width: this.calcCanvasWidth(),\n        height: this.calcCanvasHeight(),\n      };\n    },\n\n    isStrokable: function() {\n      return this.stroke && 0 < this.strokeWidth;\n    },\n\n    prerender: function(canvas) {\n\n    },\n    postrender: function(canvas) {\n\n    },\n    renderFill: function(canvas) {\n      canvas.fill();\n    },\n    renderStroke: function(canvas) {\n      canvas.stroke();\n    },\n\n    render: function(canvas) {\n      var context = canvas.context;\n      // リサイズ\n      var size = this.calcCanvasSize();\n      canvas.setSize(size.width, size.height);\n      // クリアカラー\n      canvas.clearColor(this.backgroundColor);\n      // 中心に座標を移動\n      canvas.transformCenter();\n\n      // 描画前処理\n      this.prerender(this.canvas);\n\n      // ストローク描画\n      if (this.isStrokable()) {\n        context.strokeStyle = this.stroke;\n        context.lineWidth = this.strokeWidth;\n        context.lineJoin = \"round\";\n        context.shadowBlur = 0;\n        this.renderStroke(canvas);\n      }\n\n      // 塗りつぶし描画\n      if (this.fill) {\n        context.fillStyle = this.fill;\n\n        // shadow の on/off\n        if (this.shadow) {\n          context.shadowColor = this.shadow;\n          context.shadowBlur = this.shadowBlur;\n        }\n        else {\n          context.shadowBlur = 0;\n        }\n\n        this.renderFill(canvas);\n      }\n\n      // 描画後処理\n      this.postrender(this.canvas);\n\n      return this;\n    },\n\n    _static: {\n      watchRenderProperty: function(key) {\n        this.prototype.$watch(key, function(newVal, oldVal) {\n          if (newVal !== oldVal) {\n            this._dirtyDraw = true;\n          }\n        });\n      },\n      watchRenderProperties: function(keys) {\n        var watchRenderProperty = this.watchRenderProperty || Shape.watchRenderProperty;\n        keys.each(function(key) {\n          watchRenderProperty.call(this, key);\n        }, this);\n      },\n    },\n\n    _defined: function() {\n      this.watchRenderProperties([\n        'width',\n        'height',\n        'radius',\n        'padding',\n        'backgroundColor',\n        'fill',\n        'stroke',\n        'strokeWidth',\n        'shadow',\n        'shadowBlur',\n      ]);\n    },\n  });\n\n});\n\nphina.namespace(function() {\n  /**\n   * @class phina.display.RectangleShape\n   *\n   */\n  phina.define('phina.display.RectangleShape', {\n    superClass: 'phina.display.Shape',\n    init: function(options) {\n      options = ({}).$safe(options, {\n        backgroundColor: 'transparent',\n        fill: 'blue',\n        stroke: '#aaa',\n        strokeWidth: 4,\n\n        cornerRadius: 0,\n      });\n      this.superInit(options);\n\n      this.cornerRadius = options.cornerRadius;\n    },\n\n    prerender: function(canvas) {\n      canvas.roundRect(-this.width/2, -this.height/2, this.width, this.height, this.cornerRadius);\n    },\n\n    _defined: function() {\n      phina.display.Shape.watchRenderProperty.call(this, 'cornerRadius');\n    },\n  });\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.CircleShape\n   *\n   */\n  phina.define('phina.display.CircleShape', {\n    superClass: 'phina.display.Shape',\n\n    init: function(options) {\n      options = ({}).$safe(options, {\n        backgroundColor: 'transparent',\n        fill: 'red',\n        stroke: '#aaa',\n        strokeWidth: 4,\n        radius: 32,\n      });\n      this.superInit(options);\n\n      this.setBoundingType('circle');\n    },\n\n    prerender: function(canvas) {\n      canvas.circle(0, 0, this.radius);\n    },\n  });\n});\n\nphina.namespace(function() {\n  /**\n   * @class phina.display.TriangleShape\n   *\n   */\n  phina.define('phina.display.TriangleShape', {\n    superClass: 'phina.display.Shape',\n\n    init: function(options) {\n      options = ({}).$safe(options, {\n        backgroundColor: 'transparent',\n        fill: 'green',\n        stroke: '#aaa',\n        strokeWidth: 4,\n\n        radius: 32,\n      });\n      this.superInit(options);\n\n      this.setBoundingType('circle');\n    },\n\n    prerender: function(canvas) {\n      canvas.polygon(0, 0, this.radius, 3);\n    },\n\n  });\n\n});\n\nphina.namespace(function() {\n  /**\n   * @class phina.display.StarShape\n   *\n   */\n  phina.define('phina.display.StarShape', {\n    superClass: 'phina.display.Shape',\n    init: function(options) {\n      options = ({}).$safe(options, {\n        backgroundColor: 'transparent',\n        fill: 'yellow',\n        stroke: '#aaa',\n        strokeWidth: 4,\n\n        radius: 32,\n        sides: 5,\n        sideIndent: 0.38,\n      });\n      this.superInit(options);\n\n      this.setBoundingType('circle');\n      this.sides = options.sides;\n      this.sideIndent = options.sideIndent;\n    },\n\n    prerender: function(canvas) {\n      canvas.star(0, 0, this.radius, this.sides, this.sideIndent);\n    },\n\n    _defined: function() {\n      phina.display.Shape.watchRenderProperty.call(this, 'sides');\n      phina.display.Shape.watchRenderProperty.call(this, 'sideIndent');\n    },\n  });\n\n});\n\nphina.namespace(function() {\n  /**\n   * @class phina.display.PolygonShape\n   *\n   */\n  phina.define('phina.display.PolygonShape', {\n    superClass: 'phina.display.Shape',\n    init: function(options) {\n      options = ({}).$safe(options, {\n        backgroundColor: 'transparent',\n        fill: 'cyan',\n        stroke: '#aaa',\n        strokeWidth: 4,\n\n        radius: 32,\n        sides: 5,\n      });\n      this.superInit(options);\n\n      this.setBoundingType('circle');\n      this.sides = options.sides;\n    },\n\n    prerender: function(canvas) {\n      canvas.polygon(0, 0, this.radius, this.sides);\n    },\n\n    _defined: function() {\n      phina.display.Shape.watchRenderProperty.call(this, 'sides');\n    },\n  });\n\n});\n\n\nphina.namespace(function() {\n  /**\n   * @class phina.display.HeartShape\n   *\n   */\n  phina.define('phina.display.HeartShape', {\n    superClass: 'phina.display.Shape',\n    init: function(options) {\n      options = ({}).$safe(options, {\n        backgroundColor: 'transparent',\n        fill: 'pink',\n        stroke: '#aaa',\n        strokeWidth: 4,\n\n        radius: 32,\n        cornerAngle: 45,\n      });\n      this.superInit(options);\n\n      this.setBoundingType('circle');\n      this.cornerAngle = options.cornerAngle;\n    },\n\n    prerender: function(canvas) {\n      canvas.heart(0, 0, this.radius, this.cornerAngle);\n    },\n\n    _defined: function() {\n      phina.display.Shape.watchRenderProperty.call(this, 'cornerAngle');\n    },\n  });\n\n});\n\nphina.namespace(function () {\n\n  var PathShape = phina.define('phina.display.PathShape', {\n    superClass: 'phina.display.Shape',\n    paths: null,\n\n    init: function (options) {\n      options = ({}).$safe(options || {}, PathShape.defaults);\n\n      this.superInit(options);\n      this.paths = options.paths || [];\n      this.lineJoin = options.lineJoin;\n      this.lineCap = options.lineCap;\n    },\n    \n    setPaths: function (paths) {\n      this.paths = paths;\n      this._dirtyDraw = true;\n      return this;\n    },\n\n    clear: function () {\n      this.paths.length = 0;\n      this._dirtyDraw = true;\n      return this;\n    },\n\n    addPaths: function (paths) {\n      [].push.apply(this.paths, paths);\n      this._dirtyDraw = true;\n      return this;\n    },\n\n    addPath: function (x, y) {\n      this.paths.push(phina.geom.Vector2(x, y));\n      this._dirtyDraw = true;\n      return this;\n    },\n\n    getPath: function (i) {\n      return this.paths[i];\n    },\n\n    getPaths: function () {\n      return this.paths;\n    },\n\n    changePath: function (i, x, y) {\n      this.paths[i].set(x, y);\n      this._dirtyDraw = true;\n      return this;\n    },\n\n    calcCanvasSize: function () {\n      var paths = this.paths;\n      if (paths.length === 0) {\n        return {\n          width: this.padding * 2,\n          height:this.padding * 2,\n        };\n      }\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var minX = Infinity;\n      var minY = Infinity;\n\n      for (var i = 0, len = paths.length; i < len; ++i) {\n        var path = paths[i];\n        if (maxX < path.x) { maxX = path.x; }\n        if (minX > path.x) { minX = path.x; }\n        if (maxY < path.y) { maxY = path.y; }\n        if (minY > path.y) { minY = path.y; }\n      }\n      return {\n        width: Math.max(Math.abs(maxX), Math.abs(minX)) * 2 + this.padding * 2,\n        height: Math.max(Math.abs(maxY), Math.abs(minY)) * 2 + this.padding * 2,\n      };\n    },\n\n    calcCanvasWidth: function () {\n      return this.calcCanvasSize().width;\n    },\n\n    calcCanvasHeight: function () {\n      return this.calcCanvasSize().height;\n    },\n\n    prerender: function (canvas) {\n      canvas.lineCap = this.lineCap;\n      canvas.lineJoin = this.lineJoin;\n      var paths = this.paths;\n      if (paths.length > 1) {\n        var c = canvas.context;\n        var p = paths[0];\n        c.beginPath();\n        c.moveTo(p.x, p.y);\n        for (var i = 1, len = paths.length; i < len; ++i) {\n          p = paths[i];\n          c.lineTo(p.x, p.y);\n        }\n      }\n    },\n\n    _defined: function () {\n      phina.display.Shape.watchRenderProperties.call(this, [\n        'lineCap',\n        'lineJoin'\n      ]);\n    },\n\n    _static: {\n      defaults: {\n        fill: false,\n        backgroundColor: 'transparent',\n        lineCap: 'round',\n        lineJoin:'round',\n      },\n    }\n\n  });\n\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.Sprite\n   * \n   */\n  phina.define('phina.display.Sprite', {\n    superClass: 'phina.display.DisplayElement',\n\n    init: function(image, width, height) {\n      this.superInit();\n\n      this.srcRect = phina.geom.Rect();\n      this.setImage(image, width, height);\n    },\n\n    draw: function(canvas) {\n      var image = this.image.domElement;\n\n      // canvas.context.drawImage(image,\n      //   0, 0, image.width, image.height,\n      //   -this.width*this.origin.x, -this.height*this.origin.y, this.width, this.height\n      //   );\n\n      var srcRect = this.srcRect;\n      canvas.context.drawImage(image,\n        srcRect.x, srcRect.y, srcRect.width, srcRect.height,\n        -this._width*this.originX, -this._height*this.originY, this._width, this._height\n        );\n    },\n\n    setImage: function(image, width, height) {\n      if (typeof image === 'string') {\n        image = phina.asset.AssetManager.get('image', image);\n      }\n      this._image = image;\n      this.width = this._image.domElement.width;\n      this.height = this._image.domElement.height;\n\n      this.frameIndex = 0;\n\n      if (width) { this.width = width; }\n      if (height) { this.height = height; }\n\n      return this;\n    },\n\n    setFrameIndex: function(index, width, height) {\n      var tw  = width || this._width;      // tw\n      var th  = height || this._height;    // th\n      var row = ~~(this.image.domElement.width / tw);\n      var col = ~~(this.image.domElement.height / th);\n      var maxIndex = row*col;\n      index = index%maxIndex;\n      \n      var x = index%row;\n      var y = ~~(index/row);\n      this.srcRect.x = x*tw;\n      this.srcRect.y = y*th;\n      this.srcRect.width  = tw;\n      this.srcRect.height = th;\n\n      this._frameIndex = index;\n\n      return this;\n    },\n\n    _accessor: {\n      image: {\n        get: function() {return this._image;},\n        set: function(v) {\n          this.setImage(v);\n          return this;\n        }\n      },\n      frameIndex: {\n        get: function() {return this._frameIndex;},\n        set: function(idx) {\n          this.setFrameIndex(idx);\n          return this;\n        }\n      },\n    },\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.Label\n   * \n   */\n  phina.define('phina.display.Label', {\n    superClass: 'phina.display.Shape',\n\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      if (typeof arguments[0] !== 'object') {\n        options = { text: arguments[0], };\n      }\n      else {\n        options = arguments[0];\n      }\n\n      options = ({}).$safe(options, phina.display.Label.defaults);\n\n      this.superInit(options);\n\n      this.text = options.text;\n      this.fontSize = options.fontSize;\n      this.fontWeight = options.fontWeight;\n      this.fontFamily = options.fontFamily;\n      this.align = options.align;\n      this.baseline = options.baseline;\n      this.lineHeight = options.lineHeight;\n    },\n\n    calcCanvasWidth: function() {\n      var width = 0;\n      var canvas = this.canvas;\n      canvas.context.font = this.font;\n      this._lines.forEach(function(line) {\n        var w = canvas.context.measureText(line).width;\n        if (width < w) {\n          width = w;\n        }\n      }, this);\n      if (this.align !== 'center') width*=2;\n\n      return width + this.padding*2;\n    },\n\n    calcCanvasHeight: function() {\n      var height = this.fontSize * this._lines.length;\n      if (this.baseline !== 'middle') height*=2;\n      return height*this.lineHeight + this.padding*2;\n    },\n\n    prerender: function(canvas) {\n      var context = canvas.context;\n      context.font = this.font;\n      context.textAlign = this.align;\n      context.textBaseline = this.baseline;\n\n      var lines = this._lines;\n      this.lineSize = this.fontSize*this.lineHeight;\n      this._offset = -Math.floor(lines.length/2)*this.lineSize;\n      this._offset += ((lines.length+1)%2) * (this.lineSize/2);\n    },\n\n    renderFill: function(canvas) {\n      var context = canvas.context;\n      this._lines.forEach(function(line, i) {\n        context.fillText(line, 0, i*this.lineSize+this._offset);\n      }, this);\n    },\n\n    renderStroke: function(canvas) {\n      var context = canvas.context;\n      this._lines.forEach(function(line, i) {\n        context.strokeText(line, 0, i*this.lineSize+this._offset);\n      }, this);\n    },\n\n    _accessor: {\n      /**\n       * text\n       */\n      text: {\n        get: function() { return this._text; },\n        set: function(v) {\n          this._text = v;\n          this._lines = (this.text + '').split('\\n');\n        },\n      },\n\n      font: {\n        get: function() {\n          return \"{fontWeight} {fontSize}px {fontFamily}\".format(this);\n        },\n      }\n    },\n\n    _static: {\n      defaults: {\n        backgroundColor: 'transparent',\n\n        fill: 'black',\n        stroke: null,\n        strokeWidth: 2,\n\n        // \n        text: 'Hello, world!',\n        // \n        fontSize: 32,\n        fontWeight: '',\n        fontFamily: \"'HiraKakuProN-W3'\", // Hiragino or Helvetica,\n        // \n        align: 'center',\n        baseline: 'middle',\n        lineHeight: 1.2,\n      },\n    },\n\n    _defined: function() {\n      var Shape = phina.display.Shape;\n      Shape.watchRenderProperty.call(this, 'text');\n      Shape.watchRenderProperty.call(this, 'fontSize');\n      Shape.watchRenderProperty.call(this, 'fontWeight');\n      Shape.watchRenderProperty.call(this, 'fontFamily');\n      Shape.watchRenderProperty.call(this, 'align');\n      Shape.watchRenderProperty.call(this, 'baseline');\n      Shape.watchRenderProperty.call(this, 'lineHeight');\n    },\n  });\n\n});\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class\n   */\n  phina.define('phina.display.DisplayScene', {\n    superClass: 'phina.app.Scene',\n\n    init: function(params) {\n      this.superInit();\n\n      params = ({}).$safe(params, phina.display.DisplayScene.default);\n\n      this.canvas = phina.graphics.Canvas();\n      this.canvas.setSize(params.width, params.height);\n      this.renderer = phina.display.CanvasRenderer(this.canvas);\n      this.backgroundColor = (params.backgroundColor) ? params.backgroundColor : null;\n      \n      this.width = params.width;\n      this.height = params.height;\n      this.gridX = phina.util.Grid(params.width, 16);\n      this.gridY = phina.util.Grid(params.height, 16);\n\n      // TODO: 一旦むりやり対応\n      this.interactive = true;\n      this.setInteractive = function(flag) {\n        this.interactive = flag;\n      };\n      this._overFlags = {};\n      this._touchFlags = {};\n    },\n\n    hitTest: function() {\n      return true;\n    },\n\n    _update: function() {\n      if (this.update) {\n        this.update();\n      }\n    },\n\n    _render: function() {\n      this.renderer.render(this);\n    },\n\n    _static: {\n      default: {\n        width: 640,\n        height: 960,\n      },\n    }\n\n  });\n\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.Layer\n   */\n  phina.define('phina.display.Layer', {\n    superClass: 'phina.display.DisplayElement',\n\n    /** 子供を 自分の CanvasRenderer で描画するか */\n    renderChildBySelf: true,\n\n    init: function(options) {\n      options = ({}).$safe(options, {\n        width: 640,\n        height: 960,\n      });\n      this.superInit(options);\n      this.width = options.width;\n      this.height = options.height;\n      this.gridX = phina.util.Grid(options.width, 16);\n      this.gridY = phina.util.Grid(options.height, 16);\n    },\n\n    draw: function(canvas) {\n      if (!this.domElement) return ;\n\n      var image = this.domElement;\n      canvas.context.drawImage(image,\n        0, 0, image.width, image.height,\n        -this.width*this.originX, -this.height*this.originY, this.width, this.height\n        );\n    },\n  });\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.Layer\n   */\n  phina.define('phina.display.CanvasLayer', {\n    superClass: 'phina.display.Layer',\n\n    init: function(options) {\n      this.superInit(options);\n      this.canvas = phina.graphics.Canvas();\n      this.canvas.width  = this.width;\n      this.canvas.height = this.height;\n\n      this.renderer = phina.display.CanvasRenderer(this.canvas);\n      this.domElement = this.canvas.domElement;\n\n      this.on('enterframe', function() {\n        var temp = this._worldMatrix;\n        this._worldMatrix = null;\n        this.renderer.render(this);\n        this._worldMatrix = temp;\n      });\n    },\n\n    draw: function(canvas) {\n      var image = this.domElement;\n      canvas.context.drawImage(image,\n        0, 0, image.width, image.height,\n        -this.width*this.originX, -this.height*this.originY, this.width, this.height\n        );\n    },\n  });\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class\n   */\n  phina.define('phina.display.ThreeLayer', {\n    superClass: 'phina.display.Layer',\n\n    scene: null,\n    camera: null,\n    light: null,\n    renderer: null,\n\n    init: function(options) {\n      this.superInit(options);\n\n      this.scene = new THREE.Scene();\n\n      this.camera = new THREE.PerspectiveCamera( 75, options.width / options.height, 1, 10000 );\n      this.camera.position.z = 1000;\n\n      this.light = new THREE.DirectionalLight( 0xffffff, 1 );\n      this.light.position.set( 1, 1, 1 ).normalize();\n      this.scene.add( this.light );\n\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setClearColor( 0xf0f0f0 );\n      this.renderer.setSize( options.width, options.height );\n\n      this.on('enterframe', function() {\n        this.renderer.render( this.scene, this.camera );\n      });\n\n      this.domElement = this.renderer.domElement;\n    },\n  });\n});\n\n\n\n\nphina.namespace(function() {\n  \n  phina.define('phina.display.CanvasRenderer', {\n\n    init: function(canvas) {\n      this.canvas = canvas;\n      this._context = this.canvas.context;\n    },\n    render: function(scene) {\n      this.canvas.clear();\n      if (scene.backgroundColor) {\n        this.canvas.clearColor(scene.backgroundColor);\n      }\n      \n      this._context.save();\n      this.renderChildren(scene);\n      this._context.restore();\n    },\n    \n    renderChildren: function(obj) {\n      // 子供たちも実行\n      if (obj.children.length > 0) {\n        var tempChildren = obj.children.slice();\n        for (var i=0,len=tempChildren.length; i<len; ++i) {\n          this.renderObject(tempChildren[i]);\n        }\n      }\n    },\n\n    renderObject: function(obj) {\n      if (obj.visible === false) return ;\n\n      obj._calcWorldMatrix && obj._calcWorldMatrix();\n      obj._calcWorldAlpha && obj._calcWorldAlpha();\n\n      var context = this.canvas.context;\n\n      context.globalAlpha = obj._worldAlpha;\n      context.globalCompositeOperation = obj.blendMode;\n\n      if (obj._worldMatrix) {\n        // 行列をセット\n        var m = obj._worldMatrix;\n        context.setTransform( m.m00, m.m10, m.m01, m.m11, m.m02, m.m12 );\n      }\n\n      if (obj.clip) {\n\n        context.save();\n\n        obj.clip(this.canvas);\n        context.clip();\n\n        if (obj.draw) obj.draw(this.canvas);\n\n        // 子供たちも実行\n        if (obj.renderChildBySelf === false && obj.children.length > 0) {\n            var tempChildren = obj.children.slice();\n            for (var i=0,len=tempChildren.length; i<len; ++i) {\n                this.renderObject(tempChildren[i]);\n            }\n        }\n\n        context.restore();\n      }\n      else {\n        if (obj.draw) obj.draw(this.canvas);\n\n        // 子供たちも実行\n        if (obj.renderChildBySelf === false && obj.children.length > 0) {\n          var tempChildren = obj.children.slice();\n          for (var i=0,len=tempChildren.length; i<len; ++i) {\n            this.renderObject(tempChildren[i]);\n          }\n        }\n\n      }\n    },\n\n  });\n\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.DomApp\n   * @extends phina.app.BaseApp\n   */\n  phina.define('phina.display.DomApp', {\n    superClass: 'phina.app.BaseApp',\n\n    domElement: null,\n\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      this.superInit(options);\n\n      if (options.domElement) {\n        this.domElement = options.domElement;\n      }\n      else {\n        if (options.query) {\n          this.domElement = document.querySelector(options.query);\n        }\n        else {\n          console.assert('error');\n        }\n      }\n\n      if (options.fps !== undefined) {\n        this.fps = options.fps;\n      }\n\n      this.mouse = phina.input.Mouse(this.domElement);\n      this.touch = phina.input.Touch(this.domElement);\n      this.touchList = phina.input.TouchList(this.domElement, 5);\n      this.keyboard = phina.input.Keyboard(document);\n      // 加速度センサーを生成\n      this.accelerometer = phina.input.Accelerometer();\n\n      // ポインタをセット(PC では Mouse, Mobile では Touch)\n      this.pointer = this.touch;\n      this.pointers = this.touchList.touches;\n\n      this.domElement.addEventListener(\"touchstart\", function () {\n        this.pointer = this.touch;\n        this.pointers = this.touchList.touches;\n      }.bind(this));\n      this.domElement.addEventListener(\"mouseover\", function () {\n        this.pointer = this.mouse;\n        this.pointers = [this.mouse];\n      }.bind(this));\n\n      // keyboard event\n      this.keyboard.on('keydown', function(e) {\n        this.currentScene && this.currentScene.flare('keydown', {\n          keyCode: e.keyCode,\n        });\n      }.bind(this));\n      this.keyboard.on('keyup', function(e) {\n        this.currentScene && this.currentScene.flare('keyup', {\n          keyCode: e.keyCode,\n        });\n      }.bind(this));\n      this.keyboard.on('keypress', function(e) {\n        this.currentScene && this.currentScene.flare('keypress', {\n          keyCode: e.keyCode,\n        });\n      }.bind(this));\n\n      // click 対応\n      var eventName = phina.isMobile() ? 'touchend' : 'mouseup';\n      this.domElement.addEventListener(eventName, this._checkClick.bind(this));\n\n      // 決定時の処理をオフにする(iPhone 時のちらつき対策)\n      this.domElement.addEventListener(\"touchstart\", function(e) { e.stop(); });\n      this.domElement.addEventListener(\"touchmove\", function(e) { e.stop(); });\n\n      // ウィンドウフォーカス時イベントリスナを登録\n      phina.global.addEventListener('focus', function() {\n        this.flare('focus');\n        this.currentScene.flare('focus');\n      }.bind(this), false);\n      // ウィンドウブラー時イベントリスナを登録\n      phina.global.addEventListener('blur', function() {\n        this.flare('blur');\n        this.currentScene.flare('blur');\n      }.bind(this), false);\n\n      // 更新関数を登録\n      this.on('enterframe', function() {\n        this.mouse.update();\n        this.touch.update();\n        this.touchList.update();\n        this.keyboard.update();\n      });\n    },\n\n    _checkClick: function(e) {\n      var _check = function(element) {\n        if (element.children.length > 0) {\n          element.children.each(function(child) {\n            _check(child);\n          });\n        }\n        if (element._clicked && element.has('click')) {\n          element.flare('click');\n        }\n        element._clicked = false;\n      };\n\n      _check(this.currentScene);\n    },\n\n  });\n\n  \n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.display.CanvasApp\n   * \n   */\n  phina.define('phina.display.CanvasApp', {\n    superClass: 'phina.display.DomApp',\n\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      options = (options || {}).$safe(phina.display.CanvasApp.defaults);\n      \n      if (!options.query && !options.domElement) {\n        options.domElement = document.createElement('canvas');\n        if (options.append) {\n          document.body.appendChild(options.domElement);\n        }\n      }\n      this.superInit(options);\n\n\n      this.gridX = phina.util.Grid({\n        width: options.width,\n        columns: options.columns,\n      });\n      this.gridY = phina.util.Grid({\n        width: options.height,\n        columns: options.columns,\n      });\n\n      this.canvas = phina.graphics.Canvas(this.domElement);\n      this.canvas.setSize(options.width, options.height);\n\n      this.backgroundColor = (options.backgroundColor !== undefined) ? options.backgroundColor : 'white';\n\n      this.replaceScene(phina.display.DisplayScene({\n        width: options.width,\n        height: options.height,\n      }));\n\n      if (options.fit) {\n        this.fitScreen();\n      }\n\n      if (options.pixelated) {\n        // チラつき防止\n        // https://drafts.csswg.org/css-images/#the-image-rendering\n        this.domElement.style.imageRendering = 'pixelated';\n      }\n\n      // pushScene, popScene 対策\n      this.on('push', function() {\n        // onenter 対策で描画しておく\n        this._draw();\n      });\n    },\n\n    _draw: function() {\n      if (this.backgroundColor) {\n        this.canvas.clearColor(this.backgroundColor);\n      } else {\n        this.canvas.clear();\n      }\n\n      if (this.currentScene.canvas) {\n        this.currentScene._render();\n\n        this._scenes.each(function(scene) {\n          var c = scene.canvas;\n          if (c) {\n            this.canvas.context.drawImage(c.domElement, 0, 0, c.width, c.height);\n          }\n        }, this);\n      }\n    },\n\n    fitScreen: function() {\n      this.canvas.fitScreen();\n    },\n\n    _static: {\n      defaults: {\n        width: 640,\n        height: 960,\n        columns: 12,\n        fit: true,\n        append: true,\n      },\n    },\n\n  });\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.effect.Wave\n   * Button\n   */\n  phina.define('phina.effect.Wave', {\n    superClass: 'phina.display.CircleShape',\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      options = (options || {}).$safe({\n        fill: 'white',\n        stroke: false,\n      });\n\n      this.superInit(options);\n\n      var tweener = phina.accessory.Tweener().attachTo(this);\n      tweener\n        .to({scaleX:2, scaleY:2, alpha:0}, 500)\n        .call(function() {\n          this.remove();\n        }, this);\n    },\n  });\n\n});\n\n\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.ui.Button\n   * Button\n   */\n  phina.define('phina.ui.Button', {\n    superClass: 'phina.display.Shape',\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      options = (options || {}).$safe(phina.ui.Button.defaults);\n      this.superInit(options);\n\n      this.cornerRadius = options.cornerRadius;\n      this.text         = options.text;\n      this.fontColor    = options.fontColor;\n      this.fontSize     = options.fontSize;\n      this.fontWeight     = options.fontWeight;\n      this.fontFamily   = options.fontFamily;\n\n      this.setInteractive(true);\n      this.on('pointend', function() {\n        this.flare('push');\n      });\n    },\n    prerender: function(canvas) {\n      canvas.roundRect(-this.width/2, -this.height/2, this.width, this.height, this.cornerRadius);\n    },\n\n    postrender: function(canvas) {\n      var context = canvas.context;\n      // text\n      var font = \"{fontWeight} {fontSize}px {fontFamily}\".format(this);\n      context.font = font;\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = this.fontColor;\n      context.fillText(this.text, 0, 0);\n    },\n\n    _static: {\n      defaults: {\n        width: 200,\n        height: 80,\n        backgroundColor: 'transparent',\n        fill: 'hsl(200, 80%, 60%)',\n        stroke: null,\n\n        cornerRadius: 8,\n        text: 'Hello',\n        fontColor: 'white',\n        fontSize: 32,\n        fontWeight: '',\n        fontFamily: \"'HiraKakuProN-W3'\", // Hiragino or Helvetica,\n      },\n    },\n\n    _defined: function() {\n      phina.display.Shape.watchRenderProperty.call(this, 'cornerRadius');\n      phina.display.Shape.watchRenderProperty.call(this, 'text');\n      phina.display.Shape.watchRenderProperty.call(this, 'fontColor');\n      phina.display.Shape.watchRenderProperty.call(this, 'fontSize');\n      phina.display.Shape.watchRenderProperty.call(this, 'fontFamily');\n    },\n\n  });\n\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.ui.Gauge\n   * \n   */\n  phina.define('phina.ui.Gauge', {\n    superClass: 'phina.display.Shape',\n\n    init: function(options) {\n      options = ({}).$safe(options, {\n        width: 256,\n        height: 32,\n        backgroundColor: 'transparent',\n        fill: 'white',\n        stroke: '#aaa',\n        strokeWidth: 4,\n\n        value: 100,\n        maxValue: 100,\n        gaugeColor: '#44f',\n        cornerRadius: 0,\n      });\n\n      this.superInit(options);\n\n      this._value = options.value;\n      this.maxValue = options.maxValue;\n      this.gaugeColor = options.gaugeColor;\n      this.cornerRadius = options.cornerRadius;\n\n      this.visualValue = options.value;\n      this.animation = true;\n      this.animationTime = 1*1000;\n    },\n\n    /**\n     * 満タンかをチェック\n     */\n    isFull: function() {\n      return this.value === this.maxValue;\n    },\n\n    /**\n     * 空っぽかをチェック\n     */\n    isEmpty: function() {\n      return this.value === 0;\n    },\n\n    setValue: function(value) {\n      value = Math.clamp(value, 0, this._maxValue);\n\n      // end when now value equal value of argument\n      if (this.value === value) return ;\n\n      // fire value change event\n      this.flare('change');\n\n      this._value = value;\n\n      if (this.animation) {\n        var range = Math.abs(this.visualValue-value);\n        var time = (range/this.maxValue)*this.animationTime;\n\n        this.tweener.ontween = function() {\n          this._dirtyDraw = true;\n        }.bind(this);\n        this.tweener\n          .clear()\n          .to({'visualValue': value}, time)\n          .call(function() {\n            this.flare('changed');\n            if (this.isEmpty()) {\n              this.flare('empty');\n            }\n            else if (this.isFull()) {\n              this.flare('full');\n            }\n          }, this);\n      }\n      else {\n        this.visualValue = value;\n        this.flare('changed');\n        if (this.isEmpty()) {\n          this.flare('empty');\n        }\n        else if (this.isFull()) {\n          this.flare('full');\n        }\n      }\n    },\n\n    getRate: function() {\n      var rate = this.visualValue/this.maxValue;\n      return rate;\n    },\n\n    prerender: function(canvas) {\n      canvas.roundRect(-this.width/2, -this.height/2, this.width, this.height, this.cornerRadius);\n    },\n\n    postrender: function(canvas) {\n      var rate = this.getRate();\n      canvas.context.fillStyle = this.gaugeColor;\n      canvas.context.save();\n      canvas.context.clip();\n      canvas.fillRect(-this.width/2, -this.height/2, this.width*rate, this.height);\n      canvas.context.restore();\n    },\n\n    _accessor: {\n      value: {\n        get: function() {\n          return this._value;\n        },\n        set: function(v) {\n          this.setValue(v);\n        },\n      },\n    },\n\n    _defined: function() {\n      phina.display.Shape.watchRenderProperty.call(this, 'value');\n      phina.display.Shape.watchRenderProperty.call(this, 'maxValue');\n      phina.display.Shape.watchRenderProperty.call(this, 'gaugeColor');\n      phina.display.Shape.watchRenderProperty.call(this, 'cornerRadius');\n    },\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.ui.CircleGauge\n   * \n   */\n  phina.define('phina.ui.CircleGauge', {\n    superClass: 'phina.ui.Gauge',\n\n    init: function(options) {\n      options = (options || {}).$safe({\n        backgroundColor: 'transparent',\n        fill: '#aaa',\n        stroke: '#222',\n\n        radius: 64,\n        anticlockwise: true,\n        showPercentage: false, // TODO\n      });\n\n      this.superInit(options);\n\n      this.setBoundingType('circle');\n\n      this.radius = options.radius;\n      this.anticlockwise = options.anticlockwise;\n      this.showPercentage = options.showPercentage;\n    },\n\n    prerender: function(canvas) {\n      var rate = this.getRate();\n      var end = (Math.PI*2)*rate;\n      this.startAngle = 0;\n      this.endAngle = end;\n      \n      this.canvas.rotate(-Math.PI*0.5);\n      this.canvas.scale(1, -1);\n    },\n\n    renderFill: function(canvas) {\n      canvas.fillPie(0, 0, this.radius, this.startAngle, this.endAngle);\n    },\n\n    renderStroke: function(canvas) {\n      canvas.strokeArc(0, 0, this.radius, this.startAngle, this.endAngle);\n    },\n\n    postrender: function() {\n      // if (this.showPercentage) {\n      //   // TODO:\n      //   var left = Math.max(0, this.limit-this.time);\n      //   this.label.text = Math.ceil(left/1000)+'';\n      // }\n    },\n\n  });\n\n\n\n});\n\n\n\nphina.namespace(function() {\n\n  var textWidthCache = {};\n\n  var LabelArea = phina.define('phina.ui.LabelArea', {\n    superClass: 'phina.display.Label',\n\n    _lineUpdate: true,\n\n    init: function(options) {\n      options = {}.$safe(options, LabelArea.defaults);\n      this.superInit(options);\n\n      this.verticalAlign = options.verticalAlign;\n      this.scroll = options.scroll || phina.geom.Vector2();\n      this.scrollX = options.scrollX;\n      this.scrollY = options.scrollY;\n    },\n\n    calcCanvasWidth: function() {\n      return this.width + this.padding * 2;\n    },\n\n    calcCanvasHeight: function() {\n      return this.height + this.padding * 2;\n    },\n    getOffsetY: function() {\n      if (typeof this.verticalAlign === 'number') {\n        return this.verticalAlign;\n      }\n      return LabelArea.verticalAlignToOffsetMap[this.verticalAlign] || 0;\n    },\n\n    getOffsetX: function() {\n      return LabelArea.alignToOffsetMap[this.align] || 0;\n    },\n\n    getTextWidthCache: function() {\n      var cache = textWidthCache[this.font];\n      return cache || (textWidthCache[this.font] = {});\n    },\n    \n    getLines: function() {\n      if (this._lineUpdate === false) {\n        return this._lines;\n      }\n\n      this._lineUpdate = false;\n      var lines = this._lines = (this.text + '').split('\\n');\n\n      if (this.width < 1) return lines;\n\n      var rowWidth = this.width;\n\n      var context = this.canvas.context;\n      context.font = this.font;\n      //どのへんで改行されるか目星つけとく\n      var pos = rowWidth / context.measureText('あ').width | 0;\n\n      var cache = this.getTextWidthCache();\n      for (var i = lines.length - 1; 0 <= i; --i) {\n        var text = lines[i];\n        if (text === '') {\n          continue;\n        }\n\n        var j = 0;\n        var breakFlag = false;\n        var char;\n        while (true) {\n          //if (rowWidth > (cache[text] || (cache[text] = dummyContext.measureText(text).width))) break;\n\n          var len = text.length;\n          if (pos >= len) pos = len - 1;\n          char = text.substring(0, pos);\n          if (!cache[char]) {\n            cache[char] = context.measureText(char).width;\n          }\n          var textWidth = cache[char];\n\n          if (rowWidth < textWidth) {\n            do {\n              char = text[--pos];\n              if (!cache[char]) {\n                cache[char] = context.measureText(char).width;\n              }\n              textWidth -= cache[char];\n            } while (rowWidth < textWidth);\n\n          } else {\n\n            do {\n              char = text[pos++];\n              if (pos >= len) {\n                breakFlag = true;\n                break;\n              }\n              if (!cache[char]) {\n                cache[char] = context.measureText(char).width;\n              }\n              textWidth += cache[char];\n            } while (rowWidth >= textWidth);\n\n            --pos;\n          }\n          if (breakFlag) {\n            break;\n          }\n          //0 のときは無限ループになるので、1にしとく\n          if (pos === 0) pos = 1;\n\n          lines.splice(i + j, 1, text.substring(0, pos), text = text.substring(pos, len));\n          ++j;\n        }\n\n      }\n\n      return lines;\n\n    },\n\n    prerender: function(canvas) {\n      var context = canvas.context;\n      context.font = this.font;\n      context.textAlign = this.align;\n      context.textBaseline = this.baseline;\n\n      var text = this.text + '';\n      var lines = this.getLines();\n      var length = lines.length;\n      var width = this.width;\n      var height = this.height;\n\n      var fontSize = this.fontSize;\n      var lineSize = fontSize * this.lineHeight;\n      var offsetX = this.getOffsetX() * width;\n      var offsetY = this.getOffsetY();\n      if (offsetY === 0) {\n        offsetY = -Math.floor(length / 2) * lineSize;\n        offsetY += ((length + 1) % 2) * (lineSize / 2);\n      }\n      else if (offsetY < 0) {\n        offsetY *= height;\n      }\n      else {\n        offsetY = offsetY * height - length * lineSize + lineSize;\n      }\n\n      offsetY -= this.scrollY;\n      offsetX -= this.scrollX;\n      var start = (offsetY + height / 2) / -lineSize | 0;\n      if (start < 0) { start = 0; }\n\n      var end = (height / 2 - offsetY + lineSize * 2) / lineSize | 0;\n      lines = lines.filter(function(line, i) {\n        return start <= i && end > i;\n      });\n\n      this.lines = lines;\n      this.offsetX = offsetX;\n      this.offsetY = offsetY;\n      this.lineSize = lineSize;\n      this.start = start;\n    },\n\n    renderFill: function(canvas) {\n      var context = canvas.context;\n      var offsetX = this.offsetX;\n      var offsetY = this.offsetY;\n      var lineSize = this.lineSize;\n      var start = this.start;\n      this.lines.forEach(function(line, i) {\n        context.fillText(line, offsetX, (start + i) * lineSize + offsetY);\n      }, this);\n    },\n\n    renderStroke: function(canvas) {\n      var context = canvas.context;\n      var offsetX = this.offsetX;\n      var offsetY = this.offsetY;\n      var lineSize = this.lineSize;\n      var start = this.start;\n      this.lines.forEach(function(line, i) {\n        context.strokeText(line, offsetX, (start + i) * lineSize + offsetY);\n      }, this);\n    },\n\n    _accessor: {\n      text: {\n        get: function() {\n          return this._text;\n        },\n        set: function(v) {\n          this._text = v;\n        }\n      },\n\n      scrollX: {\n        get: function() {\n          return this.scroll.x;\n        },\n        set: function(v) {\n          this.scroll.x = v;\n        },\n      },\n\n      scrollY: {\n        get: function() {\n          return this.scroll.y;\n        },\n        set: function(v) {\n          this.scroll.y = v;\n        },\n      },\n    },\n    _static: {\n      defaults: {\n        verticalAlign: 'top',\n        align: 'left',\n        baseline: 'top',\n        width: 320,\n        height: 320,\n        scrollX: 0,\n        scrollY: 0,\n      },\n      alignToOffsetMap: {\n        start: -0.5,\n        left: -0.5,\n        center: 0,\n        end: 0.5,\n        right: 0.5,\n      },\n\n      verticalAlignToOffsetMap: {\n        top: -0.5,\n        center: 0,\n        middle: 0,\n        bottom: 0.5,\n      },\n    },\n\n    _defined: function() {\n      var func = function(newVal, oldVal) {\n        if((this._lineUpdate === false) && (newVal !== oldVal)){\n          this._lineUpdate = true;\n        }\n      };\n\n      [\n        'text',\n        'width',\n        'fontSize',\n        'fontWeight',\n        'fontFamily'\n      ].forEach(function(key) {\n        this.$watch(key, func);\n      }, this.prototype);\n\n      phina.display.Shape.watchRenderProperties.call(this ,[\n        'verticalAlign',\n        'text',\n        'scroll',\n        'scrollX',\n        'scrollY'\n      ]);\n    },\n\n\n    enableScroll: function() {\n      //   this.setInteractive(true);\n      //   var physical = phina.accessory.Physical();\n      //   physical.attachTo(this);\n      //   physical.friction = 0.8;\n      //   var lastForce = 0;\n      //   var lastMove = 0;\n      //   this.on('pointstart', function(e){\n      //     lastForce = physical.velocity.y;\n      //     lastMove = 0;\n      //     physical.force(0, 0);\n      //   });\n      //   this.on('pointmove', function(e){\n      //     var p = e.pointer.deltaPosition;\n      //     lastMove = p.y;\n      //     this.scrollY += lastMove;\n      //   });\n\n      //   this.on('pointend', function(e){\n      //     physical.force(0, lastForce + lastMove);\n      //   });\n\n      return this;\n    },\n\n  });\n\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.ManagerScene\n   * \n   */\n  phina.define('phina.game.ManagerScene', {\n    superClass: 'phina.app.Scene',\n    /**\n     * @constructor\n     */\n    init: function(params) {\n      this.superInit();\n\n      this.setScenes(params.scenes);\n\n      this.on(\"enter\", function() {\n        this.gotoScene(params.startLabel || 0);\n      }.bind(this));\n\n      this.on(\"resume\", this.onnext.bind(this));\n\n      this.commonArguments = {};\n    },\n\n\n    /**\n     * scenes をセット\n     */\n    setScenes: function(scenes) {\n      this.scenes = scenes;\n      this.sceneIndex = 0;\n\n      return this;\n    },\n\n\n    replaceScene: function(label, args) {\n      var index = (typeof label == 'string') ? this.labelToIndex(label) : label||0;\n\n      var data = this.scenes[index];\n\n      if (!data) {\n        console.error('phina.js error: `{0}` に対応するシーンがありません.'.format(label));\n      }\n\n      var klass = phina.using(data.className);\n      if (typeof klass !== 'function') {\n        klass = phina.using('phina.game.' + data.className);\n      }\n\n      var initArguments = {}.$extend(data.arguments, args);\n      var scene = klass.call(null, initArguments);\n      if (!scene.nextLabel) {\n          scene.nextLabel = data.nextLabel;\n      }\n      if (!scene.nextArguments) {\n          scene.nextArguments = data.nextArguments;\n      }\n      this.app.replaceScene(scene);\n\n      this.sceneIndex = index;\n\n      return this;\n    },\n\n\n    /**\n     * index(or label) のシーンへ飛ぶ\n     */\n    gotoScene: function(label, args) {\n      var index = (typeof label == 'string') ? this.labelToIndex(label) : label||0;\n\n      var data = this.scenes[index];\n\n      if (!data) {\n        console.error('phina.js error: `{0}` に対応するシーンがありません.'.format(label));\n      }\n\n      var klass = phina.using(data.className);\n      if (typeof klass !== 'function') {\n        klass = phina.using('phina.game.' + data.className);\n      }\n\n      var initArguments = {}.$extend(data.arguments, args);\n      var scene = klass.call(null, initArguments);\n      if (!scene.nextLabel) {\n          scene.nextLabel = data.nextLabel;\n      }\n      if (!scene.nextArguments) {\n          scene.nextArguments = data.nextArguments;\n      }\n      this.app.pushScene(scene);\n\n      this.sceneIndex = index;\n\n      return this;\n    },\n\n    /**\n     * 次のシーンへ飛ぶ\n     */\n    gotoNext: function(args) {\n      var data = this.scenes[this.sceneIndex];\n      var nextIndex = null;\n\n      // 次のラベルが設定されていた場合\n      if (data.nextLabel) {\n          nextIndex = this.labelToIndex(data.nextLabel);\n      }\n      // 次のシーンに遷移\n      else if (this.sceneIndex+1 < this.scenes.length) {\n          nextIndex = this.sceneIndex+1;\n      }\n\n      if (nextIndex !== null) {\n          this.gotoScene(nextIndex, args);\n      }\n      else {\n          this.flare(\"finish\");\n      }\n\n      return this;\n    },\n\n    /**\n     * シーンインデックスを取得\n     */\n    getCurrentIndex: function() {\n      return this.sceneIndex;\n    },\n\n    /**\n     * シーンラベルを取得\n     */\n    getCurrentLabel: function() {\n      return this.scenes[this.sceneIndex].label;\n    },\n\n    /**\n     * ラベルからインデックスに変換\n     */\n    labelToIndex: function(label) {\n      var data = this.scenes.filter(function(data) {\n        return data.label == label;\n      })[0];\n\n      return this.scenes.indexOf(data);\n    },\n\n    /**\n     * インデックスからラベルに変換\n     */\n    indexToLabel: function(index) {\n      return this.scenes[index].label;\n    },\n\n    onnext: function(e) {\n      var nextLabel = e.prevScene.nextLabel;\n      var nextArguments = e.prevScene.nextArguments;\n      if (nextLabel) {\n        this.gotoScene(nextLabel, nextArguments);\n      }\n      else {\n        this.gotoNext(nextArguments);\n      }\n    },\n\n  });\n\n});\n\n/*\n *\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.SplashScene\n   * \n   */\n  phina.define('phina.game.SplashScene', {\n    superClass: 'phina.display.DisplayScene',\n\n    init: function(options) {\n      this.superInit(options);\n\n      var defaults = phina.game.SplashScene.defaults;\n\n      var texture = phina.asset.Texture();\n      texture.load(defaults.imageURL).then(function() {\n        this._init();\n      }.bind(this));\n      this.texture = texture;\n    },\n\n    _init: function() {\n      this.sprite = phina.display.Sprite(this.texture).addChildTo(this);\n\n      this.sprite.setPosition(this.gridX.center(), this.gridY.center());\n      this.sprite.alpha = 0;\n\n      this.sprite.tweener\n        .clear()\n        .to({alpha:1}, 500, 'easeOutCubic')\n        .wait(1000)\n        .to({alpha:0}, 500, 'easeOutCubic')\n        .wait(250)\n        .call(function() {\n          this.exit();\n        }, this)\n        ;\n    },\n\n    _static: {\n      defaults: {\n        imageURL: 'http://cdn.rawgit.com/phi-jp/phina.js/develop/logo.png',\n      },\n    },\n  });\n\n});\n\n/*\n * TitleScene\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.TitleScene\n   * \n   */\n  phina.define('phina.game.TitleScene', {\n    superClass: 'phina.display.DisplayScene',\n    /**\n     * @constructor\n     */\n    init: function(params) {\n      this.superInit(params);\n\n      params = ({}).$safe(params, phina.game.TitleScene.defaults);\n\n      this.backgroundColor = params.backgroundColor;\n\n      this.fromJSON({\n        children: {\n          titleLabel: {\n            className: 'phina.display.Label',\n            arguments: {\n              text: params.title,\n              fill: params.fontColor,\n              stroke: false,\n              fontSize: 64,\n            },\n            x: this.gridX.center(),\n            y: this.gridY.span(4),\n          }\n        }\n      });\n\n      if (params.exitType === 'touch') {\n        this.fromJSON({\n          children: {\n            touchLabel: {\n              className: 'phina.display.Label',\n              arguments: {\n                text: \"TOUCH START\",\n                fill: params.fontColor,\n                stroke: false,\n                fontSize: 32,\n              },\n              x: this.gridX.center(),\n              y: this.gridY.span(12),\n            },\n          },\n        });\n\n        this.on('pointend', function() {\n          this.exit();\n        });\n      }\n    },\n\n    _static: {\n      defaults: {\n        title: 'phina.js games',\n        message: '',\n        width: 640,\n        height: 960,\n\n        fontColor: 'white',\n        backgroundColor: 'hsl(200, 80%, 64%)',\n        backgroundImage: '',\n\n        exitType: 'touch',\n      },\n    },\n\n  });\n\n});\n\n/*\n * ResultScene\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.ResultScene\n   *\n   */\n  phina.define('phina.game.ResultScene', {\n    superClass: 'phina.display.DisplayScene',\n    /**\n     * @constructor\n     */\n    init: function(params) {\n      this.superInit(params);\n\n      params = ({}).$safe(params, phina.game.ResultScene.defaults);\n\n      var message = params.message.format(params);\n\n      this.backgroundColor = params.backgroundColor;\n\n      this.fromJSON({\n        children: {\n          scoreText: {\n            className: 'phina.display.Label',\n            arguments: {\n              text: 'score',\n              fill: params.fontColor,\n              stroke: null,\n              fontSize: 48,\n            },\n            x: this.gridX.span(8),\n            y: this.gridY.span(4),\n          },\n          scoreLabel: {\n            className: 'phina.display.Label',\n            arguments: {\n              text: params.score+'',\n              fill: params.fontColor,\n              stroke: null,\n              fontSize: 72,\n            },\n            x: this.gridX.span(8),\n            y: this.gridY.span(6),\n          },\n\n          messageLabel: {\n            className: 'phina.display.Label',\n            arguments: {\n              text: message,\n              fill: params.fontColor,\n              stroke: null,\n              fontSize: 32,\n            },\n            x: this.gridX.center(),\n            y: this.gridY.span(9),\n          },\n\n          shareButton: {\n            className: 'phina.ui.Button',\n            arguments: [{\n              text: '★',\n              width: 128,\n              height: 128,\n              fontColor: params.fontColor,\n              fontSize: 50,\n              cornerRadius: 64,\n              fill: 'rgba(240, 240, 240, 0.5)',\n              // stroke: '#aaa',\n              // strokeWidth: 2,\n            }],\n            x: this.gridX.center(-3),\n            y: this.gridY.span(12),\n          },\n          playButton: {\n            className: 'phina.ui.Button',\n            arguments: [{\n              text: '▶',\n              width: 128,\n              height: 128,\n              fontColor: params.fontColor,\n              fontSize: 50,\n              cornerRadius: 64,\n              fill: 'rgba(240, 240, 240, 0.5)',\n              // stroke: '#aaa',\n              // strokeWidth: 2,\n            }],\n            x: this.gridX.center(3),\n            y: this.gridY.span(12),\n\n            interactive: true,\n            onpush: function() {\n              this.exit();\n            }.bind(this),\n          },\n        }\n      });\n\n      if (params.exitType === 'touch') {\n        this.on('pointend', function() {\n          this.exit();\n        });\n      }\n\n      this.shareButton.onclick = function() {\n        var text = 'Score: {0}\\n{1}'.format(params.score, message);\n        var url = phina.social.Twitter.createURL({\n          text: text,\n          hashtags: params.hashtags,\n          url: params.url,\n        });\n        window.open(url, 'share window', 'width=480, height=320');\n      };\n    },\n\n    _static: {\n      defaults: {\n        score: 16,\n\n        message: 'this is phina.js project.',\n        hashtags: 'phina_js,game,javascript',\n        url: phina.global.location && phina.global.location.href,\n\n        width: 640,\n        height: 960,\n\n        fontColor: 'white',\n        backgroundColor: 'hsl(200, 80%, 64%)',\n        backgroundImage: '',\n      },\n    },\n\n  });\n\n});\n\n/*\n * LoadingScene\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.LoadingScene\n   * \n   */\n  phina.define('phina.game.LoadingScene', {\n    superClass: 'phina.display.DisplayScene',\n\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      options = ({}).$safe(options, phina.game.LoadingScene.defaults);\n      this.superInit(options);\n\n      this.fromJSON({\n        children: {\n          gauge: {\n            className: 'phina.ui.Gauge',\n            arguments: {\n              value: 0,\n              width: this.width,\n              height: 12,\n              fill: '#aaa',\n              stroke: false,\n              gaugeColor: 'hsla(200, 100%, 80%, 0.8)',\n              padding: 0,\n            },\n            x: this.gridX.center(),\n            y: 0,\n            originY: 0,\n          }\n        }\n      });\n\n      var loader = phina.asset.AssetLoader();\n\n      if (options.lie) {\n        this.gauge.animationTime = 10*1000;\n        this.gauge.value = 90;\n\n        loader.onload = function() {\n          this.gauge.animationTime = 0;\n          this.gauge.value = 100;\n        }.bind(this);\n      }\n      else {\n        this.gauge.animationTime = 100;\n        loader.onprogress = function(e) {\n          this.gauge.value = e.progress * 100;\n        }.bind(this);\n      }\n\n      this.gauge.onfull = function() {\n        if (options.exitType === 'auto') {\n          this.app.popScene();\n        }\n        this.flare('loaded');\n      }.bind(this);\n\n      loader.load(options.assets);\n    },\n\n    _static: {\n      defaults: {\n        width: 640,\n        height: 960,\n\n        exitType: 'auto',\n\n        lie: false,\n      },\n    },\n\n  });\n\n});\n\n/*\n * CountScene\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.CountScene\n   * \n   */\n  phina.define('phina.game.CountScene', {\n    superClass: 'phina.display.DisplayScene',\n    /**\n     * @constructor\n     */\n    init: function(options) {\n      this.superInit(options);\n\n      options = (options || {}).$safe(phina.game.CountScene.defaults);\n\n      this.backgroundColor = options.backgroundColor;\n\n      this.fromJSON({\n        children: {\n          label: {\n            className: 'phina.display.Label',\n            arguments: {\n              fill: options.fontColor,\n              fontSize: options.fontSize,\n              stroke: false,\n            },\n            x: this.gridX.center(),\n            y: this.gridY.center(),\n          },\n        }\n      });\n\n      if (options.count instanceof Array) {\n        this.countList = options.count.reverse();\n      }\n      else {\n        this.countList = Array.range(1, options.count+1);\n      }\n      this.counter = this.countList.length;\n      this.exitType = options.exitType;\n\n      this._updateCount();\n    },\n\n    _updateCount: function() {\n      var endFlag = this.counter <= 0;\n      var index = --this.counter;\n\n      this.label.text = this.countList[index];\n\n      this.label.scale.set(1, 1);\n      this.label.tweener\n        .clear()\n        .to({\n          scaleX: 1,\n          scaleY: 1,\n          alpha: 1,\n        }, 250)\n        .wait(500)\n        .to({\n          scaleX: 1.5,\n          scaleY: 1.5,\n          alpha: 0.0\n        }, 250)\n        .call(function() {\n          if (this.counter <= 0) {\n            this.flare('finish');\n            if (this.exitType === 'auto') {\n              this.app.popScene();\n            }\n          }\n          else {\n            this._updateCount();\n          }\n        }, this);\n    },\n\n\n    _static: {\n      defaults: {\n        count: 3,\n\n        width: 640,\n        height: 960,\n\n        fontColor: 'white',\n        fontSize: 164,\n        backgroundColor: 'rgba(50, 50, 50, 1)',\n\n        exitType: 'auto',\n      },\n    },\n\n  });\n\n});\n\n/*\n * PauseScene\n */\n\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.PauseScene\n   *\n   */\n  phina.define('phina.game.PauseScene', {\n    superClass: 'phina.display.DisplayScene',\n    /**\n     * @constructor\n     */\n    init: function(params) {\n      this.superInit(params);\n\n      params = ({}).$safe(params, phina.game.PauseScene.defaults);\n\n      this.backgroundColor = params.backgroundColor;\n\n      this.fromJSON({\n        children: {\n          text: {\n            className: 'phina.display.Label',\n            arguments: {\n              text: 'Pause',\n              fill: params.fontColor,\n              stroke: null,\n              fontSize: 48,\n            },\n            x: this.gridX.center(),\n            y: this.gridY.center(),\n          },\n        }\n      });\n\n      if (params.exitType === 'touch') {\n        this.on('pointend', function() {\n          this.exit();\n        });\n      }\n    },\n\n    _static: {\n      defaults: {\n        width: 640,\n        height: 960,\n\n        fontColor: 'white',\n        backgroundColor: 'hsla(0, 0%, 0%, 0.85)',\n\n        exitType: 'touch',\n      },\n    },\n\n  });\n\n});\n\nphina.namespace(function() {\n\n  /**\n   * @class phina.game.GameApp\n   * \n   */\n  phina.define('phina.game.GameApp', {\n    superClass: 'phina.display.CanvasApp',\n\n    init: function(options) {\n\n      options = (options || {}).$safe({\n        startLabel: 'title',\n      });\n      this.superInit(options);\n\n      var startLabel = options.startLabel || 'title';\n\n      var scenes = options.scenes || [\n        {\n          className: 'SplashScene',\n          label: 'splash',\n          nextLabel: 'title',\n        },\n\n        {\n          className: 'TitleScene',\n          label: 'title',\n          nextLabel: 'main',\n        },\n        {\n          className: 'MainScene',\n          label: 'main',\n          nextLabel: 'result',\n        },\n        {\n          className: 'ResultScene',\n          label: 'result',\n          nextLabel: 'title',\n        },\n      ];\n\n      scenes = scenes.each(function(s) {\n        s.arguments = s.arguments || options;\n      });\n\n      var scene = phina.game.ManagerScene({\n        startLabel: startLabel,\n        scenes: scenes,\n      });\n\n      if (options.assets) {\n        var loadingOptions = ({}).$extend(options, {\n          exitType: '',\n        });\n        var loadingClass = phina.global.LoadingScene || phina.game.LoadingScene;\n        var loading = loadingClass(loadingOptions);\n        this.replaceScene(loading);\n\n        loading.onloaded = function() {\n          this.replaceScene(scene);\n          if (options.debug) {\n            this._enableDebugger();\n          }\n        }.bind(this);\n\n      }\n      else {\n        this.replaceScene(scene);\n        if (options.debug) {\n          this._enableDebugger();\n        }\n      }\n\n      // 自動でポーズする\n      if (options.autoPause) {\n        this.on('blur', function() {\n          var pauseScene = phina.game.PauseScene();\n          this.pushScene(pauseScene);\n        });\n      }\n    },\n\n    _enableDebugger: function() {\n      if (this.gui) return ;\n\n      this.enableDatGUI(function(gui) {\n        var f = gui.addFolder('scenes');\n        var funcs = {};\n        this.rootScene.scenes.each(function(scene) {\n          funcs[scene.label] = function() {\n            this.rootScene.replaceScene(scene.label);\n            console.log(this._scenes.length);\n          }.bind(this);\n          return scene;\n        }, this);\n\n        funcs.forIn(function(key, value) {\n          f.add(funcs, key);\n        });\n        f.open();\n\n        this.gui = gui;\n      }.bind(this));\n    },\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  var BASE_URL = 'http://';\n\n  /**\n   * @class phina.social.Twitter\n   * \n   */\n  phina.define('phina.social.Twitter', {\n    /**\n     * @constructor\n     */\n    init: function(options) {\n    },\n\n    _static: {\n      baseURL: 'http://twitter.com/intent',\n      defaults: {\n        // type: 'tweet',\n        text: 'Hello, world!',\n        // screen_name: 'phi_jp',\n        hashtags: 'javascript,phina',\n        // url: 'http://github.com/phi-jp/phina.js',\n        url: phina.global.location && phina.global.location.href,\n        // via: 'phi_jp',\n      },\n\n      createURL: function(options) {\n        options = (options || {}).$safe(this.defaults);\n\n        var queries = [];\n        var euc = encodeURIComponent;\n        options.forIn(function(key, value) {\n          var str = key + '=' + euc(value);\n          queries.push(str);\n        });\n\n        var url = '{baseURL}/{type}?{query}'.format({\n          baseURL: this.baseURL,\n          // type: options.type,\n          type: 'tweet',\n          query: queries.join('&'),\n        });\n\n        return url;\n      },\n    }\n  });\n\n});\n\n\nphina.namespace(function() {\n\n  if (!phina.global.Box2D) {\n    return ;\n  }\n\n  // http://box2dweb-doc.readthedocs.org/ja/latest/00_ready.html#id2\n  phina.box2d = {\n    b2: {\n      Vec2          : Box2D.Common.Math.b2Vec2,\n      AABB          : Box2D.Collision.b2AABB,\n      BodyDef       : Box2D.Dynamics.b2BodyDef,\n      Body          : Box2D.Dynamics.b2Body,\n      FixtureDef    : Box2D.Dynamics.b2FixtureDef,\n      Fixture       : Box2D.Dynamics.b2Fixture,\n      World         : Box2D.Dynamics.b2World,\n      MassData      : Box2D.Collision.Shapes.b2MassData,\n      PolygonShape  : Box2D.Collision.Shapes.b2PolygonShape,\n      CircleShape   : Box2D.Collision.Shapes.b2CircleShape,\n      DebugDraw     : Box2D.Dynamics.b2DebugDraw,\n      MouseJointDef : Box2D.Dynamics.Joints.b2MouseJointDef\n    },\n  };\n\n  var b2 = phina.box2d.b2;\n\n  /**\n   * @class\n   */\n  phina.define('phina.box2d.Box2dLayer', {\n    superClass: 'phina.display.Layer',\n\n\n    init: function(params) {\n      this.superInit(params);\n\n      params = (params || {}).$safe({\n        worldScale: 50, // or 50\n      });\n\n      // 重力と物理世界の設定\n      var gravity = new b2.Vec2(0, 9.8);\n      var world = new b2.World(gravity, true);\n      \n      this.world = world;\n      this.world._scale = params.worldScale;\n\n      this._setupDebugDraw();\n    },\n\n    _setupDebugDraw: function() {\n      // デバッグ用スプライト\n      var debugDraw = new b2.DebugDraw();\n      debugDraw.SetSprite(this.canvas.context);\n      debugDraw.SetDrawScale(this.world._scale);\n      debugDraw.SetLineThickness(1.0);\n      debugDraw.SetAlpha(1);\n      debugDraw.SetFillAlpha(0.4);\n      debugDraw.SetFlags(b2.DebugDraw.e_shapeBit);\n      this.world.SetDebugDraw(debugDraw);\n    },\n\n    createBody: function(params) {\n      params.world = this.world;\n      var body = phina.box2d.Box2dBody(params);\n      return body;\n    },\n\n    update: function(app) {\n      // var timeStep = app.ticker.frameTime/1000;\n      var timeStep = app.ticker.deltaTime/1000;\n      var velocityIterations = 10;\n      var positionIterations = 10;\n      // 物理空間の更新\n      this.world.Step(timeStep,velocityIterations,positionIterations);\n    },\n\n    draw: function(canvas) {\n      // debug画面の更新\n      this.world.ClearForces();\n      this.world.DrawDebugData();\n      var domElement = this.canvas.domElement;\n      canvas.context.drawImage(domElement, 0, 0, domElement.width, domElement.height);\n    },\n  });\n});\n\n\n\n\nphina.namespace(function() {\n  \n  if (!phina.global.Box2D) {\n    return ;\n  }\n\n  var b2 = phina.box2d.b2;\n\n  /**\n   * @class\n   */\n  phina.define('phina.box2d.Box2dBody', {\n    superClass: 'phina.accessory.Accessory',\n\n\n    init: function(params) {\n      this.superInit();\n\n      this.world = params.world;\n      this.type = params.type;\n      this.shape = params.shape;\n\n      this._init();\n\n      this.on('attached', function() {\n        var target = this.target;\n\n        var p = new b2.Vec2(target.x/this.world._scale, target.y/this.world._scale);\n        this.body.SetPosition(p);\n        this.body.SetAngle(target.rotation * Math.PI/180);\n\n        this._bindFixture(this.target);\n      });\n    },\n\n    update: function(app) {\n      var target = this.target;\n\n      target.x = this.body.GetPosition().x * this.world._scale;\n      target.y = this.body.GetPosition().y * this.world._scale;\n      target.rotation = this.body.GetAngle() * 180/Math.PI;\n    },\n\n    _init: function() {\n      this._setupBody();\n      return this;\n    },\n\n    _setupBody: function() {\n      var self = this;\n      var world = this.world;\n      var scale = world._scale;\n      var bodyDef = new b2.BodyDef();\n      bodyDef.type = (function() {\n        return {\n          'dynamic': b2.Body.b2_dynamicBody, \n          'kinematic': b2.Body.b2_kinematicBody, \n          'static': b2.Body.b2_staticBody, \n        }[self.type || 'dynamic'];\n      })();\n      bodyDef.position.Set(0, 0);\n      var body = world.CreateBody(bodyDef);\n      this.body = body;\n\n      return this;\n    },\n\n    _bindFixture: function() {\n      var self = this;\n      var target = this.target;\n      var fixture = this.body.GetFixtureList();\n      if (fixture) {\n        this.body.DestroyFixture(fixture);\n      }\n\n      // \n      var world = this.world;\n      var scale = world._scale;\n      // shape を取得\n      var shape = (function() {\n        var shape = null;\n        if (self.shape === 'circle') {\n          shape = new b2.CircleShape(target.radius / scale);\n        }\n        else if (self.shape === 'box'){\n          shape = new b2.PolygonShape();\n          shape.SetAsBox(target.width / scale / 2, target.height / scale / 2 );\n        }\n        else {\n          shape = new b2.CircleShape(32 / scale);\n        }\n        return shape;\n      })();\n\n      var fixture = new b2.FixtureDef();\n      fixture.shape = shape;\n      // TODO: このへんは引数で指定できるようにする\n      fixture.density = 1;\n      fixture.friction = 0.3;\n      fixture.restitution = 0.5;\n      this.body.CreateFixture(fixture);\n    },\n  });\n});\n\n\n\n\nphina.namespace(function() {\n\n\n  phina.define('phina.display.CanvasElement', {\n    superClass: 'phina.display.DisplayElement',\n\n    init: function(options) {\n      this.superInit(options);\n\n      console.warn('[phina warn] CanvasElement は非推奨になりました. DisplayElement をお使いください.');\n    }\n  });\n\n\n  phina.define('phina.display.CanvasScene', {\n    superClass: 'phina.display.DisplayScene',\n\n    init: function(options) {\n      this.superInit(options);\n\n      console.warn('[phina warn] CanvasScene は非推奨になりました. DisplayScene をお使いください.');\n    }\n  });\n\n\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/phina.js/build/phina.js\n ** module id = 1\n ** module chunks = 0\n **/","// MainScene クラスを定義\nphina.define('MainScene', {\n  superClass: 'DisplayScene',\n\n  init: function() {\n    this.superInit();\n    // 背景色を指定\n    this.backgroundColor = '#444';\n    // ラベルを生成\n    this.label = Label('Hello, phina.js!').addChildTo(this);\n    this.label.x = this.gridX.center(); // x 座標\n    this.label.y = this.gridY.center(); // y 座標\n    this.label.fill = 'white'; // 塗りつぶし色\n  },\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main_scene.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}